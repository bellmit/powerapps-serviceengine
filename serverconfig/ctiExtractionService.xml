<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ctiExtractionService">


<resultMap class="hmap" id="getCustomerAccountDetailsForCTIExtraction">
<result property="ACCOUNT_ID_MERGE"  javaType="long"/>
<result property="ACCOUNT_ID"  javaType="string"/>
<result property="ACCOUNT_NO"  javaType="string"/>
<result property="CUSTOMER_NO"  javaType="string"/>
<result property="CUSTOMER_ID"  javaType="long"/>
<result property="PRODUCT_CATEGORY"  javaType="string"/>
<result property="ACCOUNT_STATUS_DESC"  javaType="string"/>
<result property="OS_BALANCE"  javaType="string"/>
<result property="GROSS_BALANCE"  javaType="string"/>
<result property="MIA"  javaType="string"/>
<result property="NPDD_DD"  javaType="string"/>
<result property="NPDD"  javaType="string"/>
<result property="LAST_PAYMENT_DATE"  javaType="string"/>
<result property="DATE_LAST_ACTIVE"  javaType="string"/>
<result property="FULL_RELEASE_DATE"  javaType="string"/>
<result property="ORIGINAL_MATURITY_DATE"  javaType="string"/>
<result property="MATURITY_DATE"  javaType="string"/>
<result property="NO_PYMT_SINCE_FUNDING"  javaType="string"/>
<result property="RACE"  javaType="string"/>
<result property="STATE_CODE"  javaType="string"/>
<result property="RR_EFFECTIVE_DATE"  javaType="string"/>
<result property="RR_EXPIRY_DATE"  javaType="string"/>
<result property="WORK_LIST_NAME"  javaType="string"/>
<result property="TAB_OPEN"  javaType="string"/>
<result property="TAB_PAID"  javaType="string"/>
<result property="TAB_PTP"  javaType="string"/>
<result property="TAB_BROKEN_PROMISE"  javaType="string"/>
<result property="TAB_FOLLOW_UP"  javaType="string"/>
<result property="TAB_LOST_CONTACT"  javaType="string"/>
<result property="TAB_AGENCY"  javaType="string"/>
<result property="LAST_ACTION_DATE"  javaType="string"/>
<result property="PTP_EXIST"  javaType="string"/>
<result property="PTP_DATE"  javaType="string"/>
<result property="PTP_AMOUNT"  javaType="string"/>
<result property="BROKEN_PROMISE_DATE"  javaType="string"/>
<result property="LAST_PAC_DATE"  javaType="string"/>
<result property="LAST_PAC_STATUS"  javaType="string"/>
<result property="SCHEDULED_DATE"  javaType="string"/>
<result property="SCHEDULED_CALL_CONTACT_NO"  javaType="string"/>
<result property="SELFCURE"  javaType="string"/>
<result property="OCA_ASSIGN"  javaType="string"/>
<result property="OCA_ASSIGN_DATE"  javaType="string"/>
<result property="SPECIAL_STATUS"  javaType="string"/>
<result property="CUSTOMER_NAME"  javaType="string"/>
<result property="CUSTOMER_IC_NO"  javaType="string"/>
</resultMap>

<select id="getCustomerAccountDetailsForCTIExtraction" resultMap="getCustomerAccountDetailsForCTIExtraction" parameterClass="map">
SELECT distinct
A.ID AS ACCOUNT_ID_MERGE, 
A.ID AS ACCOUNT_ID, 
A.ACCOUNT_NO, 
CUSTOMER.CUSTOMER_NO,
customer.id as CUSTOMER_ID,
PTC.CODE AS PRODUCT_CATEGORY,
STATUS.id AS ACCOUNT_STATUS_DESC, 
a.outstanding_balance AS OS_BALANCE, 
a.outstanding_balance - (a.interest_rebate_amount + a.write_off_amount) as GROSS_BALANCE,
a.months_in_arrears AS MIA,
EXTRACT(day from a.NEXT_PAYMENT_DUE_DATE) AS NPDD_DD,
A.NEXT_PAYMENT_DUE_DATE AS NPDD,
A.LAST_PAYMENT_DATE::date AS LAST_PAYMENT_DATE,
A.LAST_ACTIVE_DATE::date AS DATE_LAST_ACTIVE,
A.FULL_RELEASE_DATE::date AS FULL_RELEASE_DATE,
A.ORIGINAL_MATURITY_DATE::date AS ORIGINAL_MATURITY_DATE,
A.MATURITY_DATE::date AS MATURITY_DATE,
9 AS NO_PYMT_SINCE_FUNDING,
cast(eth.description as varchar(10)) AS RACE,
NULL AS STATE_CODE,
NULL AS RR_EFFECTIVE_DATE,
NULL AS RR_EXPIRY_DATE,
cast(WLIST.WORK_LIST_NAME as varchar(50)),
'Y' AS TAB_OPEN,
NULL AS TAB_PAID,
NULL AS TAB_PTP,
NULL AS TAB_BROKEN_PROMISE,
NULL AS TAB_FOLLOW_UP,
NULL AS TAB_LOST_CONTACT,
NULL AS TAB_AGENCY,
trt.created_time::date AS LAST_ACTION_DATE,
case when WL.PTP_DATE is not null then 'Y' else 'N' end AS PTP_EXIST,
WL.PTP_DATE::timestamp::date,
WL.PTP_AMOUNT,
WL.LAST_BROKEN_PROMISE_DATE::date AS BROKEN_PROMISE_DATE,
WL.LAST_CALL_DATE::date AS LAST_PAC_DATE,
TYPESTATUS.DESCRIPTION AS LAST_PAC_STATUS,
WL.LAST_FOLLOW_UP_DATE::date AS SCHEDULED_DATE,
last_follow_up_contact_no AS SCHEDULED_CALL_CONTACT_NO,
'N' AS SELFCURE,
'N' AS OCA_ASSIGN,
NULL AS OCA_ASSIGN_DATE,
NULL AS SPECIAL_STATUS,
cast(customer.customer_name as varchar(80)),
cast(customer.customer_id_no as varchar(40)) as CUSTOMER_IC_NO



from
ptrcustomer customer
inner join ptraccount a on a.customer_id = customer.id
inner join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
left join ptrwltab_evaluation wl on (wl.account_id = wlassign.account_id)
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
inner join ptrproduct_type_ref pr on a.product_type_id = pr.id
inner join ptrproduct_type_category_ref ptc on pr.category_id = ptc.id
inner join ptraccount_status_ref status on a.status_id = status.id
left join ptrtreatment_type_status_ref typestatus on wl.last_call_type_status_id = typestatus.id   
left join ptrethnicity_ref eth on customer.ethnicity_id = eth.id
left join ptraccount_last_treatment aclst on a.id = aclst.account_id
left join ptrtreatment trt on aclst.treatment_id = trt.id
where wlist.extract_to_dialer = true
and coalesce(a.months_in_arrears,0) != 0
</select>


<resultMap class="java.util.HashMap" id="getCtiNegativeOne">
  <result property="NEGATIVE_ONE" javaType="java.lang.Long"/>
</resultMap>

<select id="getCtiNegativeOne" resultMap="getCtiNegativeOne">
SELECT -1 AS NEGATIVE_ONE
</select>


<resultMap class="java.util.HashMap" id="getCTIExtractionEmptyContent">
  <result property="EMPTY_CONTENT" javaType="java.lang.String"/>
</resultMap>

<select id="getCTIExtractionEmptyContent" resultMap="getCTIExtractionEmptyContent">
SELECT cast(NULL AS VARCHAR(25))
</select>

<resultMap class="java.util.HashMap" id="getMobileNumber1">
  <result property="CUSTOMER_ID"  javaType="long"/>
  <result property="MOBILE_NUMBER" javaType="java.lang.String"/>
</resultMap>

<select id="getMobileNumber1" resultMap="getMobileNumber1">
select 
n1.customer_id, 
n1.no as MOBILE_NUMBER 
from
(
select ROW_NUMBER () OVER (PARTITION BY cus.id ORDER BY cus.id asc, sequence desc) as rowNumber, 
cus.id as customer_id, 
cast(number.no as varchar(20)) as no,
ref.code, 
ref.description, 
number.sequence 
from 
ptrcustomer cus
inner join ptrhost_phone_no number on cus.id = number.customer_id 
inner join ptrhost_phone_no_type_ref ref on number.host_phone_no_type_id = ref.id
inner join ptraccount a on a.customer_id = cus.id
inner join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
and ref.code in ('HP')
and number.disable != true


) n1 where n1.rowNumber = 1;
</select>



<resultMap class="java.util.HashMap" id="getMobileNumber2">
  <result property="CUSTOMER_ID"  javaType="long"/>
  <result property="MOBILE_NUMBER_2" javaType="java.lang.String"/>
</resultMap>

<select id="getMobileNumber2" resultMap="getMobileNumber2">
select 
n1.customer_id, 
n1.no as MOBILE_NUMBER_2 
from
(
select ROW_NUMBER () OVER (PARTITION BY cus.id ORDER BY cus.id asc, sequence desc) as rowNumber, 
cus.id as customer_id, 
cast(number.no as varchar(20)) as no,
ref.code, 
ref.description, 
number.sequence 
from 
ptrcustomer cus
inner join ptrhost_phone_no number on cus.id = number.customer_id 
inner join ptrhost_phone_no_type_ref ref on number.host_phone_no_type_id = ref.id
inner join ptraccount a on a.customer_id = cus.id
inner join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
and ref.code in ('HP')
and number.disable != true
) n1 where n1.rowNumber = 2;
</select>

<resultMap class="java.util.HashMap" id="getOfficeNumber1">
  <result property="CUSTOMER_ID"  javaType="long"/>
  <result property="OFFICE_NUMBER" javaType="java.lang.String"/>
</resultMap>

<select id="getOfficeNumber1" resultMap="getOfficeNumber1">
select 
n1.customer_id, 
n1.no as OFFICE_NUMBER 
from
(
select ROW_NUMBER () OVER (PARTITION BY cus.id ORDER BY cus.id asc, sequence desc) as rowNumber, 
cus.id as customer_id, 
cast(number.no as varchar(20)) as no,
ref.code, 
ref.description, 
number.sequence 
from 
ptrcustomer cus
inner join ptrhost_phone_no number on cus.id = number.customer_id 
inner join ptrhost_phone_no_type_ref ref on number.host_phone_no_type_id = ref.id
inner join ptraccount a on a.customer_id = cus.id
inner join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
and ref.code in ('OF')
and number.disable != true
) n1 where n1.rowNumber = 1;
</select>



<resultMap class="java.util.HashMap" id="getOfficeNumber2">
  <result property="CUSTOMER_ID"  javaType="long"/>
  <result property="OFFICE_NUMBER_2" javaType="java.lang.String"/>
</resultMap>

<select id="getOfficeNumber2" resultMap="getOfficeNumber2">
select 
n1.customer_id, 
n1.no as OFFICE_NUMBER_2 
from
(select ROW_NUMBER () OVER (PARTITION BY customer_id ORDER BY customer_id asc, sequence desc) as rowNumber, 
cus.id as customer_id, 
cast(number.no as varchar(20)) as no,
ref.code, 
ref.description, 
number.sequence 
from 
ptrhost_phone_no number
inner join ptrcustomer cus on number.customer_id = cus.id
inner join ptrhost_phone_no_type_ref ref on number.host_phone_no_type_id = ref.id
where ref.code in ('OF')
and number.disable != true
) n1 where n1.rowNumber = 2;
</select>




<resultMap class="java.util.HashMap" id="getHomeNumber1">
  <result property="CUSTOMER_ID"  javaType="long"/>
  <result property="HOME_NUMBER" javaType="java.lang.String"/>
</resultMap>

<select id="getHomeNumber1" resultMap="getHomeNumber1">
select 
n1.customer_id, 
n1.no as HOME_NUMBER 
from
(
select ROW_NUMBER () OVER (PARTITION BY cus.id ORDER BY cus.id asc, sequence desc) as rowNumber, 
cus.id as customer_id, 
cast(number.no as varchar(20)) as no,
ref.code, 
ref.description, 
number.sequence 
from 
ptrcustomer cus
inner join ptrhost_phone_no number on cus.id = number.customer_id 
inner join ptrhost_phone_no_type_ref ref on number.host_phone_no_type_id = ref.id
inner join ptraccount a on a.customer_id = cus.id
inner join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
and number.disable != true
and ref.code in ('RP')
) n1 where n1.rowNumber = 1;
</select>



<resultMap class="java.util.HashMap" id="getHomeNumber2">
  <result property="CUSTOMER_ID"  javaType="long"/>
  <result property="HOME_NUMBER_2" javaType="java.lang.String"/>
</resultMap>

<select id="getHomeNumber2" resultMap="getHomeNumber2">
select 
n1.customer_id, 
n1.no as HOME_NUMBER_2 
from
(
select ROW_NUMBER () OVER (PARTITION BY cus.id ORDER BY cus.id asc, sequence desc) as rowNumber, 
cus.id as customer_id, 
cast(number.no as varchar(20)) as no,
ref.code, 
ref.description, 
number.sequence 
from 
ptrcustomer cus
inner join ptrhost_phone_no number on cus.id = number.customer_id 
inner join ptrhost_phone_no_type_ref ref on number.host_phone_no_type_id = ref.id
inner join ptraccount a on a.customer_id = cus.id
inner join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
and number.disable != true
and ref.code in ('RP')
) n1 where n1.rowNumber = 2;
</select>


<resultMap class="hmap" id="getLastPaymentMethod-CTI">
<result property="ACCOUNT_ID_MERGE"  javaType="long"/>
<result property="LAST_PAYMENT_METHOD"  javaType="string"/>
</resultMap>

<select id="getLastPaymentMethod-CTI" resultMap="getLastPaymentMethod-CTI">
select 
payment.account_id as ACCOUNT_ID_MERGE, 
ref.code as last_payment_method
from 
ptrvw_account_last_payment_method payment
inner join ptrpayment_method_ref ref on payment.last_payment_method_id = ref.id
inner join ptraccount_work_list_assignment wlassign on payment.account_id = wlassign.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
</select>


<resultMap class="hmap" id="getEmployerAndFacilityType-CTI">
<result property="ACCOUNT_ID_MERGE"  javaType="long"/>
<result property="EMPLOYER_NAME"  javaType="string"/>
<result property="FACILITY_TYPE"  javaType="string"/>
</resultMap>

<select id="getEmployerAndFacilityType-CTI" resultMap="getEmployerAndFacilityType-CTI">
select
a.id,
cast(em.employer_name as varchar(200)) as EMPLOYER_NAME,
gr.description as facility_type

from ptraccount a
inner join ptraccount_work_list_assignment wlassign on wlassign.account_id=a.id
inner join ptrcustomer c on c.id=cast(a.customer_id as bigint)
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
left join ptrhost_employment_history em on em.customer_id=c.id
left join ptrfacility_code_ref fa on fa.id=a.facility_code_id
left join ptrfacility_type_ref fac on fac.id=a.facility_code_id
left join ptrfacility_type_group_ref gr on gr.id=fa.group_id
where wlist.extract_to_dialer = true
</select>

<resultMap class="java.util.HashMap" id="getPaidData-CTI">
<result javaType="long" property="ACCOUNT_ID_MERGE"/>
<result property="TAB_PAID"  javaType="string"/>
</resultMap>
<select id="getPaidData-CTI" resultMap="getPaidData-CTI">
select
currmth.account_id,
'Y' as TAB_PAID
from ptrvw_current_month_total_payment currmth
inner join ptraccount a on currmth.account_id = a.id
inner join ptrpayment_status_ref status on currmth.payment_status_id = status.id
inner join ptraccount_work_list_assignment assign on currmth.account_id = assign.account_id
inner join ptrwork_list wlist on assign.work_list_id = wlist.work_list_id
inner join ptrwltab_evaluation wlt on assign.account_id = wlt.account_id
where status.code in ('fullpayment','advancepayment')
and wlist.extract_to_dialer = true
</select>

<resultMap class="java.util.HashMap" id="getPtpInProgressAccountData-CTI">
<result javaType="long" property="ACCOUNT_ID_MERGE"/>
<result property="TAB_PTP"  javaType="string"/>
</resultMap>
<select id="getPtpInProgressAccountData-CTI" resultMap="getPtpInProgressAccountData-CTI">
select
wlt.account_id,
'Y' as TAB_PTP
from
PTRACCOUNT_WORK_LIST_ASSIGNMENT wlassign
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
inner join PTRWLTAB_EVALUATION wlt on wlassign.account_id = wlt.account_id
where wlist.extract_to_dialer = true
and wlt.PTP_PENDING_SINCE_DATE &gt;= #FIRST_OF_CURRENT_MONTH#
</select>


<resultMap class="java.util.HashMap" id="getBrokenPtpAccountData-CTI">
<result javaType="long" property="ACCOUNT_ID_MERGE"/>
<result property="TAB_BROKEN_PROMISE"  javaType="string"/>
</resultMap>
<select id="getBrokenPtpAccountData-CTI" resultMap="getBrokenPtpAccountData-CTI">
select
wlt.account_id,
'Y' as TAB_BROKEN_PROMISE
from
PTRACCOUNT_WORK_LIST_ASSIGNMENT wlassign
inner join PTRWLTAB_EVALUATION wlt on wlassign.account_id = wlt.account_id
inner join ptrwork_list wlist on wlassign.work_list_id = wlist.work_list_id
where wlist.extract_to_dialer = true
and wlt.PTP_PENDING_SINCE_DATE is null 
and wlt.LAST_BROKEN_PROMISE_DATE &gt;= cast(#FIRST_OF_CURRENT_MONTH:DATE# as date)
and wlt.PTP_DATE &gt;= cast(#FIRST_OF_CURRENT_MONTH:DATE# as date)

</select>


<resultMap class="java.util.HashMap" id="getWltMovementType">
<result property="WORK_LIST_TAB_MOVEMENT_TYPE"  javaType="string"/>
</resultMap>
<select id="getWltMovementType" resultMap="getWltMovementType">
select
case 
when #TAB_PAID# = 'Y'  then 'PAID'
when #TAB_PTP# = 'Y'  then 'PTP'
when #TAB_BROKEN_PROMISE# = 'Y'  then 'BROKEN_PROMISE'
when #TAB_FOLLOW_UP# = 'Y'  then 'WIP' else 'OPEN' end as WORK_LIST_TAB_MOVEMENT_TYPE
</select>


</sqlMap>
