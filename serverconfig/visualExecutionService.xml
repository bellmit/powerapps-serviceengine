<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="visualExecutionService.xml">

	<resultMap id="getExpectedAbortPeriodForAssignment" class="hmap">
		<result property="DAYS" javaType="long" />
	</resultMap>
	<select id="getExpectedAbortPeriodForAssignment" resultMap="getExpectedAbortPeriodForAssignment">
		select day from ptrassignment_abort_period_ref where subtype_id=#SUBTYPE_ID#
		<isEqual property="PROCESS_TYPE_ID" compareValue="19">
		and PRODUCT_TYPE_CATEGORY_ID=#PRODUCT_TYPE_CATEGORY_ID#
		</isEqual>
	</select>
	<resultMap id="getAssignmentTreeForProcessing" class="hmap">
		<result property="PRODUCT_CODE" javaType="string" />
		<result property="SUBTYPE_ID" javaType="long" />
		<result property="SUBTYPE" javaType="string"/>
		<result property="PROCESS_TYPE_ID" javaType="long" />
		<result property="DOCUMENT_ID" javaType="long" />
		<result property="SEND_VERIFICATION" javaType="boolean" />
		<result property="PRODUCT_TYPE_CATEGORY_ID" javaType="long"/>
	</resultMap>
	<select id="getAssignmentTreeForProcessing" resultMap="getAssignmentTreeForProcessing">
		select c.code,t.subtype_id,s.code,s.type_id,t.document_id, send_verification, c.id
		from PTRLEGAL_ASSIGNMENT_TREE t 
		left join ptrproduct_type_category_ref c on c.id=t.product_category_id
		inner join ptrtreatment_subtype_ref s on s.id=t.subtype_id
		WHERE T.ID=#ID#
	</select>
	<select id="getAbortTreeForProcessing" resultMap="getAssignmentTreeForProcessing">
		select c.code,t.subtype_id,s.code,s.type_id,t.document_id, send_verification, c.id
		from ptrlegal_abort_tree t 
		left join ptrproduct_type_category_ref c on c.id=t.product_category_id
		inner join ptrtreatment_subtype_ref s on s.id=t.subtype_id
		WHERE T.ID=#ID#
	</select>
	<select id="getExcludeTreeForProcessing" resultMap="getAssignmentTreeForProcessing">
		select c.code,t.subtype_id,s.code,s.type_id,t.document_id , send_verification, c.id
		from ptrlegal_exclusion_tree t 
		left join ptrproduct_type_category_ref c on c.id=t.product_category_id
		inner join ptrtreatment_subtype_ref s on s.id=t.subtype_id
		WHERE T.ID=#ID#
	</select>

	<resultMap class="hmap" id="getDefaultContractForProcessing">
	<result property="AGENCY_ID" javaType="long"/>
	<result property="CONTRACT_ID" javaType="long"/>
	</resultMap>
	<select id="getDefaultContractForProcessing" resultMap="getDefaultContractForProcessing">
	select crel.agency_id, con.id as contract_id
	from ptrtreatment_subtype_ref s
	inner join ptragency_contract con on con.subtype_id=s.id and con.is_default=true
	inner join ptragency_contract_rel crel on crel.contract_id=con.id
	where s.id=#SUBTYPE_ID#
	</select>

	<resultMap id="baseMapping-map" class="java.util.HashMap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="CUSTOMER_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		
		<result property="DIBS"  javaType="long"/>
		<result property="UNDER_CONSTRUCTION_ID"  javaType="long"/>
		<result property="ACCOUNT_STATUS_ID"  javaType="long"/>
		<result property="ADVANCE_PAYMENT_AMOUNT"  javaType="long"/>
		<result property="MONTHS_IN_ARREARS"  javaType="long"/>
		
		<result property="BANK_BRANCH_ID"  javaType="long"/>
		<result property="CAR_MAKE_SEGMENT_ID"  javaType="long"/>
		<result property="DAY_OF_FUNDINGS"  javaType="long"/>
		<result property="DAYS_PAST_DUE"  javaType="long"/>
		<result property="DAYS_SINCE_LAST_PAYMENT_DATE"  javaType="long"/>
		
		<result property="DUE_DATE"  javaType="long"/>
		<result property="EMPLOYMENT_STATUS_ID"  javaType="long"/>
		<result property="FIRST_RELEASE"  javaType="date"/>
		<result property="FULL_RELEASE"  javaType="long"/>
		<result property="ANNUAL_INCOME_ID"  javaType="long"/>
		
		<result property="INTEREST_DUE_DAY"  javaType="long"/>
		<result property="INSTALLMENT_AMOUNT_IN_ARREARS"  javaType="long"/>
		<result property="LOAN_MATURED"  javaType="long"/>
		<result property="LOAN_TO_VALUE"  javaType="long"/>
		<result property="MONTHS_SINCE_LAST_DAY_OF_FUNDING"  javaType="long"/>
		
		<result property="NPL_FLAG"  javaType="long"/>
		<result property="NPL_STATUS_ID"  javaType="long"/>
		<result property="ECA_ASSIGNED_ID"  javaType="long"/>
		<result property="OCCUPATION_ID"  javaType="long"/>
		<result property="PRODUCT_TYPE_CATEGORY_ID"  javaType="long"/>
		
		<result property="PRODUCT_TYPE_ID"  javaType="long"/>
		<result property="RACE_TYPE_ID"  javaType="long"/>
		<result property="SPECIAL_STATUS"  javaType="long"/>
		<result property="STATE_ID"  javaType="long"/>
		<result property="LOAN_DURATION"  javaType="long"/>
		
		<result property="OUTSTANDING_AMT"  javaType="long"/>
		<result property="TOTAL_GROSS_BALANCE"  javaType="long"/>
		<result property="ISLAMIC_ACCOUNT_FLAG"  javaType="long"/>
		<result property="HAS_LAST_PAYMENT_DATE"  javaType="long"/>
		<result property="MATURED_LOAN_MIA"  javaType="long"/>
		
		<result property="CHARGEOFF_DATE"  javaType="date"/>
		<result property="PRINCIPLE_BALANCE"  javaType="long"/>
		<result property="WORK_LIST_ID_RECLASSIFICATION"  javaType="long"/>
		<result property="BRANCH_GEOGRAPHICAL_STATE_ID"  javaType="long"/>
		<result property="REPAYMENT_RATIO"  javaType="long"/>
		
		<result property="IRC_FLAG"  javaType="long"/>
		<result property="IRC_CODE"  javaType="long"/>
		<result property="BORROWER_AGE"  javaType="long"/>
		<result property="RESIDENTIAL_NRESIDENTIAL_ID"  javaType="long"/>
		<result property="INTEREST_PROFIT_RATE"  javaType="long"/>
		
		<result property="DELIVERY_CHANNEL_ID"  javaType="long"/>
		<result property="DEALER_ID"  javaType="long"/>
		<result property="JUDGEMENT_DATE"  javaType="date"/>
		<result property="PROMISES_BROKEN"  javaType="long"/>
		<result property="PROMISES_KEPT"  javaType="long"/>
		
		<result property="PROMISES_TAKEN"  javaType="long"/>
		<result property="PREFIX_NAME_ID"  javaType="long"/>
		<result property="LOAN_AMOUNT"  javaType="long"/>
		<result property="DRAWING_LIMIT"  javaType="long"/>
		<result property="TOTAL_AMOUNT_DUE"  javaType="long"/>
		
		<result property="UNCONTACTABLE_ACCOUNT_ID"  javaType="long"/>
		<result property="CHECK_DIGIT_ID"  javaType="long"/>
		<result property="CONTACT_SOURCE_TYPE_ID"  javaType="long"/>
		<result property="ADDRESS_SOURCE_TYPE_ID"  javaType="long"/>
		<result property="LAST_DISBURSE_DATE"  javaType="date"/>
		
		<result property="FIRST_PAYMENT_DATE"  javaType="date"/>
		<result property="RESCHEDULE_DATE"  javaType="date"/>
		<result property="RESTRUCTURING_DATE"  javaType="date"/>
		<result property="RR_REJECTED_STATUS_ID"  javaType="long"/>
		<result property="RR_REJECTED_RECOUNT_DATE"  javaType="date"/>
		
		<result property="RR_STATUS_ID"  javaType="long"/>
		<result property="NEXT_PAYMENT_DUE_DATE"  javaType="date"/>
		<result property="NPL_DATE"  javaType="date"/>
		<result property="LAST_CALL_STATUS_ID"  javaType="long"/>
		<result property="REASON_DEFAULT_ID"  javaType="long"/>
		
		<result property="EMPLOYEE_DEFAULT_REASON_ID"  javaType="long"/>
		<result property="LAST_PAYMENT_METHOD_ID"  javaType="long"/>
		<result property="PAYMENT_STATUS_ID"  javaType="long"/>
		<result property="PRIORITY_PAYMENT_ID"  javaType="long"/>
		<result property="GROSS_AMOUNT" javaType="long"/>
		
		<result property="BANK_REGION_ID" javaType="long"/>
		<result property="AT_AKPK_FLAG" javaType="long"/>
		<result property="AT_RNR" javaType="long"/>
		<result property="AT_BANKRUPT" javaType="long"/>
		<result property="AT_NEW_DISBURSEMENT" javaType="long"/>
		
		<result property="AT_DECEASED" javaType="long"/>
		<result property="AT_TPD" javaType="long"/>
		<result property="AT_TPD_REJECTED" javaType="long"/>
		<result property="AT_EX_STAFF" javaType="long"/>
		<result property="AT_FRAUD" javaType="long"/>
		
		<result property="AT_SETTLEMENT_PROPOSAL" javaType="long"/>
		<result property="AT_SECURITY_DEPOSIT" javaType="long"/>
		<result property="AT_DEBT_SALES" javaType="long"/>
		<result property="AT_MORATORIUM" javaType="long"/>
		<result property="AT_REDEMPTION_STATEMENT" javaType="long"/>
		
		<result property="AT_ADMIN_ISSUE" javaType="long"/>
		<result property="UTC_ACCOUNTS" javaType="long"/>
		<result property="DIA" javaType="long"/>
		<result property="CUSTOMERS_AGE" javaType="long"/>
		<result property="CENTRE" javaType="long"/>
		
		<result property="CURRENT_BALANCE" javaType="long"/>
		<result property="CURRENT_LEGAL_ACTION" javaType="long"/>
		<result property="SCHEDULE_DATE" javaType="date"/>
		<result property="DISBURSEMENT_DATE" javaType="date"/>
		<result property="DAYS_SINCE_AGENCY_ASSIGNMENT_DATE" javaType="long"/>
		
		<result property="FROM_HOST_CIVIL" javaType="long"/>
		<result property="GUARANTOR_STATUS" javaType="long"/>
		<result property="LAST_ABORT_DATE" javaType="date"/>
		<result property="LAST_ECA_ASSIGNMENT_DATE" javaType="date"/>
		<result property="LAST_LEGAL_ACTION" javaType="long"/>
		
		<result property="FINANCING_TENURE" javaType="long"/>
		<result property="FINANCING_TYPE" javaType="long"/>
		<result property="MISC_CHARGES" javaType="long"/>
		<result property="MONTHS_SINCE_LAST_DISBURSEMENT" javaType="long"/>
		<result property="NO_PAYMENT_SINCE_DISBURSEMENT" javaType="long"/>
		
		<result property="NPF_DATE" javaType="date"/>
		<result property="NPF_FLAG" javaType="long"/>
		<result property="OUTSTANDING_BALANCE" javaType="long"/>
		<result property="OPENING_MIA" javaType="long"/>
		<result property="PDC" javaType="date"/>
		
		<result property="SALARY_DEDUCTION" javaType="long"/>
		<result property="SELF_CURE" javaType="long"/>
		<result property="UNDER_THREE_MONTHS_CONSISTENT_PAYMENT" javaType="long"/>
		<result property="UNDER_SIX_MONTHS_CONSISTENT_PAYMENT" javaType="long"/>
		<result property="WSS" javaType="long"/>
		
		<result property="CP_STAGE" javaType="long"/>
		<result property="MOVEMENT_CASE" javaType="long"/>
		<result property="SI_STATUS" javaType="long"/>
		<result property="MATURE_AC" javaType="date"/>
		<result property="DEFAULT_REASON" javaType="long"/>
		
		<result property="BRANCH_CODE" javaType="long"/>
		<result property="CALL_STATUS" javaType="long"/>
		<result property="TRANSACTION_CODE" javaType="long"/>
		<result property="LEGAL_WORKLIST_NAME" javaType="long"/>
		<result property="FINANCING_RELEASED_AMOUNT" javaType="long"/>
		
		<result property="AT_ABANDONED" javaType="long"/>
		<result property="AT_AUCTION" javaType="long"/>
		<result property="AT_AUCTION_BALANCE" javaType="long"/>
		<result property="AT_AUCTION_DEPOSIT" javaType="long"/>
		<result property="AT_BLD" javaType="long"/>
		
		<result property="AT_DIBS" javaType="long"/>
		<result property="AT_ECA_MONITORING" javaType="long"/>
		<result property="AT_EPF_WITHDRAWAL" javaType="long"/>
		<result property="AT_EXTERNAL_COLLECTION_AGENCIES" javaType="long"/>
		<result property="AT_LEGAL_MONITORING" javaType="long"/>
		
		<result property="AT_PENDING_BPP" javaType="long"/>
		<result property="AT_REFUND_COURT_DEPOSIT" javaType="long"/>
		<result property="AT_REFUND_OA_DEPOSIT" javaType="long"/>
		<result property="AT_REPO" javaType="long"/>
		<result property="AT_REPO_REDEEM" javaType="long"/>
		
		<result property="AT_SHORTFALL" javaType="long"/>
		<result property="AT_UNDER_CONSTRUCTION" javaType="long"/>
		<result property="AT_WRITE_OFF" javaType="long"/>
		<result property="HOLD_MAIL" javaType="long"/>
		<result property="FOURTH_SCHEDULE_ACTION_DATE" javaType="date"/>
		
		<result property="FORECLOSURE_TYPE" javaType="long"/>
		<result property="CURRENT_LEGAL_ACTION_STATUS" javaType="long"/>
		<result property="GUARANTOR_TYPE" javaType="long"/>
		<result property="TRUE" javaType="boolean"/>
		<result property="LAST_LEGAL_ASSIGNMENT_DATE" javaType="date"/>
		
		<result property="LEGAL_STATUS" javaType="long"/>
		<result property="FINANCING_STATUS" javaType="long"/>
		<result property="ACCOUNT_NUMBER" javaType="long"/>
	</resultMap>
<sql id="baseCondition">
		case
		when pr.DIBS = true then 1
		when pr.DIBS = false then 0 else -1 end as DIBS,
		case
		when a.FULL_RELEASE_DATE &lt; current_date then 1
		when a.FULL_RELEASE_DATE &lt; current_date then 0 else -1 end as
		UNDER_CONSTRUCTION_ID,
		a.STATUS_ID AS ACCOUNT_STATUS_ID,
		a.ADVANCE_PAYMENT_AMOUNT,
		a.MONTHS_IN_ARREARS,
		
		a.BANK_BRANCH_ID,
		-1 AS CAR_MAKE_SEGMENT_ID,
		EXTRACT(day FROM a.first_release_date) as DAY_OF_FUNDINGS,
		a.MONTHS_IN_ARREARS * 30 AS DAYS_PAST_DUE,
		DATE_PART('day', dd.DATA_DATE::date + interval '1 day' - a.LAST_PAYMENT_DATE::date) as DAYS_SINCE_LAST_PAYMENT_DATE,
		
		EXTRACT(day from a.NEXT_PAYMENT_DUE_DATE) as DUE_DATE,
		cem.employment_status_id as EMPLOYMENT_STATUS_ID,
		a.first_release_date as FIRST_RELEASE,
		case when a.FULL_RELEASE_DATE is null then 0 else 1 end as FULL_RELEASE,
		-1 as ANNUAL_INCOME_ID,
		
		EXTRACT(day from A.next_interest_payment_due_date) as INTEREST_DUE_DAY,
		a.INSTALLMENT_AMOUNT_IN_ARREARS,
		case when coalesce(a.maturity_date, a.original_maturity_date) &lt;= current_date then 1 else 0 end as LOAN_MATURED,
		-1 as LOAN_TO_VALUE,
		(DATE_PART('year', current_date::date) - DATE_PART('year', a.FULL_RELEASE_DATE::date)) *
		12 + (DATE_PART('month', current_date::date) - DATE_PART('month',
		a.FULL_RELEASE_DATE::date)) as MONTHS_SINCE_LAST_DAY_OF_FUNDING,

		case when A.NPL_FLAG = 'Y' then 1 else 0 end as NPL_FLAG,
		A.NPL_STATUS_ID,
		-1 AS ECA_ASSIGNED_ID,
		-1 as OCCUPATION_ID,
		pr.CATEGORY_ID AS PRODUCT_TYPE_CATEGORY_ID,
		
		pr.id as PRODUCT_TYPE_ID,
		C.ETHNICITY_ID AS RACE_TYPE_ID,
		sstatus.special_status_id as SPECIAL_STATUS,
		-1 AS STATE_ID,
		A.loan_term AS LOAN_DURATION,
		
		A.outstanding_balance AS OUTSTANDING_AMT,
		a.outstanding_balance - (a.interest_rebate_amount + a.write_off_amount) as
		TOTAL_GROSS_BALANCE,
		case when spt.IS_ISLAMIC=true then 1 when spt.IS_ISLAMIC=false then 0 end AS ISLAMIC_ACCOUNT_FLAG,
		case when a.LAST_PAYMENT_DATE is not null then 0 else 1 end as
		HAS_LAST_PAYMENT_DATE,
		A.MONTHS_IN_ARREARS AS MATURED_LOAN_MIA,
		
		A.charge_off_date AS CHARGEOFF_DATE,
		A.principle_due_amount AS PRINCIPLE_BALANCE,
		wlassign.work_list_id AS WORK_LIST_ID_RECLASSIFICATION,
		-1 AS BRANCH_GEOGRAPHICAL_STATE_ID,
		-1 AS REPAYMENT_RATIO,
		
		-1 AS IRC_FLAG,
		-1 AS IRC_CODE,
		DATE_PART('year', CURRENT_DATE::date) - DATE_PART('year', C.DATE_OF_BIRTH::date) AS
		BORROWER_AGE,
		C.bumi_status_id AS RESIDENTIAL_NRESIDENTIAL_ID,
		A.interest_rate AS INTEREST_PROFIT_RATE,
		
		-1 AS DELIVERY_CHANNEL_ID,
		-1 AS DEALER_ID,
		A.JUDGEMENT_DATE,
		-1 AS PROMISES_BROKEN,
		-1 AS PROMISES_KEPT,
		
		-1 AS PROMISES_TAKEN,
		-1 AS PREFIX_NAME_ID,
		-1 AS LOAN_AMOUNT,
		A.OD_DRAWING_LIMIT AS DRAWING_LIMIT,
		A.TOTAL_AMOUNT_DUE AS TOTAL_AMOUNT_DUE,
		
		case when eval.pac_uncontactable_count >= 3 then 1 else 0 end as
		UNCONTACTABLE_ACCOUNT_ID,
		cast(substr(a.account_no,12,1) as int8) AS CHECK_DIGIT_ID,
		coalesce(cont.CONTACT_SOURCE_TYPE_ID,0) as CONTACT_SOURCE_TYPE_ID,
		coalesce(add.ADDRESS_SOURCE_TYPE_ID,0) as ADDRESS_SOURCE_TYPE_ID,
		a.FULL_RELEASE_DATE as LAST_DISBURSE_DATE,
		
		a.FIRST_PAYMENT_DATE as FIRST_PAYMENT_DATE,
		a.RESCHEDULE_DATE as RESCHEDULE_DATE,
		current_date as RESTRUCTURING_DATE,
		-1 AS RR_REJECTED_STATUS_ID,
		current_date as RR_REJECTED_RECOUNT_DATE,
		
		-1 AS RR_STATUS_ID,
		a.NEXT_PAYMENT_DUE_DATE AS NEXT_PAYMENT_DUE_DATE,
		a.NPL_DATE AS NPL_DATE,
		eval.LAST_CALL_TYPE_STATUS_ID as LAST_CALL_STATUS_ID,
		eval.reason_default_id AS REASON_DEFAULT_ID,
		
		custhist.employer_default_reason_id as EMPLOYEE_DEFAULT_REASON_ID,
		lastpay.LAST_PAYMENT_METHOD_ID as LAST_PAYMENT_METHOD_ID,
		currentpay.PAYMENT_STATUS_ID as PAYMENT_STATUS_ID,
		lastpay.LAST_PAYMENT_METHOD_ID as PRIORITY_PAYMENT_ID,
		a.outstanding_balance - (a.interest_rebate_amount + a.write_off_amount) as GROSS_AMOUNT,
		
		bbi.region_id as BANK_BRANCH_ID,
		case when tag.akpk_flag=true then 1 when tag.akpk_flag=false then 0 end as AT_AKPK_FLAG,
		case when tag.rnr=true then 1 when tag.rnr=false then 0 end as AT_RNR,
		case when tag.bankrupt=true then 1 when tag.bankrupt=false then 0 end as AT_BANKRUPT,
		case when tag.new_disbursement=true then 1 when tag.new_disbursement=false then 0 end as AT_NEW_DISBURSEMENT,
		
		case when tag.deceased=true then 1 when tag.deceased=false then 0 end as AT_DECEASED,
		case when tag.tpd=true then 1 when tag.tpd=false then 0 end as AT_TPD,
		case when tag.tpd_rejected=true then 1 when tag.tpd_rejected=false then 0 end as AT_TPD_REJECTED,
		case when tag.ex_staff=true then 1 when tag.ex_staff=false then 0 end as AT_EX_STAFF,
		case when tag.fraud=true then 1 when tag.fraud=false then 0 end as AT_FRAUD,
		
		case when tag.settlement_proposal=true then 1 when tag.settlement_proposal=false then 0 end as AT_SETTLEMENT_PROPOSAL,
		case when tag.security_deposit=true then 1 when tag.security_deposit=false then 0 end as AT_SECURITY_DEPOSIT,
		case when tag.debt_sales=true then 1 when tag.debt_sales=false then 0 end as AT_DEBT_SALES,
		case when tag.moratorium=true then 1 when tag.moratorium=false then 0 end as AT_MORATORIUM,
		case when tag.redemption_statement=true then 1 when tag.redemption_statement=false then 0 end as AT_REDEMPTION_STATEMENT,
		
		case when tag.admin_monitoring=true then 1 when tag.admin_monitoring=false then 0 end as AT_ADMIN_ISSUE,
		case when callstat.code='PAC_4' then 1 else 0 end as UTC_ACCOUNTS,
		a.MONTHS_IN_ARREARS * 30 as DIA,
		extract(year from current_date) - extract(year from c.date_of_birth) as CUSTOMERS_AGE,
		a.BANK_BRANCH_ID as CENTRE,
		
		a.current_balance as CURRENT_BALANCE,
		lastlegal.action_id as CURRENT_LEGAL_ACTION,
		NULL as SCHEDULE_DATE,
		a.full_release_date as DISBURSEMENT_DATE,
		NULL as DAYS_SINCE_AGENCY_ASSIGNMENT_DATE,
		
		NULL as FROM_HOST_CIVIL,
		NULL as GUARANTOR_STATUS,
		las.last_aborted_date as LAST_ABORT_DATE,
		las.assignment_date as LAST_ECA_ASSIGNMENT_DATE,
		lastlegal.action_id as LAST_LEGAL_ACTION,
		
		NULL as FINANCING_TENURE,
		pr.CATEGORY_ID as FINANCING_TYPE,
		a.miscellaneous_charge as MISC_CHARGES,
		(DATE_PART('year', current_date::date) - DATE_PART('year', a.FULL_RELEASE_DATE::date)) * 12 + (DATE_PART('month', current_date::date) - DATE_PART('month', a.FULL_RELEASE_DATE::date)) as MONTHS_SINCE_LAST_DISBURSEMENT,
		case when a.full_release_date > a.last_payment_date then 1 when a.full_release_date &lt; a.last_payment_date then 2 end as NO_PAYMENT_SINCE_DISBURSEMENT,
		
		a.NPL_DATE as NPF_DATE,
		case when a.NPL_FLAG='Y' then 1 when a.NPL_FLAG='N' then 0 end as NPF_FLAG,
		a.outstanding_balance as OUTSTANDING_BALANCE,
		wlassign.months_in_arrears as OPENING_MIA,
		eval.LAST_PDC_DATE as PDC,
		
		NULL as SALARY_DEDUCTION,
		wlassign.self_cure as SELF_CURE,
		NULL as UNDER_THREE_MONTHS_CONSISTENT_PAYMENT,
		NULL as UNDER_SIX_MONTHS_CONSISTENT_PAYMENT,
		NULL as WSS,
		
		NULL as CP_STAGE,
		NULL as MOVEMENT_CASE,
		NULL as SI_STATUS,
		a.maturity_date as MATURE_AC,
		eval.reason_default_id as DEFAULT_REASON,
		
		a.BANK_BRANCH_ID,
		eval.last_call_type_status_id as CALL_STATUS,
		payt.transaction_type_id as TRANSACTION_CODE,
		lwa.worklist_id as LEGAL_WORKLIST_NAME,
		case when a.original_balance=0 then 0 else (a.released_amount/a.original_balance) * 100 end as FINANCING_RELEASED_AMOUNT,
		
		case when tag.abandoned=true then 1 when tag.abandoned=false then 0 end as AT_ABANDONED,
		case when tag.auction=true then 1 when tag.auction=false then 0 end as AT_AUCTION,
		case when tag.auction_received_balance=true then 1 when tag.auction_received_balance=false then 0 end as AT_AUCTION_BALANCE,
		case when tag.auction_received_deposit=true then 1 when tag.auction_received_deposit=false then 0 end as AT_AUCTION_DEPOSIT,
		case when tag.bld=true then 1 when tag.bld=false then 0 end as AT_BLD,
		
		case when tag.dibs=true then 1 when tag.dibs=false then 0 end as AT_DIBS,
		case when tag.eca_monitoring=true then 1 when tag.eca_monitoring=false then 0 end as AT_ECA_MONITORING,
		case when tag.epf_withdrawal=true then 1 when tag.epf_withdrawal=false then 0 end as AT_EPF_WITHDRAWAL,
		case when tag.external_collection_agencies=true then 1 when tag.external_collection_agencies=false then 0 end as AT_EXTERNAL_COLLECTION_AGENCIES,
		case when tag.legal_monitoring=true then 1 when tag.legal_monitoring=false then 0 end as AT_LEGAL_MONITORING,
		
		case when tag.pending_bpp=true then 1 when tag.pending_bpp=false then 0 end as AT_PENDING_BPP,
		case when tag.refund_court_deposit=true then 1 when tag.refund_court_deposit=false then 0 end as AT_REFUND_COURT_DEPOSIT,
		case when tag.refund_oa_deposit=true then 1 when tag.refund_oa_deposit=false then 0 end as AT_REFUND_OA_DEPOSIT,
		case when tag.repo=true then 1 when tag.repo=false then 0 end as AT_REPO,
		case when tag.repo_redeem=true then 1 when tag.repo_redeem=false then 0 end as AT_REPO_REDEEM,
		
		case when tag.shortfall=true then 1 when tag.shortfall=false then 0 end as AT_SHORTFALL,
		case when tag.under_construction=true then 1 when tag.under_construction=false then 0 end as AT_UNDER_CONSTRUCTION,
		case when tag.write_off=true then 1 when tag.write_off=false then 0 end as AT_WRITE_OFF,
		a.hold_mail_code_id as HOLD_MAIL,
		ai.fourth_schedule_action_date as FOURTH_SCHEDULE_ACTION_DATE,
		
		foretype.subtype_id as FORECLOSURE_TYPE,
		lastlegal.status_id as CURRENT_LEGAL_ACTION_STATUS,
		relation.relationship_type_id as GUARANTOR_TYPE,
		true as TRUE,
		lastlegal.assignment_date as LAST_LEGAL_ASSIGNMENT_DATE,
		
		lastlegal.last_instruction_status_id as LEGAL_STATUS,
		a.status_id as FINANCING_STATUS,
		cast(substr(right(a.account_no,6),1,1) as numeric) as ACCOUNT_NUMBER
</sql>

	<sql id="baseQueryFragment">
		from ptraccount a
		left join ptraccount_work_list_assignment wlassign on a.id =
		wlassign.account_id
		left join ptrwltab_evaluation eval on a.id = eval.account_id
		left join ptrwork_list wl on wlassign.work_list_id = wl.work_list_id
		left join ptrwork_list_group_ref wlgroup on wl.work_list_group =
		wlgroup.id
		left join ptrvw_account_last_payment_method lastpay on a.id =
		lastpay.account_id
		left join ptrvw_current_month_total_payment currentpay on a.id =
		currentpay.account_id
		left join (
		<include refid="specialStatus-fragment" />
		) sstatus on a.id = sstatus.account_id
		inner join ptrcustomer c on (c.id = a.customer_id)
		left join ptrcustomer_employment_details custhist on c.id =
		custhist.customer_id
		left join (select customer_id, 1 as ADDRESS_SOURCE_TYPE_ID from ptraddress
		where verified_date is null group by customer_id) add on c.id =
		add.customer_id
		left join (select customer_id, 1 as CONTACT_SOURCE_TYPE_ID from
		ptrcontact_number where verified_date is null group by customer_id)
		cont on c.id = cont.customer_id
		inner join ptrproduct_type_ref pr on (a.product_type_id = pr.id)
		inner join ptrproduct_type_category_ref cat on (pr.category_id = cat.id) 
		left join ptrbank_branch_ref bbi on bbi.id=a.bank_branch_id
		left join ptraccount_treatment_tagging tag on tag.account_id=a.id
		left join ptrtreatment_type_status_ref callstat on callstat.id=eval.last_call_type_status_id
		left join ptraccount_last_assignment_summary las on (las.account_id=a.id and las.subtype_id=#SUBTYPE_ID#)
		left join ptraccount_last_legal_action lla on (lla.account_id=a.id)
		left join ptrsptf_type_ref spt on spt.id=a.sptf_type_id
		left join ptrpayment_transaction payt on payt.transaction_id=lastpay.transaction_id and payt.account_id=a.id
		left join ptraccount_legal_worklist_assignment lwa on lwa.account_id=a.id
		left join ptrcustomer_employment_maintenance cem on cem.customer_id=a.customer_id
		left join ptraccount_agency_assignment foretype on foretype.account_id=a.id and foretype.status_id=15007 
		and foretype.subtype_id in (select id from ptrtreatment_subtype_ref where type_id=51)
	    left join ptraccount_information ai on ai.account_id=a.id
	    left join (
	    select a.account_id, a.action_id, a.status_id, a.last_instruction_status_id, a.assignment_date from 
		(
		select ass.account_id, ap.action_id, ap.status_id, lap.status_id as last_instruction_status_id, ass.approved_date as assignment_date,
		row_number() over(partition by ass.account_id order by ass.id desc, ai.process_id desc) as rnum
		from ptraccount_agency_assignment ass 
        left join ptrlegal_action_instruction ai on ai.agency_assignment_id=ass.id
        left join ptrlegal_action_process lap on lap.id=ai.process_id
		left join ptrlegal_action_process ap on ap.id=ass.last_process_id
		where ass.subtype_id=#SUBTYPE_ID#)a where a.rnum=1
	    )lastlegal on lastlegal.account_id=a.id
	    left join(
	    select a.id as account_id, arel.id as relationship_type_id
		from ptraccount a
		inner join ptrcustomer_account_rel rel on rel.account_id=a.id
		inner join ptrcustomer_account_relation_type_ref arel on arel.id=rel.type_id and not arel.code='P'
	    )relation on relation.account_id=a.id
	    
	    
	</sql>
<select id="getEcaAssignmentData" resultMap="baseMapping-map">
		SELECT distinct
		NULL as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition"/>
	<include refid="baseQueryFragment"/>
	,PTRDATA_DATE dd
	where NOT EXISTS (select 1 from ptraccount_agency_assignment ag 
	inner join ptrtreatment_subtype_ref ss on ss.id=ag.subtype_id and ss.id=#SUBTYPE_ID# and ag.status_id=15007
	where ag.account_id=a.id)
	<isNotEqual property="SUBTYPE" compareValue="ECA">
	and NOT EXISTS (select 1 from ptraccount_agency_assignment ag 
	inner join ptragency_kiv_assignment kiv on kiv.agency_assignment_id=ag.id
	inner join ptrtreatment_subtype_ref ss on ss.id=ag.subtype_id and ss.id=#SUBTYPE_ID#
	where ag.account_id=a.id)
	</isNotEqual>
	<isEqual property="SUBTYPE" compareValue="ECA">
	and cat.code=#PRODUCT_CODE#
	</isEqual>
	order by customer_id asc, account_id asc
</select>
<select id="getEcaABortData" resultMap="baseMapping-map">
		SELECT distinct
		ag.id as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition"/>
	<include refid="baseQueryFragment"/>
	inner join ptraccount_agency_assignment ag on ag.account_id=a.id and ag.subtype_id=#SUBTYPE_ID# and ag.status_id=15007
	,PTRDATA_DATE dd
	order by customer_id asc, account_id asc
</select>

	<update id="updateAbortRecommendation">
		UPDATE PTRACCOUNT_AGENCY_ASSIGNMENT SET RECOMMENDED_ABORT_REASON_ID = #RECOMMENDED_ABORT_REASON_ID#
		WHERE ID = #AGENCY_ASSIGNMENT_ID#
	</update>
	
<select id="getLegalWorklistAssignmentData" resultMap="baseMapping-map">
		SELECT distinct
		NULL as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition"/>
	<include refid="baseQueryFragment"/>
	,PTRDATA_DATE dd
	WHERE cat.code=#CATEGORY_CODE# and NOT EXISTS (select 1 from PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT w 
	where w.account_id=a.id)
	order by customer_id asc, account_id asc
</select>

<select id="getEcaExcludeData" resultMap="baseMapping-map">
		SELECT distinct
		ag.id as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition"/>
	<include refid="baseQueryFragment"/>
	left join ptraccount_agency_assignment ag on ag.account_id=a.id and ag.subtype_id=#SUBTYPE_ID# and ag.status_id=15007
	,PTRDATA_DATE dd 
	order by customer_id asc, account_id asc
</select>

<resultMap class="hmap" id="getSmsTreeCustomerAccountsForAssignment" extends="baseMapping-map">
<result property="CONTACT_NO" javaType="string"/>
<result property="CONTACT_ID" javaType="long"/>
<result property="POSTCODE" javaType="string"/>
</resultMap>

	<select id="getSmsTreeCustomerAccountsForAssignment" resultMap="getSmsTreeCustomerAccountsForAssignment">
		select
		NULL as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition" />,
		sc.NO as CONTACT_NO,
		sc.CONTACT_ID,
		NULL as POSTCODE
		<include refid="baseQueryFragment" />
		inner join ptrsearch_contact_number sc on sc.CUSTOMER_ID=a.CUSTOMER_ID
		inner join ptrcontact_number_type_ref ct on ct.id=sc.contact_type_id
		and ct.code='MOBILE'
		left join (
		select a.id, a.customer_id, a.postal_code, a.state_id from (select addr.id,
		addr.customer_id, addr.postal_code, addr.state_id,
		row_number() over(partition by addr.customer_id order by addr.id desc) as rnum
		from ptrhost_address addr
		inner join ptrhost_address_type_ref ady on ady.id=addr.host_address_type_id
		and ady.code='M'
		)a where a.rnum=1
		) addr on addr.customer_id=a.customer_id, PTRDATA_DATE dd
		order by a.customer_id asc, a.id asc
	</select>

	<select id="getVisitationTreeCustomerAccountsForAssignment" resultMap="getSmsTreeCustomerAccountsForAssignment">
		select
		NULL as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition" />,
		sc.NO as CONTACT_NO,
		sc.CONTACT_ID,
		NULL as POSTCODE
		<include refid="baseQueryFragment" />
		inner join (
		select a.id, a.customer_id, a.postal_code, a.state_id from (select addr.id,
		addr.customer_id, addr.postal_code, addr.state_id,
		row_number() over(partition by addr.customer_id order by addr.id desc) as rnum
		from ptrhost_address addr
		inner join ptrhost_address_type_ref ady on ady.id=addr.host_address_type_id
		and ady.code='M'
		)a where a.rnum=1
		) addr on addr.customer_id=a.customer_id, PTRDATA_DATE dd
		where not exists
		(
		select v.account_id from ptrtreatment_visitation v
		inner join ptrtreatment_type_status_ref vref on vref.id=v.type_status_id
		where vref.code='VISIT_IV' and v.account_id=a.id
		)
		order by a.customer_id asc, a.id asc
	</select>

	<select id="getLetterTreeCustomerAccountsForAssignment" resultMap="getSmsTreeCustomerAccountsForAssignment">
		select
		NULL as AGENCY_ASSIGNMENT_ID,
		a.CUSTOMER_ID,
		a.ID as ACCOUNT_ID,
		<include refid="baseCondition" />,
		sc.NO as CONTACT_NO,
		sc.CONTACT_ID,
		NULL as POSTCODE
		<include refid="baseQueryFragment" />
		inner join (
		select a.id, a.customer_id, a.postal_code, a.state_id from (select addr.id,
		addr.customer_id, addr.postal_code, addr.state_id,
		row_number() over(partition by addr.customer_id order by addr.id desc) as rnum
		from ptrhost_address addr
		inner join ptrhost_address_type_ref ady on ady.id=addr.host_address_type_id
		and ady.code='M'
		)a where a.rnum=1
		) addr on addr.customer_id=a.customer_id, PTRDATA_DATE dd
		order by a.customer_id asc, a.id asc
	</select>

<delete id="deleteAgencyAbortRecommendation">
		delete from ptragency_abort_recommendation v
		using PTRLEGAL_ABORT_TREE t 
		left join ptrproduct_type_category_ref c on c.id=t.product_category_id and c.code =#PRODUCT_CODE# 
		where t.id= v.tree_id and t.subtype_id = #SUBTYPE_ID#	
	</delete>



<insert id="insertAgencyAbortRecommendation" parameterClass="map">
insert into ptragency_abort_recommendation (agency_assignment_id,recommended_abort_reason_id,evaluation_date,subtype_id,tree_id)
values (#AGENCY_ASSIGNMENT_ID#,#RECOMMENDED_ABORT_REASON_ID#,#CURRENT_TIME#,#SUBTYPE_ID#,#TREE_ID#)
</insert>

<delete id="deleteAgencyExcludeAssignment">
		delete from ptragency_exclude_assignment <!-- v
		using ptrlegal_exclusion_tree t 
		left join ptrproduct_type_category_ref c on c.id=t.product_category_id and c.code =#PRODUCT_CODE# 
		where t.id= v.tree_id and t.subtype_id = #SUBTYPE_ID#	 -->
	</delete>
	
	<insert id="insertAgencyExcludeAssignment" parameterClass="map">
insert into ptragency_exclude_assignment (account_id,exclusion_reason_id,evaluation_date,subtype_id,tree_id)
values (#ACCOUNT_ID#,#EXCLUSION_REASON_ID#,#CURRENT_TIME#,#SUBTYPE_ID#,#TREE_ID#)
</insert>




</sqlMap>