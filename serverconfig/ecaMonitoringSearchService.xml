<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ecaMonitoringSearchService">
	<select id="getUserEcaWorklistForMonitoring" resultMap="global.ref">
		<include refid="selectAllRef"/>
		union
		select w.work_list_id,w.work_list_name,w.work_list_name,w.disable,w.sort_priority from ptrwork_list w 
		inner join ptruser_wl_assign u on w.work_list_id=u.work_list_id
		where (u.user_id=#LOGON_USER#)	
	</select>
<!-- create action -->	
	<sql id="getCeateActionAccountFragments">
		SELECT A.ID AS ACCOUNT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_WORK_LIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID <isNotNull property="WORKLIST_ID"> and WA.WORK_LIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRUSER_WL_ASSIGN UW ON UW.WORK_LIST_ID=WA.WORK_LIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE NOT EXISTS(SELECT 1 FROM PTRACCOUNT_AGENCY_ASSIGNMENT AG INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON SR.ID=AG.SUBTYPE_ID
		WHERE AG.ACCOUNT_ID=A.ID AND AG.STATUS_ID=15007 and SR.TYPE_ID=#PROCESS_TYPE_ID#)
		AND NOT EXISTS(SELECT 1 FROM ptraccount_rejected_assignment rj inner join ptrtreatment_subtype_ref sub on sub.id=rj.subtype_id and sub.type_id=#PROCESS_TYPE_ID#
		where rj.account_id=a.id)
		<isNotNull property="PRODUCT_CATEGORY_ID"> and PR.ID=#PRODUCT_CATEGORY_ID# </isNotNull>
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME"> and UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER"> and UPPER(C.CUSTOMER_ID_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="MIA_FROM"> and A.MONTHS_IN_ARREARS &gt;= #MIA_FROM#</isNotEmpty>	
		<isNotEmpty property="MIA_TO"> and A.MONTHS_IN_ARREARS &lt;= #MIA_TO#</isNotEmpty>	
		<isNotEmpty property="ACCOUNT_NUMBERS"> and a.account_no in(<iterate property="ACCOUNT_NUMBERS" conjunction=",">#ACCOUNT_NUMBERS[]#</iterate>)</isNotEmpty>
		
	</sql>
	<select id="getCeateActionTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.ACCOUNT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="getCeateActionAccountFragments"/>
		) A 
	</select>
	<resultMap class="hmap" id="getCeateActionAccountIds">
		<result javaType="long" property="ACCOUNT_ID"/>
		<result javaType="long" property="RNUM"/>
	</resultMap>
	<select id="getCeateActionAccountIds" resultMap="getCeateActionAccountIds">
		SELECT A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="getCeateActionAccountFragments"/>
		) A 
		<include refid="pageFragment"/>
	</select>
<!-- agency monitoring -->
	<sql id="getEcaMonitoringFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID<isEqual property="USER_TYPE_ID" compareValue="2"> and AG.acknowledged_date is not null</isEqual>
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		LEFT JOIN PTRAGENCY_EFFECTIVE_ASSIGNMENT E ON E.AGENCY_ASSIGNMENT_ID=AG.ID
		<isNotNull property="RECOMMENDED_ABORT_REASON_ID"> 
		inner join ptragency_abort_recommendation aar on aar.agency_assignment_id=ag.id
		</isNotNull>
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_WORK_LIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID <isNotNull property="WORKLIST_ID"> and WA.WORK_LIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRUSER_WL_ASSIGN UW ON UW.WORK_LIST_ID=WA.WORK_LIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<isNotNull property="MONITORING_STATUS_ID"> and ag.LAST_ECA_INSTRUCTION_ACTION_ID=#MONITORING_STATUS_ID# </isNotNull>
		<isNotNull property="RECOMMENDED_ABORT_REASON_ID"> and aar.RECOMMENDED_ABORT_REASON_ID=#RECOMMENDED_ABORT_REASON_ID# </isNotNull>
		<isNotNull property="PRODUCT_CATEGORY_ID"> and PR.ID=#PRODUCT_CATEGORY_ID# </isNotNull>
		<isNotNull property="AGENCY_ID"> and AG.AGENCY_ID=#AGENCY_ID# </isNotNull>
		<isNotNull property="SUBTYPE_ID"> and SR.ID=#SUBTYPE_ID# </isNotNull>
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME"> and UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER"> and UPPER(C.CUSTOMER_ID_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="MIA_FROM"> and A.MONTHS_IN_ARREARS &gt;= #MIA_FROM#</isNotEmpty>	
		<isNotEmpty property="MIA_TO"> and A.MONTHS_IN_ARREARS &lt;= #MIA_TO#</isNotEmpty>	
		<isNotEmpty property="OS_BALANCE_FROM"> and A.OUTSTANDING_BALANCE &gt;= #OS_BALANCE_FROM#</isNotEmpty>	
		<isNotEmpty property="OS_BALANCE_TO"> and A.OUTSTANDING_BALANCE &lt;= #OS_BALANCE_TO#</isNotEmpty>	
		<isNotEmpty property="STATUS_FILTER">
			<isEqual property="STATUS_FILTER" compareValue="2">
				AND DATE(AG.expected_end_date) &lt;= cast(#CURRENT_DATE# as DATE) + interval '20 days'
			</isEqual>
			<isEqual property="STATUS_FILTER" compareValue="3">
				AND retain_requested = <include refid="true"/>
			</isEqual>
			<isEqual property="STATUS_FILTER" compareValue="4">
				AND DATE(AG.expected_end_date) &lt; cast(#CURRENT_DATE# as DATE)
			</isEqual>
		</isNotEmpty>		
	</sql>	
	<select id="getEcaMonitoringTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="getEcaMonitoringFragments"/>
		) A 
	</select>
	<resultMap id="getEcaMonitoringccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getEcaMonitoringccountIds" resultMap="getEcaMonitoringccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="getEcaMonitoringFragments"/>
		) A 
		<include refid="pageFragment"/>
	</select>
<!-- assign to eca -->	
	<sql id="assignToEcaAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		inner join ptraccount_queue_assignment queue on queue.account_id=a.id
		left join ptraccount_rejected_assignment rj on rj.account_id=a.id
		INNER JOIN PTRACCOUNT_WORK_LIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID <isNotNull property="WORKLIST_ID"> and WA.WORK_LIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRUSER_WL_ASSIGN UW ON UW.WORK_LIST_ID=WA.WORK_LIST_ID AND UW.USER_ID =#LOGON_USER#
		inner join ptrtreatment_subtype_ref sub on sub.id=queue.subtype_id and sub.type_id=#PROCESS_TYPE_ID#
		WHERE NOT EXISTS(SELECT 1 FROM PTRACCOUNT_AGENCY_ASSIGNMENT AG INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON SR.ID=AG.SUBTYPE_ID
		WHERE AG.ACCOUNT_ID=A.ID AND AG.STATUS_ID=15007 and SR.TYPE_ID=#PROCESS_TYPE_ID#)
		<isNotNull property="PRODUCT_CATEGORY_ID"> and PR.ID=#PRODUCT_CATEGORY_ID# </isNotNull>
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME"> and UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER"> and UPPER(C.CUSTOMER_ID_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'</isNotEmpty>		
	</sql>	
	
	<select id="assignToEcaAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.ACCOUNT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="assignToEcaAccountIdFragments"/>
		) A 
	</select>
	<resultMap class="hmap" id="getAssignToEcaAccountIds">
		<result javaType="long" property="ACCOUNT_ID"/>
		<result javaType="long" property="RNUM"/>
	</resultMap>
	<select id="getAssignToEcaAccountIds" resultMap="getAssignToEcaAccountIds">
		SELECT A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="assignToEcaAccountIdFragments"/>
		) A 
		<include refid="pageFragment"/>
	</select>
	
<!-- new accounts -->
	<sql id="getNewAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_ASSIGNMENT_ACKNOWLEDGEMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_WORK_LIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID <isNotNull property="WORKLIST_ID"> and WA.WORK_LIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRUSER_WL_ASSIGN UW ON UW.WORK_LIST_ID=WA.WORK_LIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<isNotNull property="PRODUCT_CATEGORY_ID"> and PR.ID=#PRODUCT_CATEGORY_ID# </isNotNull>
		<isNotNull property="AGENCY_ID"> and AG.AGENCY_ID=#AGENCY_ID# </isNotNull>
		<isNotNull property="SUBTYPE_ID"> and SR.ID=#SUBTYPE_ID# </isNotNull>
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME"> and UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER"> and UPPER(C.CUSTOMER_ID_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="MIA_FROM"> and A.MONTHS_IN_ARREARS &gt;= #MIA_FROM#</isNotEmpty>	
		<isNotEmpty property="MIA_TO"> and A.MONTHS_IN_ARREARS &lt;= #MIA_TO#</isNotEmpty>	
		<isNotEmpty property="OS_BALANCE_FROM"> and A.OUTSTANDING_BALANCE &gt;= #OS_BALANCE_FROM#</isNotEmpty>	
		<isNotEmpty property="OS_BALANCE_TO"> and A.OUTSTANDING_BALANCE &lt;= #OS_BALANCE_TO#</isNotEmpty>	
		
				
	</sql>	
	<select id="getNewAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="getNewAccountIdFragments"/>
		) A 
	</select>
	<resultMap class="hmap" id="getNewAccountAccountIds">
		<result javaType="long" property="AGENCY_ASSIGNMENT_ID"/>
		<result javaType="long" property="ACCOUNT_ID"/>
		<result javaType="long" property="RNUM"/>
	</resultMap>
	<select id="getNewAccountAccountIds" resultMap="getNewAccountAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="getNewAccountIdFragments"/>
		) A 
		<include refid="pageFragment"/>
	</select>
	
<!-- assigned accounts -->	

	<select id="getAssignedAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="getEcaMonitoringFragments"/>
		AND E.EFFECTIVE_DATE &lt;= #CURRENT_DATE#
		) A 
	</select>
	<resultMap class="hmap" id="getAssignedAccountsAccountIds">
		<result javaType="long" property="AGENCY_ASSIGNMENT_ID"/>
		<result javaType="long" property="ACCOUNT_ID"/>
		<result javaType="long" property="RNUM"/>
	</resultMap>
	<select id="getAssignedAccountsAccountIds" resultMap="getAssignedAccountsAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="getEcaMonitoringFragments"/>
		AND E.EFFECTIVE_DATE &lt;= #CURRENT_DATE#
		<isNotEqual compareValue="2" property="USER_TYPE_ID">
		AND (
		(DATE(AG.EXPECTED_END_DATE) &lt; cast(#CURRENT_DATE# as date))
		OR
		(DATE(AG.EXPECTED_END_DATE) &lt;= cast(#CURRENT_DATE# as date) + interval '20 days')
		)
		</isNotEqual>
		) A 
		<include refid="pageFragment"/>
	</select>
	
<!-- aborted accounts -->
	<sql id="ecaAbortedAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_ABORTED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_WORK_LIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID <isNotNull property="WORKLIST_ID"> and WA.WORK_LIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRUSER_WL_ASSIGN UW ON UW.WORK_LIST_ID=WA.WORK_LIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<isNotNull property="PRODUCT_CATEGORY_ID"> and PR.ID=#PRODUCT_CATEGORY_ID# </isNotNull>
		<isNotNull property="AGENCY_ID"> and AG.AGENCY_ID=#AGENCY_ID# </isNotNull>
		<isNotNull property="SUBTYPE_ID"> and SR.ID=#SUBTYPE_ID# </isNotNull>
		<isNotNull property="ABORT_REASON_ID"> and AG.ABORT_REASON_ID=#ABORT_REASON_ID# </isNotNull>
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME"> and UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER"> and UPPER(C.CUSTOMER_ID_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'</isNotEmpty>		
	</sql>
	<select id="getEcaAbortedAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="ecaAbortedAccountIdFragments"/>
		) A 
	</select>
	<resultMap class="hmap" id="getEcaAbortedAccountIds">
		<result javaType="long" property="AGENCY_ASSIGNMENT_ID"/>
		<result javaType="long" property="ACCOUNT_ID"/>
		<result javaType="long" property="RNUM"/>
	</resultMap>
	<select id="getEcaAbortedAccountIds" resultMap="getEcaAbortedAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="ecaAbortedAccountIdFragments"/>
		) A 
		<include refid="pageFragment"/>
	</select>
	
	
	
	
	<resultMap class="hmap" id="getCustomerHostContactNumber">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="COLUMN" javaType="string" />
		<result property="VALUE" javaType="string" />
	</resultMap>
	<select id="getCustomerHostContactNumber" resultMap="getCustomerHostContactNumber">
	select 
	a.id, 
	case 
	when t.code='HP' then 'MOBILE'
	when t.code='OF' then 'OFFICE'
	when t.code='RP' then 'HOME' end as COLUMN, 
	p.no as VALUE
	from ptraccount a
	inner join ptrhost_phone_no p on p.customer_id=a.customer_id 
	inner join ptrhost_phone_no_type_ref t on t.id=p.host_phone_no_type_id and t.code in ('HP','OF','RP')
		<isNotEmpty property="ACCOUNTS">
			where a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
		order by a.id, t.code, p.id asc
	</select>
	
	<resultMap class="hmap" id="getLegalWorklistPaymentMethod">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="PAYMENT_METHOD" javaType="string" />
	</resultMap>
	<select id="getLegalWorklistPaymentMethod" resultMap="getLegalWorklistPaymentMethod">
	select a.id,
	ref.description as PAYMENT_METHOD
	from ptraccount a
	inner join ptrvw_account_last_payment_method payment on payment.account_id=a.id
		inner join ptrpayment_method_ref ref on payment.last_payment_method_id = ref.id
		<isNotEmpty property="ACCOUNTS">
			where a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
	</select>
	
	
	<resultMap class="hmap" id="getCustomerFirstJointAccountDetails">
	<result property="ACCOUNT_ID" javaType="long"/>
	<result property="JOINT_ID_1ST" javaType="string"/>
	<result property="JOINT_NAME_1ST" javaType="string"/>
	<result property="JOINT_ADDRESS_1ST" javaType="string"/>
	<result property="JOINT_MOBILE_1ST" javaType="string"/>
	</resultMap>
	
	<sql id="getCustomerJointAccountDetails-fragments">
	select a.id, a.customer_id_no, a.customer_name, a.address, a.no from (
	select 
	a.id, 
	c.customer_id_no, 
	c.customer_name, 
	coalesce(ho.line_1||',','')||''||coalesce(ho.line_2||',','')||''||coalesce(ho.line_3||',','')||''||coalesce(ho.line_4||',','')||''||coalesce(ho.line_5||',','')||''||coalesce(ho.city||',','')||''||coalesce(st.description,'') as address,
	no.no,
	row_number() over(partition by a.id order by rel.id asc, ho.id desc, no.id desc) as rnum
	from ptraccount a
	inner join ptrcustomer_account_rel rel on rel.account_id=a.id
	inner join ptrcustomer c on c.id=rel.customer_id
	inner join ptrcustomer_account_relation_type_ref relt on relt.id=rel.type_id and relt.code='JT'
	inner join ptrhost_address ho on ho.customer_id=c.id
	inner join ptrhost_address_type_ref hot on hot.id=ho.host_address_type_id and hot.code='M'
	left join ptrstate_ref st on st.id=ho.state_id
	inner join ptrhost_phone_no no on no.customer_id=c.id and no.disable=false
    inner join ptrhost_phone_no_type_ref ty on ty.id=no.host_phone_no_type_id and ty.code='HP'
	</sql>
	
	<select id="getCustomerFirstJointAccountDetails" resultMap="getCustomerFirstJointAccountDetails">
	<include refid="getCustomerJointAccountDetails-fragments"/>
	<isNotEmpty property="ACCOUNTS">
			where a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
	)a where a.rnum=1
	</select>
	<select id="getCustomerSecondJointAccountDetails" resultMap="getCustomerFirstJointAccountDetails">
	<include refid="getCustomerJointAccountDetails-fragments"/>
	<isNotEmpty property="ACCOUNTS">
			where a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
	)a where a.rnum=2
	</select>
	
	
</sqlMap>