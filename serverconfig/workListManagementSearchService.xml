<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="workListManagementSearchService.xml">


<sql id="getWorkListManagementSearchFilters">
<isEqual property="WORK_LIST_CODE" compareValue="AF">
and category.code = 'AF'
</isEqual>
<isEqual property="WORK_LIST_CODE" compareValue="PF">
and category.code = 'PF'
</isEqual>
<isEqual property="WORK_LIST_CODE" compareValue="PFI">
and category.code = 'PFI'
</isEqual>

<isNotNull prepend=" AND " property="ACCOUNT_NUMBER"> a.account_no = #ACCOUNT_NUMBER# </isNotNull>
<isNotNull prepend=" AND " property="CUSTOMER_ID"> cus.customer_no = #CUSTOMER_ID# </isNotNull>
<isNotNull prepend=" AND " property="CUSTOMER_ID_NO"> cus.CUSTOMER_ID_NO = #CUSTOMER_ID_NO# </isNotNull>

<isNotNull prepend=" AND " property="NO_OF_INSTALLMENT_FROM">a.MONTHS_IN_ARREARS >= #NO_OF_INSTALLMENT_FROM#</isNotNull>
<isNotNull prepend=" AND " property="NO_OF_INSTALLMENT_TO"><![CDATA[a.MONTHS_IN_ARREARS <= ]]> #NO_OF_INSTALLMENT_TO#</isNotNull>
<isNotNull prepend=" AND " property="CURRENT_BALANCE_FROM">a.outstanding_balance >= #CURRENT_BALANCE_FROM#</isNotNull>
<isNotNull prepend=" AND " property="CURRENT_BALANCE_TO"><![CDATA[a.outstanding_balance <= ]]> #CURRENT_BALANCE_TO#</isNotNull>
<isNotNull prepend=" AND " property="INSTALLMENT_AMOUNT_IN_ARREARS_FROM">a.INSTALLMENT_AMOUNT_IN_ARREARS >= #INSTALLMENT_AMOUNT_IN_ARREARS_FROM#</isNotNull>
<isNotNull prepend=" AND " property="INSTALLMENT_AMOUNT_IN_ARREARS_TO"><![CDATA[a.INSTALLMENT_AMOUNT_IN_ARREARS <= ]]> #INSTALLMENT_AMOUNT_IN_ARREARS_TO#</isNotNull>
<isNotNull prepend=" AND " property="MONTHLY_INSTALLMENT_AMOUNT_FROM">a.PAYMENT_AMOUNT >= #MONTHLY_INSTALLMENT_AMOUNT_FROM#</isNotNull>
<isNotNull prepend=" AND " property="MONTHLY_INSTALLMENT_AMOUNT_TO"><![CDATA[a.PAYMENT_AMOUNT <= ]]> #MONTHLY_INSTALLMENT_AMOUNT_TO#</isNotNull>
<isNotNull prepend=" AND " property="BRANCH_ID">a.BRANCH_ID = #BRANCH_ID#</isNotNull>
</sql>

<resultMap class="hmap" id="getWlmAccountsForAssignment">
<result property="ACCOUNT_ID" javaType="long"/>
</resultMap>

<select id="getWlmAccountsForAssignment" resultMap="getWlmAccountsForAssignment">
select aa.ACCOUNT_ID, rowNumber from     
(select 
a.id as account_id, 
row_number() over () as rowNumber
from ptraccount a
inner join ptrproduct_type_ref pr on a.product_type_id = pr.id
<isEqual property="TYPE_CODE" compareValue="agencyuser">
inner join ptraccount_agency_assignment agassign on a.id = agassign.account_id 
inner join ptragency_effective_assignment eff on eff.agency_assignment_id = agassign.id
and agassign.status_id = 15007
and agassign.agency_id=#AGENCY_ID#
and agassign.acknowledged_date is not null
</isEqual>
inner join PTRPRODUCT_TYPE_CATEGORY_REF category on pr.CATEGORY_ID = category.id 
inner join ptrcustomer cus on a.customer_id = cus.id
where a.id IS NOT NULL
<include refid="getWorkListManagementSearchFilters" />
and not exists (
select 
wlassign.account_id from
<isEqual property="TYPE_CODE" compareValue="agencyuser">
PTRAGENCY_WORK_LIST_ASSIGNMENT wlassign
</isEqual>
<isNotEqual property="TYPE_CODE" compareValue="agencyuser">
PTRACCOUNT_WORK_LIST_ASSIGNMENT wlassign
</isNotEqual> 
where a.id = wlassign.account_id
and wlassign.work_list_id is not null
))aa
where
aa.rowNumber &gt;=  <include refid="getPaginationStart" /> 
and <include refid="getPaginationEnd" /> &gt;=  aa.rowNumber
</select>


<resultMap class="hmap" id="getWlmSearchResultInformation">
<result property="CUSTOMER_ID" javaType="string"/>
<result property="CONTACT_FIRST_NAME" javaType="string"/>
<result property="ACCOUNT_NUMBER" javaType="string"/>
<result property="ACCOUNT_ID" javaType="long"/>
<result property="WORK_LIST_NAME" javaType="string"/>
<result property="USER_ID" javaType="string"/>
<result property="USER_NAME" javaType="string"/>
<result property="WORK_LIST_ID"  javaType="long"/>
<result property="DAYS_PAST_DUE"  javaType="integer"/>
<result property="UPDATE_ACCOUNT" javaType="string"/>
<result property="TOTAL_AMOUNT_DUE" javaType="$"/>
    <result property="IDENTIFICATION_NUMBER" javaType="string"/>
    <result property="WORK_LIST_NAME" javaType="string"/>
    <result property="MIA" javaType="integer"/>
    <result property="INSTALLMENT_AMOUNT_IN_ARREARS" javaType="$"/>
    <result property="PAYMENT_AMOUNT" javaType="$"/>
<result property="WRITE_OFF_AMOUNT" javaType="$"/>
<result property="TOTAL_AMOUNT_DUE" javaType="$"/>
<result property="INTEREST_REBATE" javaType="$"/>
<result property="CUSTOMER_ID_NO" javaType="string"/>
</resultMap>


<select id="getWlmSearchResultInformation" parameterClass="map" resultMap="getWlmSearchResultInformation">
select
distinct(c.CUSTOMER_NO) as CUSTOMER_ID,
c.CUSTOMER_NAME,
a.ACCOUNT_NO,
a.id,
w.WORK_LIST_NAME,
wl.USER_ID,
c.CUSTOMER_NAME as USERNAME,
wlassign.work_list_id,
a.months_in_arrears  * 30,
case 
when wlassign.account_id = a.id 
and wlassign.work_list_id is null then 'true' else 'false' end as update_account,

a.outstanding_balance as TOTAL_AMOUNT_DUE,
c.customer_id_no as IDENTIFICATION_NUMBER,
w.work_list_name as WORK_LIST_NAME,
a.months_in_arrears as MIA,
a.INSTALLMENT_AMOUNT_IN_ARREARS as INSTALLMENT_AMOUNT_IN_ARREARS,
a.PAYMENT_AMOUNT as PAYMENT_AMOUNT,

a.WRITE_OFF_AMOUNT,
a.TOTAL_AMOUNT_DUE,
a.INTEREST_REBATE_AMOUNT,
c.CUSTOMER_ID_NO
from
ptrcustomer c
inner join ptraccount a on a.customer_id = c.id
inner join ptrproduct_type_ref pr on a.product_type_id = pr.id
inner join ptrproduct_type_category_ref ptc on pr.category_id = ptc.id
<isEqual property="TYPE_CODE" compareValue="agencyuser">
left join PTRAGENCY_WORK_LIST_ASSIGNMENT wlassign on a.id = wlassign.account_id
left join ptrAGENCY_work_list w on w.work_list_id = wlassign.work_list_id
left join ptrAGENCY_user_work_list_assign wl on wl.work_list_id = wlassign.work_list_id
</isEqual>
<isNotEqual property="TYPE_CODE" compareValue="agencyuser">
left join PTRACCOUNT_WORK_LIST_ASSIGNMENT wlassign on a.id = wlassign.account_id
left join ptrwork_list w on w.work_list_id = wlassign.work_list_id
left join ptruser_wl_assign wl on wl.work_list_id = wlassign.work_list_id



</isNotEqual>
where
<isNotEmpty property="ACCOUNTS">
<iterate prepend=" a.id in " property="ACCOUNTS" open="(" close=")" conjunction=",">#ACCOUNTS[]#</iterate>
</isNotEmpty>
<isEmpty property="ACCOUNTS"> a.id is null</isEmpty>
</select>



</sqlMap>


