<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="customerSearchService">

	<select id="getProductsForSearch" resultMap="global.ref">
		<include refid="selectAllRef" />
		<include refid="fromdual" />
		union
		select p.id,p.code,p.code ||' - ' ||p.description,
		p.disable,row_number() over(order by p.code ||' - ' ||p.description) as sort_priority
		from ptrproduct_type_category_ref p
	</select> 
	
	<select id="getAccountTypes" resultMap="global.ref">
		<include refid="selectAllRef" />
		<include refid="fromdual" />
		union
		select p.id,p.code,p.description,
		p.disable,row_number() over(order by p.code ||' - ' ||p.description) as sort_priority
		from ptraccount_type_ref p
	</select>
	
	
	<!-- <resultMap id="getProductsForSearch" class="hmap" extends="global.ref">
		<result property="PRODUCT_CATEGORY_ID" javaType="long" />
	</resultMap>
	<select id="getProductsForSearch" resultMap="getProductsForSearch">
		<include refid="selectAllRef" />
		,
		null as PRODUCT_CATEGORY_ID
		<include refid="fromdual" />
		union
		select p.id,p.code,r.code ||' - ' ||p.description,
		p.disable,r.sort_priority
		,
		r.id
		from ptrproduct_type_ref p
		inner join ptrproduct_type_category_ref r on r.id=p.category_id
	</select> -->
	<resultMap class="hmap" id="getSearchAccountIds">
		<result property="ACCOUNT_ID" javaType="long" />
	</resultMap>
	<select id="getSearchAccountIds" resultMap="getSearchAccountIds">
	select a.ID from(
		SELECT A.ID, row_number() over(order by a.ID) as RNUM  FROM PTRACCOUNT A
		inner join PTRCUSTOMER c on c.id=a.customer_id
		INNER JOIN PTRPRODUCT_TYPE_REF P ON A.PRODUCT_TYPE_ID = P.ID <!-- and p.disable != true -->
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PC ON P.CATEGORY_ID = PC.ID
		INNER JOIN PTRACCOUNT_TYPE_REF PAT on A.ACCOUNT_TYPE_ID=PAT.ID
		<isEqual property="searchAccountWorkList" compareValue="true">
		inner join ptraccount_work_list_assignment awl on awl.account_id=a.id
        inner join ptrwork_list wl on wl.work_list_id=awl.work_list_id
        inner join ptruser_wl_assign uwl on uwl.work_list_id=wl.work_list_id
        inner join ptruser us on us.user_id=uwl.user_id
        inner join ptremployee e on e.id=us.employee_id
		</isEqual>
		<isEqual property="searchCollateral" compareValue="true">
		inner join ptraccount_collateral_rel acr on acr.account_id=a.id
		inner join ptrcollateral col on col.id=acr.collateral_id
		</isEqual>
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		<isEqual property="agencySearch" compareValue="true">
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID AND AG.STATUS_ID=15007
		INNER JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID
		</isEqual>
		</isNotEqual>
		<isEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID AND AG.STATUS_ID=15007 and ag.acknowledged_date is not null
		
		inner join ptragency_effective_assignment ef on ef.agency_assignment_id=ag.id and ef.effective_date &lt;= #CURRENT_DATE#
		INNER JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID and g.id=#AGENCY_ID#
		</isEqual>
		<isNotNull property="IDENTIFICATION_NUMBER">
		inner join 
		(
		select CUSTOMER_ID, customer_id_no from PTRCUSTOMER_IDENTIFICATION_NO
		union
		select ID as CUSTOMER_ID, customer_id_no from PTRCUSTOMER
		)ci on ci.CUSTOMER_ID=c.ID
		</isNotNull>
		<isNotNull property="PHONE_NO">
		inner join (
		select CUSTOMER_ID, NO from PTRCONTACT_NUMBER
		union
		select CUSTOMER_ID, NO from PTRHOST_PHONE_NO
		)cn on cn.CUSTOMER_ID=c.ID
		</isNotNull>
		<isEqual property="searchGuarantor" compareValue="true">
		inner join (select rel.account_id
		from ptrcustomer cust 
		inner join ptrcustomer_account_rel rel on (rel.customer_id = cust.id)
		inner join ptrcustomer_account_relation_type_ref rt on (rt.id = rel.type_id and rt.code !='P') 
		<isNotNull property="G_ID_NUMBER">
		inner join 
		(
		select CUSTOMER_ID, customer_id_no from PTRCUSTOMER_IDENTIFICATION_NO
		union
		select ID as CUSTOMER_ID, customer_id_no from PTRCUSTOMER
		)ci on ci.CUSTOMER_ID=cust.ID
		</isNotNull>
		where 1=1 
		<isNotNull property="GNAME">
		and cust.CUSTOMER_NAME like UPPER(#GNAME#||'%')  
		</isNotNull>
		<isNotNull property="G_ID_NUMBER">
		and ci.customer_id_no=#G_ID_NUMBER#
		</isNotNull>
		) r on (a.id = r.account_id)
		</isEqual>
		where a.ID is not null
		<isNotNull property="ACCOUNT_NO">
		and A.ACCOUNT_NO = #ACCOUNT_NO#
		</isNotNull>
		<isNotNull property="CIF_NO">
		and c.CUSTOMER_NO = #CIF_NO#
		</isNotNull>
		<isNotNull property="VEHICLE_NO">
		and col.registration_no=#VEHICLE_NO#
		</isNotNull>
		<isNotNull property="IDENTIFICATION_NUMBER">
		and ci.customer_id_no=#IDENTIFICATION_NUMBER#
		</isNotNull>
		<isNotNull property="NAME">
		and c.CUSTOMER_NAME like UPPER(#NAME#||'%')  
		</isNotNull>
		<isNotNull property="SERIAL_NO">
		and 1=1
		</isNotNull>
		<isNotNull property="ENGINE_NO">
		and col.engine_number=#ENGINE_NO#
		</isNotNull>
		<isNotNull property="OLD_ACC_NO">
		and A.OLD_ACCOUNT_NO=#OLD_ACC_NO#
		and 1=1
		</isNotNull>
		<isNotNull property="USER_NAME">
		and e.first_name=#USER_NAME#
		</isNotNull>
		<isNotNull property="USERID">
		and us.USER_ID=#USERID#
		</isNotNull>
		<isNotNull property="PHONE_NO">
		and cn.no=#PHONE_NO#
		</isNotNull>
		<isNotNull property="CHEQUE_NO">
		and 1=1
		</isNotNull>
		<isNotNull property="AGENCY_NUMBER">
		and upper(g.CODE) like UPPER(#AGENCY_NUMBER#||'%') 
		</isNotNull>
		<isNotNull property="AGENCY_NAME">
		and upper(g.description) like UPPER(#AGENCY_NAME#||'%') 
		</isNotNull>
		<isNotNull property="ACCOUNT_TYPE_ID">
		and pat.id = #ACCOUNT_TYPE_ID#
		</isNotNull>
		<isNotNull property="PRODUCT_TYPE_CATEGORY_ID">
		and pc.id = #PRODUCT_TYPE_CATEGORY_ID#
		</isNotNull>
        <isNotNull property="MIA">
        and a.months_in_arrears = #MIA#
        </isNotNull>
        <isNotNull property="ACCOUNT_STATUS_ID">
        and a.STATUS_ID = #ACCOUNT_STATUS_ID#
        </isNotNull>
		) a
		where
		a.RNUM   
		between (1 + ((cast(#PAGE_NUMBER# AS NUMERIC)  - 1) * #LIMIT_RESULT:NUMERIC#)) 
		and (#LIMIT_RESULT:NUMERIC# * cast(#PAGE_NUMBER# AS NUMERIC))
	</select>
	
	<resultMap class="hmap" id="getSearchAccountResults">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="ACCOUNT_NUMBER" javaType="string" />
		<result property="CUSTOMER_ID" javaType="string" />
		<result property="CUSTOMER_NAME" javaType="string" />
		<result property="WORK_LIST_NAME" javaType="string"/>
		<result property="USER_ID" javaType="string"/>
		<result property="USER_NAME" javaType="string"/>
		<result property="PRODUCT_TYPE" javaType="string"/>
		<result property="IDENTIFICATION_NUMBER" javaType="string"/>
    <result property="ACCOUNT_STATUS_DESCRIPTION" javaType="string"/>
    <result property="MONTHS_IN_ARREARS" javaType="long" />
	</resultMap>
	<select id="getSearchAccountResults" resultMap="getSearchAccountResults">
		select A.ID,A.ACCOUNT_NO,C.ID,C.CUSTOMER_NAME,
		wl.work_list_name,uwl.user_id,coalesce(e.first_name,'')||' '||coalesce(e.middle_name,'')||' '||coalesce(e.last_name,''),
		PC.description,c.customer_id_no,
        status.description as ACCOUNT_STATUS_DESCRIPTION,
        a.MONTHS_IN_ARREARS
		from PTRACCOUNT A
		INNER JOIN PTRCUSTOMER C ON cast(a.customer_id as bigint)=c.id
		left join ptraccount_work_list_assignment awl on awl.account_id=a.id and awl.work_list_id is not null
        left join ptrwork_list wl on wl.work_list_id=awl.work_list_id
        left join ptruser_wl_assign uwl on uwl.work_list_id=wl.work_list_id  and uwl.is_default_user=<include refid="true"/>
        left join ptruser us on us.user_id=uwl.user_id
        left join ptremployee e on e.id=us.employee_id
        left join ptraccount_status_ref status on a.status_id = status.id
        INNER JOIN PTRPRODUCT_TYPE_REF P ON A.PRODUCT_TYPE_ID = P.ID
	    INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PC ON P.CATEGORY_ID = PC.ID
		<isNotEmpty property="ACCOUNTS">
			where A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
	</select>
  
  
  <resultMap class="hmap" id="getAccountStatusSearch">
<result property="ID" javaType="long" />
<result property="DESCRIPTION" javaType="java.lang.String" />
<result property="SORT" javaType="long" />
</resultMap>

<select id="getAccountStatusSearch" resultMap="getAccountStatusSearch">
select cast(null as int8) as id, 'Please Select' as description, -1 as sort
union
SELECT ID, description, 1 as sort FROM ptraccount_status_ref order by sort asc
</select>

<resultMap class="hmap" id="getLogonUserType">
<result property="USER_TYPE_ID" javaType="long"/>
<result property="AGENCY_ID" javaType="long"/>
</resultMap>

<select id="getLogonUserType" resultMap="getLogonUserType">
select us.user_type_id, e.agency_id from ptremployee e
inner join ptruser us on us.employee_id=e.id
where us.user_id=#USER_ID#
</select>

  	
</sqlMap> 