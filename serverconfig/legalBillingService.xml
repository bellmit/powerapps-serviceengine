<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="legalBillingService">

	<select id="getLegalFirmForBillingFilter" resultMap="global.ref">
	<isEqual property="USER_TYPE_ID" compareValue="2">
		SELECT DISTINCT G.ID,G.CODE,G.DESCRIPTION,G.DISABLE,G.SORT_PRIORITY FROM PTRAGENCY G
		INNER JOIN PTRAGENCY_CONTRACT_REL R ON R.AGENCY_ID=G.ID
		INNER JOIN PTRAGENCY_CONTRACT C ON C.ID=R.CONTRACT_ID 
		INNER JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=C.SUBTYPE_ID AND S.TYPE_ID=#ID#	and G.ID=#AGENCY_ID#	
	</isEqual>
	<isNotEqual property="USER_TYPE_ID" compareValue="2">
		<include refid="selectAllRef"/>
		union
		SELECT DISTINCT G.ID,G.CODE,G.DESCRIPTION,G.DISABLE,G.SORT_PRIORITY FROM PTRAGENCY G
		INNER JOIN PTRAGENCY_CONTRACT_REL R ON R.AGENCY_ID=G.ID
		INNER JOIN PTRAGENCY_CONTRACT C ON C.ID=R.CONTRACT_ID 
		INNER JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=C.SUBTYPE_ID AND S.TYPE_ID=#ID#	
	</isNotEqual>
	</select>
	<resultMap id="legalBillingSummary-map" class="hmap">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="INSTRUCTION_PROCESS_ID" javaType="long" />
		<result property="INSTRUCTION" javaType="string" />
		<result property="ASSIGNMENT_TYPE" javaType="string" />
		<result property="AGENCY_NAME" javaType="string" />
		<result property="CUSTOMER_NAME" javaType="string" />
		<result property="ACCOUNT_NO" javaType="string" />
		<result property="CASE_NO" javaType="string" />
		<result property="MISCELLANEOUS_CHARGE" javaType="$" />
		<result property="COLOR" javaType="string"/>
	</resultMap>
	<sql id="legalBillingSearch-fragment">
		<isNotEmpty property="AGENCY_ID">and ag.agency_id=#AGENCY_ID#</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME">and c.customer_name=#CUSTOMER_NAME#</isNotEmpty>
		<isNotEmpty property="ACCOUNT_NUMBER">and a.account_no=#ACCOUNT_NUMBER#</isNotEmpty>
		<isNotEmpty property="PRODUCT_CATEGORY_ID">and ptr.CATEGORY_ID=#PRODUCT_CATEGORY_ID#</isNotEmpty>
		<isNotEmpty property="SUBTYPE_ID">and s.id=#SUBTYPE_ID#</isNotEmpty>	
	</sql>
	
	<sql id="legalBillingSummary-fragment">
		SELECT AG.ACCOUNT_ID,P.AGENCY_ASSIGNMENT_ID,P.ID AS INSTRUCTION_PROCESS_ID,
		R.DESCRIPTION AS INSTRUCTION,S.DESCRIPTION AS ASSIGNMENT_TYPE,G.DESCRIPTION,
		C.CUSTOMER_NAME,A.ACCOUNT_NO,AG.CASE_NO,A.MISCELLANEOUS_CHARGE,
		CASE WHEN DATE(#CURRENT_DATE#) - DATE(DATE(P.CREATED_TIME) + TAT.TAT) > 0 THEN 'FF0000' END AS COLOR 
		FROM 
		PTRLEGAL_ACTION_INSTRUCTION I 
		INNER JOIN PTRLEGAL_ACTION_PROCESS P ON P.ID=I.PROCESS_ID AND P.STATUS_ID !=15007 and P.BILLING_INVALID = <include refid="false"/>
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ID=P.AGENCY_ASSIGNMENT_ID
		INNER JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID
		INNER JOIN PTRACCOUNT A ON A.ID=AG.ACCOUNT_ID
		INNER JOIN PTRPRODUCT_TYPE_REF PTR ON PTR.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRCUSTOMER C ON C.ID=A.CUSTOMER_ID
		INNER JOIN PTRLEGAL_ACTION_REF R ON R.ID=P.ACTION_ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=AG.SUBTYPE_ID, PTRBILLING_TAT_REF TAT
	</sql>
	
	<sql id="legalBillingSummaryExpense-fragment">
		select coalesce(p.instruction_process_id,p.id) as instruction_process_id,sum(exp.amount) as amount 
		from PTRLEGAL_ACTION_EXPENSES EXP
		inner join ptrlegal_action_process p on p.id=exp.process_id and P.BILLING_INVALID = <include refid="false"/>
		where 1=1
		<isNotEmpty property="INSTRUCTION_PROCESS_IDS">
		and p.id in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		</isNotEmpty>

		<isNotEmpty property="INSTRUCTION_PROCESS_IDS">
		or p.instruction_process_id in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		</isNotEmpty>

		group by coalesce(p.instruction_process_id,p.id)	
	</sql>
	
	<sql id="legalTransactionExpense-fragment">
		SELECT E.PROCESS_ID,SUM(E.AMOUNT) AS AMOUNT, SUM(E.SST_AMOUNT) AS SST_AMOUNT
		FROM PTRLEGAL_ACTION_EXPENSES E
		INNER JOIN PTRLEGAL_ACTION_PROCESS P ON E.PROCESS_ID=P.ID and P.BILLING_INVALID = <include refid="false"/>
		WHERE P.ID= #INSTRUCTION_PROCESS_ID# OR P.INSTRUCTION_PROCESS_ID= #INSTRUCTION_PROCESS_ID#
		GROUP BY E.PROCESS_ID	
	</sql>
	<sql id="legalExpenseTotal-fragment">
		select process_id, sum(amount) as expense_amount from PTRLEGAL_ACTION_EXPENSES
		group by process_id
	</sql>	
	<resultMap id="legalTransactionDetails-map" class="hmap">
		<result property="PROCESS_ID" javaType="long" />
		<result property="CUSTOMER_NAME" javaType="string" />
		<result property="ACCOUNT_NUMBER" javaType="string" />
		<result property="ASSIGNMENT_TYPE" javaType="string" />
		<result property="STATUS" javaType="string" />
		<result property="INSTITUTION" javaType="string" />
		<result property="INSTRUCTION" javaType="string" />
		<result property="CONTRACT_TERM" javaType="string" />
		<result property="ACTION_NAME" javaType="string" />
		<result property="ACTION_DATE" javaType="date" />
		<result property="LAWYER_REFERENCE_NO" javaType="string" />
		<result property="LAWYER_NAME" javaType="string" />
		<result property="SST_AMOUNT" javaType="$" />
		<result property="DISBURSEMENT_AMOUNT" javaType="$" />
		<result property="COMMISSION_AMOUNT" javaType="$" />
		<result property="EXPENSE_AMOUNT" javaType="$" />
		<result property="TOTAL_AMOUNT" javaType="$" />
	</resultMap>	
	<select id="legalTransactionDetails" resultMap="legalTransactionDetails-map">
		SELECT P.ID,C.CUSTOMER_NAME,A.ACCOUNT_NO,S.DESCRIPTION AS ASSIGNMENT_TYPE,ST.DESCRIPTION AS STATUS,
		IL.DESCRIPTION AS INSTITUTION,COALESCE(AR.DESCRIPTION,'PROFESSIONAL FEE') AS INSTRUCTION,VT.DESCRIPTION AS TERM,
		ACT.DESCRIPTION AS ACTION,P.CREATED_TIME AS ACTION_DATE,P.LAWYER_REFERENCE_NO,G.DESCRIPTION AS LAWYER_NAME,
		COALESCE(P.SST_AMOUNT,0) as SST_AMOUNT,
		COALESCE(P.DISBURSEMENT_AMOUNT,0) AS DISBURSEMENT_AMOUNT,COALESCE(P.commission_amount,0) AS COMMISSION_AMOUNT,
		COALESCE(EXP.AMOUNT,0) AS EXPENSE_AMOUNT,
		COALESCE(P.COMMISSION_AMOUNT,0)+COALESCE(P.DISBURSEMENT_AMOUNT,0)+ COALESCE(EXP.AMOUNT,0)+ COALESCE(P.SST_AMOUNT,0) AS TOTAL_AMOUNT
		FROM PTRLEGAL_ACTION_PROCESS P 
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ID=P.AGENCY_ASSIGNMENT_ID
		INNER JOIN PTRACCOUNT A ON A.ID=AG.ACCOUNT_ID
		INNER JOIN PTRCUSTOMER C ON C.ID=A.CUSTOMER_ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=SUBTYPE_ID
		INNER JOIN PTRTREATMENT_STATUS_REF ST ON ST.ID=P.STATUS_ID
		LEFT JOIN PTRINSTITUTION_LEVEL_REF IL ON IL.ID=P.INSTITUTION_LEVEL_ID
		LEFT JOIN PTRLEGAL_ACTION_PROCESS I ON I.ID=P.INSTRUCTION_PROCESS_ID
		LEFT JOIN PTRLEGAL_ACTION_REF AR ON AR.ID=I.ACTION_ID
		LEFT JOIN PTRLEGAL_ACTION_REF ACT ON ACT.ID=P.ACTION_ID
		LEFT JOIN PTRAGENCY_CONTRACT_VERSION_TERM VT ON VT.ID=P.TERM_ID
		LEFT JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID
		LEFT JOIN (
		<include refid="legalTransactionExpense-fragment"/>
		) EXP ON EXP.PROCESS_ID=P.ID
		WHERE P.BILLING_INVALID = <include refid="false"/> AND P.STATUS_ID !=15007 
		<isEqual property="IS_INSTRUCTION_PROCESS_ID" compareValue="true">
		and P.INSTRUCTION_PROCESS_ID= #INSTRUCTION_PROCESS_ID#
		</isEqual>
		<isNotEqual property="IS_INSTRUCTION_PROCESS_ID" compareValue="true">
		and P.ID= #INSTRUCTION_PROCESS_ID#
		</isNotEqual>
		ORDER BY P.CREATED_TIME ASC 
	</select>
	
	<resultMap id="legalBillingSummaryDetails-map" class="hmap">
		<result property="INSTRUCTION_PROCESS_ID" javaType="long" />
		<result property="COMMISSION_AMOUNT" javaType="$" />
		<result property="DISBURSEMENT" javaType="$" />
		<result property="EXPENSE_AMOUNT" javaType="$" />
		<result property="TOTAL_AMOUNT" javaType="$" />
		<result property="SST_AMOUNT" javaType="$" />
	</resultMap>	
	<select id="legalBillingSummaryDetails" resultMap="legalBillingSummaryDetails-map">
	select a.instruction_process_id, sum(a.commission_amount), sum(a.disbursement_amount),
	sum(a.expense_amount), sum(a.total_amount), sum(a.sst_amount)
	from
		(
		select distinct
		coalesce(p.instruction_process_id,p.id) as instruction_process_id,
		coalesce(p.commission_amount,0) as commission_amount,
		coalesce(p.disbursement_amount,0) as disbursement_amount,
		coalesce(exp.amount,0) as expense_amount,
		coalesce(p.commission_amount,0)+coalesce(p.disbursement_amount,0)+coalesce(exp.amount,0)+ coalesce(p.sst_amount,0) as total_amount,	
		coalesce(p.sst_amount,0) as sst_amount
		from ptrlegal_action_process p
		left join (
		<include refid="legalBillingSummaryExpense-fragment"/>
		) exp on exp.instruction_process_id=coalesce(p.instruction_process_id,p.id)
		where P.BILLING_INVALID = <include refid="false"/>

		<isNotEmpty property="INSTRUCTION_PROCESS_IDS">
		and p.id in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		</isNotEmpty>

		<isNotEmpty property="INSTRUCTION_PROCESS_IDS">
		or p.instruction_process_id in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		</isNotEmpty>

		)a
		group by a.instruction_process_id
	</select>
	
	<resultMap id="transactionForExpenses-map" class="hmap">
		<result property="DESCRIPTION" javaType="string" />
		<result property="FEE_AMOUNT" javaType="$" />
		<result property="DISBURSEMENT_AMOUNT" javaType="$" />
		<result property="SST_AMOUNT" javaType="$" />
		<result property="AMOUNT" javaType="$" />
	</resultMap>
	<select id="legalTransactionForExpenses" resultMap="transactionForExpenses-map">
		select description,coalesce(fee_amount,amount),coalesce(disbursement_amount,0),coalesce(sst_amount,0),coalesce(amount,0)
		from PTRLEGAL_ACTION_EXPENSES 
		where process_id=#PROCESS_ID#
	</select>
	
<!-- unbilled -->
	<select id="unbilledData" resultMap="legalBillingSummary-map">
		<include refid="legalBillingSummary-fragment"/>
		WHERE P.PROCEED= <include refid="false"/>
		<include refid="legalBillingSearch-fragment"/>
		AND P.INVOICE_ID IS NULL AND TAT.CODE='UB'
	</select>
	<!-- pending billing -->
	<select id="pendingBillingData" resultMap="legalBillingSummary-map">
		<include refid="legalBillingSummary-fragment"/>
		WHERE P.PROCEED= <include refid="true"/>
		<include refid="legalBillingSearch-fragment"/>
		AND P.INVOICE_ID IS NULL AND TAT.CODE='PB'
	</select>
	<select id="BillingData" resultMap="legalBillingSummary-map">
		<include refid="legalBillingSummary-fragment"/>
		WHERE P.PROCEED= <include refid="true"/>
		AND P.INVOICE_ID=#INVOICE_ID#
	</select>	
<!--  -->

	<resultMap id="invoice-map" class="hmap">
		<result property="INVOICE_ID" javaType="long" />
		<result property="INVOICE_NUMBER" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="INVOICE_DATE" javaType="date" />
		<result property="AGENCY_NAME" javaType="string" />
		<result property="GL_CODE" javaType="string" />
		<result property="IBG_CODE" javaType="string" />
		<result property="MEMO_DESCRIPTION" javaType="string" />
		<result property="CHEQUE_NO" javaType="string" />
		<result property="COLOR" javaType="string"/>
	</resultMap>
	<sql id="legalBillingInvoice-fragment">
		select i.id as invoice_id, invoice_no, i.description, 
		i.invoice_date,g.description as agency_name,
		i.gl_code,i.ibg_code,i.memo_description,i.cheque_no,
	    case when date(#CURRENT_DATE#) - date(date(i.prepared_time) + tat.tat) > 0 then 'FF0000' end as COLOR 
		from ptrlegal_invoice i
		inner join ptragency g on g.id=i.agency_id
		left join ptrtreatment_subtype_ref s on s.id=i.subtype_id	
		left join ptrbilling_tat_ref tat on tat.code=i.stage_code
	</sql>	
	
	<resultMap id="getlegalInvoiceAmount" class="hmap">
		<result property="INVOICE_ID" javaType="long" />
		<result property="INVOICE_AMOUNT" javaType="$" />
	</resultMap>
	<select id="getlegalInvoiceAmount" resultMap="getlegalInvoiceAmount">
		select i.id as invoice_id,
		sum(coalesce(r.commission_amount,0)) + sum(coalesce(exp.expense_amount,0)) + sum(coalesce(r.disbursement_amount,0)) + sum(coalesce(r.sst_amount,0)) as invoice_amount
		from ptrlegal_invoice i
		inner join ptragency g on g.id=i.agency_id
		inner join ptrlegal_action_process r on r.invoice_id=i.id and r.billing_invalid = false
		left join(<include refid="legalExpenseTotal-fragment"/>) exp on r.id=exp.process_id
		<iterate prepend="where i.id in " property="INVOICES" open="(" close=")" conjunction=",">#INVOICES[]#</iterate>	
		group by i.id
	</select>
	<sql id="legalGenerateInvoiceSearch-fragment">
		<isNotEmpty property="BILLING_NO">
		and i.invoice_no like '%'||#BILLING_NO#||'%'
		</isNotEmpty>
		<isNotNull property="AGENCY_ID"> and i.agency_id=#AGENCY_ID#</isNotNull>
		<isNotNull property="PRODUCT_CATEGORY_ID"> and i.product_category_id=#PRODUCT_CATEGORY_ID#</isNotNull>	
		<isNotNull property="SUBTYPE_ID"> and i.subtype_id=#SUBTYPE_ID#</isNotNull>	
		<isNotNull property="PROCESS_TYPE_ID"> and s.type_id=#PROCESS_TYPE_ID#</isNotNull>		
	</sql>
	<!-- pending submission -->
	<select id="pendingSubmission" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'PS'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>
	<!-- pending approval -->
	<select id="pendingApproval" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE in ('SUR','BMV','LCA','HA','PA')
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>
	<!-- rejected invoice -->
	<select id="rejectedInvoce" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'RB'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>	
	<!-- supervisor recommendation -->
	<select id="supervisorRecommendation" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE in('SUR','DIS')
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>
	<!-- bank manager recommendation -->
	<select id="bankManagerVerification" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'BMV'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>	
	<!-- cad adjustment -->
	<select id="cadAdjustment" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'LCA'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>	
	<!-- hod approval -->
	<select id="hodApproval" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'HA'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>
	<!-- coordinator adjustment -->
	<select id="coordinatorAdjustment" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'BCA'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>	
	<!-- pending payment -->
	<select id="pendingPaymentRelease" resultMap="invoice-map">
		<include refid="legalBillingInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'PP'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>	
	<!--  -->
	<select id="pendingPaymentAcknowledment" resultMap="invoice-map">
		<include refid="legalInvoice-fragment"/>
		WHERE I.STAGE_CODE = 'PRS'
		<include refid="legalGenerateInvoiceSearch-fragment"/>
	</select>	
	
	<resultMap id="getActionCategoryForCommission" class="hmap">
		<result property="ACTION_CATEGORY" javaType="string" />
		<result property="SST_PERCENT" javaType="$" />
		<result property="DISBURSEMENT" javaType="boolean" />
	</resultMap>
	<select id="getActionCategoryForCommission" resultMap="getActionCategoryForCommission">
		SELECT TR.CODE,CASE WHEN R.SST = <include refid="true"/> THEN 0.06 ELSE 0 END AS SST_PERCENT,
		R.DISBURSEMENT 
		FROM PTRLEGAL_ACTION_REF R
		INNER JOIN PTRACTION_CATEGORY_REF TR ON TR.ID=R.CATEGORY_ID
		WHERE R.ID=#ACTION_ID#
	</select>	
	<update id="setLegalCommission">
		UPDATE PTRLEGAL_ACTION_PROCESS SET TERM_ID=#TERM_ID#, VERSION_ID=#VERSION_ID#, 
		COMMISSION_AMOUNT = #COMMISSION_AMOUNT#, SST_AMOUNT = #SST_AMOUNT#
		WHERE ID = #PROCESS_ID#
	</update>
	<update id="setLegalDisbursement">
		UPDATE PTRLEGAL_ACTION_PROCESS SET  SST_AMOUNT = #SST_AMOUNT#
		WHERE ID = #PROCESS_ID#
	</update>
	<resultMap id="getCreateBillingDetails" class="hmap">
		<result property="AGENCY_ID" javaType="long" />
		<result property="LEGAL_FIRM" javaType="string" />
		<result property="PRODUCT_CATEGORY" javaType="string" />
		<result property="PRODUCT_CATEGORY_ID" javaType="long" />
		<result property="ASSIGNMENT_TYPE" javaType="string" />
		<result property="SUBTYPE_ID" javaType="long" />
		<result property="INVOICE_AMOUNT" javaType="$" />
	</resultMap>	
	<select id="getCreateBillingDetails" resultMap="getCreateBillingDetails">
		SELECT G.ID,G.DESCRIPTION AS LEGAL_FIRM,PTC.DESCRIPTION,PTC.ID,s.description,s.id,
		SUM(COALESCE(P.COMMISSION_AMOUNT,0)+ COALESCE(EXP.AMOUNT,0) + COALESCE(P.DISBURSEMENT_AMOUNT,0)+ COALESCE(P.SST_AMOUNT,0))  AS TOTAL_AMOUNT
		FROM PTRLEGAL_ACTION_PROCESS P 
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ID=P.AGENCY_ASSIGNMENT_ID
		INNER JOIN PTRACCOUNT A ON A.ID=AG.ACCOUNT_ID
		INNER JOIN PTRPRODUCT_TYPE_REF PT ON PT.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PTC ON PTC.ID=PT.CATEGORY_ID
		INNER JOIN PTRCUSTOMER C ON C.ID=A.CUSTOMER_ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=SUBTYPE_ID
		INNER JOIN PTRTREATMENT_STATUS_REF ST ON ST.ID=P.STATUS_ID
		LEFT JOIN PTRINSTITUTION_LEVEL_REF IL ON IL.ID=P.INSTITUTION_LEVEL_ID
		LEFT JOIN PTRLEGAL_ACTION_PROCESS I ON I.ID=P.INSTRUCTION_PROCESS_ID
		LEFT JOIN PTRLEGAL_ACTION_REF AR ON AR.ID=I.ACTION_ID
		LEFT JOIN PTRLEGAL_ACTION_REF ACT ON ACT.ID=P.ACTION_ID
		LEFT JOIN PTRAGENCY_CONTRACT_VERSION_TERM VT ON VT.ID=P.TERM_ID
		LEFT JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID
		LEFT JOIN (
		SELECT E.PROCESS_ID,SUM(E.AMOUNT) AS AMOUNT
		FROM PTRLEGAL_ACTION_EXPENSES E
		INNER JOIN PTRLEGAL_ACTION_PROCESS P ON E.PROCESS_ID=P.ID
		WHERE P.ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>) 
		OR P.INSTRUCTION_PROCESS_ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		GROUP BY E.PROCESS_ID	
		) EXP ON EXP.PROCESS_ID=P.ID
		WHERE P.STATUS_ID !=15007 AND P.billing_invalid = <include refid="false"/> and P.ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>) OR 
		P.INSTRUCTION_PROCESS_ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		GROUP BY G.DESCRIPTION,PTC.CODE,PTC.ID,G.ID,S.ID,S.DESCRIPTION
	</select>
	
	<select id="legalCreateBillingTransactionDetails" resultMap="legalTransactionDetails-map">
		SELECT P.ID,C.CUSTOMER_NAME,A.ACCOUNT_NO,S.DESCRIPTION AS ASSIGNMENT_TYPE,ST.DESCRIPTION AS STATUS,
		IL.DESCRIPTION AS INSTITUTION,AR.DESCRIPTION AS INSTRUCTION,VT.DESCRIPTION AS TERM,
		ACT.DESCRIPTION AS ACTION,P.CREATED_TIME AS ACTION_DATE,P.LAWYER_REFERENCE_NO,G.DESCRIPTION AS LAWYER_NAME,
		COALESCE(P.GST_AMOUNT,0) as SST_AMOUNT,
		COALESCE(P.DISBURSEMENT_AMOUNT,0) AS DISBURSEMENT_AMOUNT,COALESCE(P.COMMISSION_AMOUNT,0) AS COMMISSION_AMOUNT,
		COALESCE(EXP.AMOUNT,0) AS EXPENSE_AMOUNT,COALESCE(P.COMMISSION_AMOUNT,0)+ COALESCE(EXP.AMOUNT,0) + COALESCE(P.DISBURSEMENT_AMOUNT,0) + COALESCE(P.SST_AMOUNT,0) AS TOTAL_AMOUNT
		FROM PTRLEGAL_ACTION_PROCESS P 
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ID=P.AGENCY_ASSIGNMENT_ID
		INNER JOIN PTRACCOUNT A ON A.ID=AG.ACCOUNT_ID
		INNER JOIN PTRPRODUCT_TYPE_REF PT ON PT.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PTC ON PTC.ID=PT.CATEGORY_ID
		INNER JOIN PTRCUSTOMER C ON C.ID=A.CUSTOMER_ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=SUBTYPE_ID
		INNER JOIN PTRTREATMENT_STATUS_REF ST ON ST.ID=P.STATUS_ID
		LEFT JOIN PTRINSTITUTION_LEVEL_REF IL ON IL.ID=P.INSTITUTION_LEVEL_ID
		LEFT JOIN PTRLEGAL_ACTION_PROCESS I ON I.ID=P.INSTRUCTION_PROCESS_ID
		LEFT JOIN PTRLEGAL_ACTION_REF AR ON AR.ID=I.ACTION_ID
		LEFT JOIN PTRLEGAL_ACTION_REF ACT ON ACT.ID=P.ACTION_ID
		LEFT JOIN PTRAGENCY_CONTRACT_VERSION_TERM VT ON VT.ID=P.TERM_ID
		LEFT JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID
		LEFT JOIN (
		SELECT E.PROCESS_ID,SUM(E.AMOUNT) AS AMOUNT
		FROM PTRLEGAL_ACTION_EXPENSES E
		INNER JOIN PTRLEGAL_ACTION_PROCESS P ON E.PROCESS_ID=P.ID AND P.billing_invalid = <include refid="false"/>
		WHERE P.ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>) 
		OR P.INSTRUCTION_PROCESS_ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		GROUP BY E.PROCESS_ID	
		) EXP ON EXP.PROCESS_ID=P.ID
		WHERE P.billing_invalid = <include refid="false"/> AND P.STATUS_ID !=15007 and P.ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>) OR 
		P.INSTRUCTION_PROCESS_ID in (<iterate property="INSTRUCTION_PROCESS_IDS" conjunction=",">#INSTRUCTION_PROCESS_IDS[]#</iterate>)
		and G.id=#AGENCY_ID# and s.id = #SUBTYPE_ID# and ptc.id=#PRODUCT_CATEGORY_ID#
	</select>
	
	<resultMap id="getTransactionForAdjustment" class="hmap">
		<result property="DISBURSEMENT_AMOUNT" javaType="$" />
		<result property="COMMISSION_AMOUNT" javaType="$" />
		<result property="DISBURSEMENT" javaType="boolean" />
		<result property="ACTION_ID" javaType="long" />
		<result property="SST_PERCENT" javaType="$" />
	</resultMap>
	<select id="getTransactionForAdjustment" resultMap="getTransactionForAdjustment">
		select coalesce(p.disbursement_amount,0),coalesce(p.commission_amount,0),r.disbursement,p.action_id,
		case when sst = <include refid="true"/> then 0.06 else 0 end as SST_PERCENT
		from ptrlegal_action_process p
		inner join ptrlegal_action_ref r on r.id=p.action_id
		where p.id = #PROCESS_ID#
	</select>	
	<update id="updateTransactionAdjustment">
		update ptrlegal_action_process set SST_AMOUNT=#SST_AMOUNT#,
		disbursement_amount =#DISBURSEMENT_AMOUNT#,
		BILLING_REMARKS=#REMARKS#
		where id=#PROCESS_ID#
	</update>
	<delete id="deleteExpensesForNewEntries">
	delete from ptrlegal_action_expenses where process_id =#PROCESS_ID#
	</delete>
	<insert id="insertTransactionExpenses">
		insert into PTRLEGAL_ACTION_EXPENSES(process_id,description,fee_amount,disbursement_amount,gst_amount,amount)
		values(#PROCESS_ID#,#DESCRIPTION#,#FEE_AMOUNT#,#DISBURSEMENT_AMOUNT#,#GST_AMOUNT#,#AMOUNT#)	
	</insert>	
	<update id="invalidateTransaction">
		update ptrlegal_action_process 
		set BILLING_INVALID = <include refid="true"/>, BILLING_INVALIDATED_BY =#LOGON_USER#, BILLING_INVALIDATED_ON =#CURRENT_TIME#,
		 BILLING_REMARKS=#REMARKS# where id=#PROCESS_ID#	
	</update>
	<update id="updateInvoiceTransactionRel">
		update ptrlegal_action_process set invoice_id = #INVOICE_ID# 
		where id = #PROCESS_ID#	
	</update>
	
	<resultMap class="hmap" id="getLegalTransactionInstructionProcessId">
	<result property="IS_INSTRUCTION_PROCESS_ID" javaType="boolean"/>
	</resultMap>
	<select id="getLegalTransactionInstructionProcessId" resultMap="getLegalTransactionInstructionProcessId">
	select 1 from PTRLEGAL_ACTION_PROCESS where INSTRUCTION_PROCESS_ID=#INSTRUCTION_PROCESS_ID#
	</select>

</sqlMap>