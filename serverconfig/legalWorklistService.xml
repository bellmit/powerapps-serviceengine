<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="legalWorklistService">

	<select id="getLegalWorklistCategory" resultMap="global.ref">
	<include refid="selectAllRef" /><include refid="fromdual"/>
		union
		<include refid="refselect" /> 
		FROM PTRLEGAL_WORKLIST_CATEGORY_REF
	</select>
	<resultMap id="getLegalWorklist" class="hmap">
		<result property="ID" javaType="long" />
		<result property="CODE" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="CATEGORY" javaType="string" />
		<result property="REMARKS" javaType="string" />
		<result property="DISABLE" javaType="boolean" />
		<result property="CREATED_TIME" javaType="ts" />
		<result property="UPDATED_TIME" javaType="ts" />
		<result property="CREATED_BY" javaType="string" />
		<result property="UPDATED_BY" javaType="string" />
		<result property="TOTAL_ACCOUNT" javaType="long" />
	</resultMap>
	<select id="getLegalWorklist" resultMap="getLegalWorklist">
		SELECT R.ID,R.CODE,R.DESCRIPTION,TR.DESCRIPTION,R.REMARKS,
		R.DISABLE,R.CREATED_TIME,R.UPDATED_TIME,R.CREATED_BY,R.UPDATED_BY,0 as TOTAL_ACCOUNT  
		FROM PTRLEGAL_WORKLIST R
		INNER JOIN PTRLEGAL_WORKLIST_CATEGORY_REF TR ON TR.ID=R.CATEGORY_ID
		<isNotEqual property="INCLUDE_ALL" compareValue="true">
			AND R.DISABLE = <include refid="false"/>
		</isNotEqual> 
		<isNotNull property="CATEGORY_ID">
			AND R.CATEGORY_ID=#CATEGORY_ID#
		</isNotNull>	
	</select>
	<resultMap id="getLegalWorklistCount" class="hmap">
		<result property="ID" javaType="long" />
		<result property="TOTAL_ACCOUNT" javaType="long" />
	</resultMap>
	<select id="getLegalWorklistCount" resultMap="getLegalWorklistCount">
		SELECT R.ID,COUNT(W.ACCOUNT_ID)
		FROM PTRLEGAL_WORKLIST R
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT W ON W.WORKLIST_ID=R.ID
		<isNotEqual property="INCLUDE_ALL" compareValue="true">
			AND R.DISABLE = <include refid="false"/>
		</isNotEqual> 
		<isNotNull property="CATEGORY_ID">
			AND R.CATEGORY_ID=#CATEGORY_ID#
		</isNotNull>
		GROUP BY R.ID	
	</select>
	<select id="getLegalWorklistCategoryForEditing" resultMap="global.ref">
		<include refid="refselect" /> 
		FROM PTRLEGAL_WORKLIST_CATEGORY_REF
	</select>
	
	<resultMap id="getLegalWorklistForEditing" class="hmap">
		<result property="CODE" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="CATEGORY_ID" javaType="long" />
		<result property="CENTRE_ID" javaType="long" />
		<result property="DISABLE" javaType="boolean" />
	</resultMap>
	<select id="getLegalWorklistForEditing" resultMap="getLegalWorklistForEditing">
		SELECT CODE,DESCRIPTION,CATEGORY_ID,CENTRE_ID,DISABLE
		FROM PTRLEGAL_WORKLIST
		WHERE ID = #WORKLIST_ID#	
	</select>
	<insert id="insertLegalWorklist">
		<selectKey keyProperty="ID" resultClass="long">
			<include refid="sequencePrefix" />
			PTRLEGAL_WORKLIST_ID
			<include refid="sequenceSuffix" />
		</selectKey>	
		INSERT INTO PTRLEGAL_WORKLIST(ID,CODE,DESCRIPTION,CENTRE_ID,CATEGORY_ID,REMARKS,SORT_PRIORITY,CREATED_TIME,CREATED_BY)
		VALUES(#ID#,#CODE#,#DESCRIPTION#,#CENTRE_ID#,#CATEGORY_ID#,#REMARKS#,#ID#,#CURRENT_TIME#,#LOGON_USER#)	
	</insert>
	
	<update id="updateLegalWorklist">
		UPDATE PTRLEGAL_WORKLIST SET
		CODE = #CODE#,
		DESCRIPTION = #DESCRIPTION#,
		CATEGORY_ID =#CATEGORY_ID#,
		CENTRE_ID = #CENTRE_ID#,
		REMARKS = #REMARKS#,
		DISABLE = #DISABLE#,
		UPDATED_BY = #LOGON_USER#,
		UPDATED_TIME =#CURRENT_TIME#
		WHERE ID=#WORKLIST_ID#	
	</update>
	
	<sql id="legalWorklistAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID and WA.WORKLIST_ID=#WORKLIST_ID#
	</sql>
	<sql id="legalWorklistSearchAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,ROW_NUMBER()OVER ()  AS ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID AS BIGINT)= C.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PC ON PC.ID=R.CATEGORY_ID
		LEFT JOIN PTRBANK_BRANCH_REF BRANCH ON BRANCH.ID=A.BANK_BRANCH_ID
		LEFT JOIN PTRACCOUNT_TREATMENT_TAGGING TAG ON TAG.ACCOUNT_ID=A.ID
		WHERE PC.CODE =#CATEGORY_CODE#
		<isNotEmpty property="CUSTOMER_NAME">
			AND UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'
		</isNotEmpty>
		<isNotEmpty property="ACCOUNT_NUMBER">
			AND UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'
		</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER">
			AND UPPER(C.CUSTOMER_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'
		</isNotEmpty>
		<isNotNull property="PRODUCT_TYPE_ID">
			AND R.ID =#PRODUCT_TYPE_ID#
		</isNotNull>
		<isNotEmpty property="BRANCH_CODE">
			AND UPPER(BRANCH.CODE) LIKE '%'||UPPER(#BRANCH_CODE#)||'%'
		</isNotEmpty>
		<isNotNull property="REGION_ID">
			AND BRANCH.REGION_ID =#REGION_ID#
		</isNotNull>
		<isNotNull property="ACCOUNT_STATUS_ID">
			AND A.STATUS_ID =#ACCOUNT_STATUS_ID#
		</isNotNull>
		<isNotEmpty property="MIA_FROM">
			AND COALESCE(A.MONTHS_IN_ARREARS) &gt;=#MIA_FROM#
		</isNotEmpty>
		<isNotEmpty property="MIA_TO">
			AND COALESCE(A.MONTHS_IN_ARREARS) &lt;=#MIA_TO#
		</isNotEmpty>
		<isNotEmpty property="OS_BALANCE_FROM">
			AND A.OUTSTANDING_BALANCE &gt;=#OS_BALANCE_FROM#
		</isNotEmpty>
		<isNotEmpty property="OS_BALANCE_TO">
			AND A.OUTSTANDING_BALANCE &lt;=#OS_BALANCE_TO#
		</isNotEmpty>
		<isNotEmpty property="TOTAL_DUE_AMOUNT_FROM">
			AND COALESCE(A.TOTAL_AMOUNT_DUE,0) &gt;=#TOTAL_DUE_AMOUNT_FROM#
		</isNotEmpty>
		<isNotEmpty property="TOTAL_DUE_AMOUNT_TO">
			AND COALESCE(A.TOTAL_AMOUNT_DUE,0) &lt;=#TOTAL_DUE_AMOUNT_TO#
		</isNotEmpty>
		<isNotEmpty property="CHECK_DIGIT">
			AND SUBSTR(A.ACCOUNT_NO,12,1)= UPPER(#CHECK_DIGIT#)
		</isNotEmpty>
		<isNotNull property="ACCOUNT_STATUS_ID">
			AND A.STATUS_ID =#ACCOUNT_STATUS_ID#
		</isNotNull>
		<isNotNull property="RNR_STATUS_ID">
			AND COALESCE(TAG.RNR,<include refid="false"/>) =#RNR_STATUS_ID#
		</isNotNull>
		<isNotNull property="AKPK_STATUS_ID">
			AND COALESCE(TAG.AKPK_FLAG,<include refid="false"/>) =#AKPK_STATUS_ID#
		</isNotNull>
		AND NOT EXISTS(SELECT 1 FROM 
		PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT W WHERE W.ACCOUNT_ID=A.ID)
	</sql>	
	<resultMap id="getLegalWorklistAccountIds" class="hmap">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getLegalWorklistAccountIds" resultMap="getLegalWorklistAccountIds">
		SELECT A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="legalWorklistAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	
	<select id="getLegalWorklistSearchAccountIds" resultMap="getLegalWorklistAccountIds">
		SELECT A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="legalWorklistSearchAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>	
	<resultMap id="getLegalWorklistAccountTotalCount" class="hmap">
		<result property="TOTAL_RECORD" javaType="long" />
		<result property="TOTAL_PAGE" javaType="long" />
	</resultMap>
	<select id="getLegalWorklistAccountTotalCount" resultMap="getLegalWorklistAccountTotalCount">
		SELECT 
		COUNT(A.ACCOUNT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="legalWorklistAccountIdFragments"/>
		) A 
	</select>

	<select id="getLegalWorklistSearchAccountTotalCount" resultMap="getLegalWorklistAccountTotalCount">
		SELECT 
		COUNT(A.ACCOUNT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="legalWorklistSearchAccountIdFragments"/>
		) A 
	</select>
			
	<resultMap class="hmap" id="getLegalWorklistSearchAccountResults">
		<result property="ACCOUNT_ID" javaType="long" />
		
		<result property="ACCOUNT_NUMBER" javaType="string" />
		<result property="CUSTOMER_ID" javaType="string" />
		<result property="CUSTOMER_NAME" javaType="string" />
		<result property="CUSTOMER_NUMBER" javaType="string" />
		<result property="PRODUCT_TYPE" javaType="string" />
		
		<result property="PRODUCT_CATEGORY" javaType="string" />
		<result property="ACCOUNT_STATUS" javaType="string" />
		<result property="LAST_PAYMENT_DATE" javaType="date" />
		<result property="LAST_PAYMENT_AMOUNT" javaType="$" />
		<result property="PAYOFF_AMOUNT" javaType="$" />
		
		<result property="NPF_DATE" javaType="date" />
		<result property="CHARGE_OFF_DATE" javaType="date" />
		<result property="CURRENT_BALANCE" javaType="$" />
		<result property="OUTSTANDING_BALANCE" javaType="$" />
		<result property="MONTHS_IN_ARREARS" javaType="long" />
		
		<result property="PTP_DATE" javaType="date" />
		<result property="LAST_ACTION_DATE" javaType="date" />
		<result property="SPTF_FLAG" javaType="string" />
		<result property="SHORTFALL_STATUS" javaType="string" />
		<result property="VEHICLE_NUMBER" javaType="string" />
		
		<result property="COLLATERAL_DESCRIPTION" javaType="string" />
		<result property="ADDRESS_1" javaType="string" />
		<result property="ADDRESS_2" javaType="string" />
		<result property="CITY" javaType="string" />
		<result property="IDENTIFICATION_NUMBER" javaType="string" />
		
		<result property="FINANCING_TYPE" javaType="string" />
		<result property="CHECK_DIGIT" javaType="string" />
		<result property="BRANCH_CODE" javaType="string" />
		<result property="REGION" javaType="string" />
		<result property="ACCOUNT_STATUS" javaType="string" />
		<result property="TOTAL_DUE_AMOUNT" javaType="$" />
		<result property="RNR_STATUS" javaType="string" />
		<result property="AKPK_STATUS" javaType="string" />
		
		<result property="OPENING_MIA" javaType="long" />
		<result property="CURRENT_MIA" javaType="long" />
		<result property="BEGIN_NLB" javaType="$" />
		<result property="ABANDONED_PROJECT" javaType="string" />
		<result property="AGENCY_ASSIGNMENT_DATE" javaType="date" />
		<result property="AGENCY_NAME" javaType="string" />
		<result property="AKPK_CASE" javaType="string" />
		<result property="ASSIGNMENT_DATE" javaType="date" />
		<result property="AUCTION_DATE" javaType="date" />
		<result property="BN_INITIATION_DATE" javaType="date" />
		
		<result property="BRANCH_CODE" javaType="string" />
		<result property="BRANCH_NAME" javaType="string" />
		<result property="CHARGING_ORDER_INITIATION_DATE" javaType="date" />
		<result property="CONTESTED" javaType="string" />
		<result property="COURT_ORD_LEGLBAR" javaType="string" />
		<result property="DATE_OF_FUNDING" javaType="date" />
		<result property="DAYS_IN_ARREARS" javaType="long" />
		<result property="FRAUD" javaType="string" />
		<result property="GARNISHEE_INITIATION_DATE" javaType="date" />
		<result property="GROSS_BALANCE" javaType="$" />
		
		<result property="IDENTIFICATION_NO" javaType="string" />
		<result property="INSTALLMENT_AMOUNT" javaType="$" />
		<result property="JUDGEMENT_DATE_HOST" javaType="date" />
		<result property="JUDGEMENT_DATE_POWERCOLLECT" javaType="date" />
		<result property="LAST_LEGAL_STAGE" javaType="string" />
		<result property="LAST_PAYMENT_AMOUNT" javaType="$" />
		<result property="LEGAL_WORKLIST_ASSIGNMENT_DATE" javaType="date" />
		<result property="MANAGEMENT_INSTRUCTION" javaType="string" />
		<result property="NPDD" javaType="date" />
		<result property="NPL_DATE" javaType="date" />
		
		<result property="NPL_FLAG" javaType="string" />
		<result property="OFS_DATE" javaType="date" />
		<result property="OLD_ACCOUNT_NUMBER" javaType="string" />
		<result property="OPENING_MIA" javaType="long" />
		<result property="OPENING_NLB" javaType="long" />
		<result property="PERFECTION_OF_CHARGE" javaType="string" />
		<result property="POD_INIATIATION_DATE" javaType="date" />
		<result property="PROHIBITORY_ORDER_INITIATION_DATE" javaType="date" />
		<result property="RESCHEDULED_AC" javaType="string" />
		<result property="REWRITE_ACCOUNT" javaType="string" />
		
		<result property="TIME_BARRED" javaType="string" />
		<result property="TOTAL_DUE_AMOUNT" javaType="$" />
		<result property="TOTAL_INST_PAID" javaType="$" />
		<result property="TOTAL_PAYMENT" javaType="$" />
		<result property="UNSECURED" javaType="string" />
		<result property="USER_ASSIGNMENT_ID" javaType="string" />
		<result property="VEHICLE_NUMBER" javaType="string" />
		<result property="WINDING_UP_INITIATION_DATE" javaType="date" />
		<result property="WINDING_UP_ORDER_INITIATION_DATE" javaType="date" />
		<result property="WSS_INITIATION_DATE" javaType="date" />
		<result property="TOTAL_DUE" javaType="$"/>
		<result property="ACC_STS" javaType="string"/>
	</resultMap>
	<select id="getLegalWorklistSearchAccountResults" resultMap="getLegalWorklistSearchAccountResults">
		SELECT A.ID,
		
		A.ACCOUNT_NO,
		C.ID,
		C.CUSTOMER_NAME,
		C.CUSTOMER_NO,
		R.DESCRIPTION AS PRODUCT_TYPE ,		
		PR.DESCRIPTION AS PRODUCT_CATEGORY,
		STATUS.DESCRIPTION AS ACCOUNT_STATUS,
		A.LAST_PAYMENT_DATE,
		A.LAST_PAYMENT_AMOUNT,
		A.PAYOFF_AMOUNT,		
		A.NPL_DATE,
		A.CHARGE_OFF_DATE,
		COALESCE(A.CURRENT_BALANCE,0),
		COALESCE(A.OUTSTANDING_BALANCE,0),
		COALESCE(A.MONTHS_IN_ARREARS,0),		
		PTP.DUE_TIME,
		COALESCE(T.UPDATED_TIME,T.CREATED_TIME) AS LAST_ACTION_DATE,
		SPTF.CODE AS SPTF_FLAG,
		case when tlast.tlast_value_58 = #tlast.tlast_value_58# then 'Yes' else 'No' end as SHORTFALL_STATUS,
		COL.REGISTRATION_NO,		
		COL.DESCRIPTION,
		AD.LINE_1,
		AD.LINE_2,
		AD.CITY,
		C.CUSTOMER_ID_NO,		
		PR.DESCRIPTION AS FINANCING_TYPE,
		SUBSTR(A.ACCOUNT_NO,12,1) as CHECK_DIGIT,
		B.CODE AS BRANCH_NUMBER,
		RG.description as REGION,
		STATUS.DESCRIPTION AS ACCOUNT_STATUS,
		COALESCE(A.TOTAL_AMOUNT_DUE,0) as TOTAL_DUE_AMOUNT,
		CASE WHEN TAG.RNR = <include refid="true"/> THEN 'Yes' ELSE 'No' END  as RNR_STATUS,
		CASE WHEN TAG.AKPK_FLAG = <include refid="true"/> THEN 'Yes' ELSE 'No' END as AKPK_STATUS,
		
		COALESCE(wla.MONTHS_IN_ARREARS,0) as OPENING_MIA,
		COALESCE(A.MONTHS_IN_ARREARS,0) as CURRENT_MIA,
		COALESCE(wla.NLB,0) as BEGIN_NLB,
		case when tag.abandoned=true then 'Yes' when tag.abandoned=false then 'No' end as ABANDONED_PROJECT,
		NULL as AGENCY_ASSIGNMENT_DATE,
		NULL as AGENCY_NAME,
		case when tag.akpk_flag=true then 'Yes' when tag.akpk_flag=false then 'No' end  as AKPK_CASE,
		NULL as ASSIGNMENT_DATE,
		NULL as AUCTION_DATE,
		NULL as BN_INITIATION_DATE,
		
		b.code as BRANCH_CODE,
		b.description as BRANCH_NAME,
		NULL as CHARGING_ORDER_INITIATION_DATE,
		NULL as CONTESTED,
		NULL as COURT_ORD_LEGLBAR,
		a.first_release_date as DATE_OF_FUNDING,
		COALESCE(a.months_in_arrears,0)*30 as DAYS_IN_ARREARS,
		case when tag.fraud=true then 'Yes' when tag.fraud=false then 'No' end  as FRAUD,
		NULL as GARNISHEE_INITIATION_DATE,
		COALESCE(a.outstanding_balance,0) - (COALESCE(a.interest_rebate_amount,0) + COALESCE(a.write_off_amount,0)) as GROSS_BALANCE,
		
		c.customer_id_no as IDENTIFICATION_NO,
		COALESCE(a.installment_amount_in_arrears,0) as INSTALLMENT_AMOUNT,
		NULL as JUDGEMENT_DATE_HOST,
		NULL as JUDGEMENT_DATE_POWERCOLLECT,
		NULL as LAST_LEGAL_STAGE,
		COALESCE(a.last_payment_amount,0) as LAST_PAYMENT_AMOUNT,
		NULL as LEGAL_WORKLIST_ASSIGNMENT_DATE,
		NULL as MANAGEMENT_INSTRUCTION,
		a.next_payment_due_date as NPDD,
		a.npl_date as NPL_DATE,
		
		a.npl_flag as NPL_FLAG,
		NULL as OFS_DATE,
		a.old_account_no as OLD_ACCOUNT_NUMBER,
		COALESCE(wla.months_in_arrears,0) as OPENING_MIA,
		COALESCE(wla.nlb,0) as OPENING_NLB,
		NULL as PERFECTION_OF_CHARGE,
		NULL as POD_INIATIATION_DATE,
		NULL as PROHIBITORY_ORDER_INITIATION_DATE,
		NULL as RESCHEDULED_AC,
		NULL as REWRITE_ACCOUNT,
		
		NULL as TIME_BARRED,
		COALESCE(a.total_amount_due,0) as TOTAL_DUE_AMOUNT,
		COALESCE(a.total_installment_paid_cash_price_ratio,0) as TOTAL_INST_PAID,
		NULL as TOTAL_PAYMENT,
		NULL as UNSECURED,
		NULL as USER_ASSIGNMENT_ID,
		NULL as VEHICLE_NUMBER,
		NULL as WINDING_UP_INITIATION_DATE,
		NULL as WINDING_UP_ORDER_INITIATION_DATE,
		NULL as WSS_INITIATION_DATE,
		coalesce(a.total_amount_due,0) as TOTAL_DUE,
		STATUS.DESCRIPTION AS ACC_STS
		FROM PTRACCOUNT A
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID AS BIGINT)=C.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON PR.ID=R.CATEGORY_ID
		INNER JOIN PTRACCOUNT_STATUS_REF STATUS ON STATUS.ID=A.STATUS_ID	
		LEFT JOIN PTRTREATMENT T ON T.ACCOUNT_ID=A.ID
		LEFT JOIN PTRTREATMENT_PTP PTP ON PTP.TREATMENT_ID=T.ID
		LEFT JOIN PTRACCOUNT_LAST_TREATMENT TT ON TT.ACCOUNT_ID=A.ID	
		LEFT JOIN PTRSPTF_TYPE_REF SPTF ON SPTF.ID=A.SPTF_TYPE_ID
		LEFT JOIN PTRACCOUNT_TLAST TLAST ON TLAST.ACCOUNT_ID=A.ID
		LEFT JOIN PTRACCOUNT_COLLATERAL_REL REL ON A.ID=REL.ACCOUNT_ID
		LEFT JOIN PTRCOLLATERAL COL ON COL.ID=REL.COLLATERAL_ID
		LEFT JOIN PTRHOST_ADDRESS AD ON AD.CUSTOMER_ID=C.ID 
		left join ptrbank_branch_ref B ON B.ID=A.BANK_BRANCH_ID
		left join PTRREGION_REF RG ON RG.ID =  B.region_id
		LEFT JOIN PTRACCOUNT_TREATMENT_TAGGING TAG ON TAG.ACCOUNT_ID=A.ID
		 <isEqual property="USER_TYPE_ID" compareValue="2">
            left join PTRAGENCY_WORK_LIST_ASSIGNMENT wla on a.id = wla.account_id
            left join PTRAGENCY_WORK_LIST wl on wl.WORK_LIST_ID=wla.WORK_LIST_ID and wl.AGENCY_ID=#AGENCY_ID#
        </isEqual>
        <isNotEqual property="USER_TYPE_ID" compareValue="2">
            left join PTRACCOUNT_WORK_LIST_ASSIGNMENT wla on a.id = wla.account_id
        </isNotEqual>
		<isNotEmpty property="ACCOUNTS">
			where A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
	</select>
	
	<resultMap class="hmap" id="getLegalWorklistAssigmentDetails">
		<result property="ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="ASSIGNMENT_DATE" javaType="date" />
		<result property="ASSIGNED_BY" javaType="string" />
		<result property="LEGAL_WORKLIST_ASSIGNMENT_DATE" javaType="date"/>
		<result property="USER_ASSIGNMENT_ID" javaType="string"/>
	</resultMap>
	<select id="getLegalWorklistAssigmentDetails" resultMap="getLegalWorklistAssigmentDetails">
		select ID,ACCOUNT_ID,ASSIGNMENT_DATE,ASSIGNED_BY,ASSIGNMENT_DATE,ASSIGNED_BY
		from PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT
		<isNotEmpty property="ACCOUNTS">
			where ACCOUNT_ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
	</select>
	<resultMap class="hmap" id="getLegalWorklistCategoryId">
		<result property="CATEGORY_ID" javaType="long" />
	</resultMap>
	<select id="getLegalWorklistCategoryId" resultMap="getLegalWorklistCategoryId">
		select CATEGORY_ID FROM PTRLEGAL_WORKLIST
		WHERE ID=#ID#
	</select>
	<resultMap class="hmap" id="getLegalWorklistForTransfer">
		<result property="ID" javaType="long" />
		<result property="DESCRIPTION" javaType="string" />
	</resultMap>
	<select id="getLegalWorklistForTransfer" resultMap="getLegalWorklistForTransfer">
		SELECT ID,DESCRIPTION FROM PTRLEGAL_WORKLIST
		WHERE DISABLE =<include refid="false"/> AND CATEGORY_ID=#CATEGORY_ID#
		AND ID !=#ID#
	</select>	
	<insert id="assignAccountToWorklist">
		<selectKey keyProperty="ID" resultClass="long">
			<include refid="sequencePrefix" />
			PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT_ID
			<include refid="sequenceSuffix" />
		</selectKey>	
		INSERT INTO PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT(ID,ACCOUNT_ID,WORKLIST_ID,ASSIGNMENT_DATE,ASSIGNED_BY,TRANSFERED_ASSIGNMENT_ID)
		VALUES(#ID#,#ACCOUNT_ID#,#WORKLIST_ID#,#CURRENT_TIME#,#LOGON_USER#,#TRANSFERED_ASSIGNMENT_ID#)	
	</insert>
	<delete id="deleteAccountFromWorklist">
		DELETE FROM PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WHERE ID=#ID#
	</delete>
	<insert id="assignAccountToWorklistHistory">	
		INSERT INTO PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT_HISTORY(ID,ACCOUNT_ID,WORKLIST_ID,ASSIGNMENT_DATE,ASSIGNED_BY,TRANSFERED_ASSIGNMENT_ID)
		VALUES(#ID#,#ACCOUNT_ID#,#WORKLIST_ID#,#CURRENT_TIME#,#LOGON_USER#,#TRANSFERED_ASSIGNMENT_ID#)	
	</insert>
	<update id="updateAccountWorklistHistory">
		UPDATE PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT_HISTORY SET
		REMOVED_DATE = #CURRENT_TIME#,
		REMOVED_BY = #LOGON_USER#
		WHERE ID=#ID#
	</update>
	<resultMap id="getAvailableUsersForWorklist" class="hmap">
		<result property="USER_ID" javaType="string" />
		<result property="FIRST_NAME" javaType="string" />
		<result property="MIDDLE_NAME" javaType="string" />
		<result property="LAST_NAME" javaType="string" />
		<result property="DESIGNATION" javaType="string" />
	</resultMap>
	<select id="getAvailableUsersForWorklist" resultMap="getAvailableUsersForWorklist">
		SELECT U.USER_ID,E.FIRST_NAME,E.MIDDLE_NAME,E.LAST_NAME,E.DESIGNATION 
		FROM PTRUSER U
		INNER JOIN PTREMPLOYEE E ON E.ID=U.EMPLOYEE_ID
		INNER JOIN PTRUSER_GROUP_REF G ON G.ID=U.USER_GROUP_ID AND G.CODE='LEGAL'
		WHERE (U.DISABLE = <include refid="false"/> OR U.DISABLE IS NULL) and 
		NOT EXISTS(SELECT 1 FROM PTRLEGAL_USER_WL_ASSIGN WA 
		WHERE WA.USER_ID=U.USER_ID AND WA.WORKLIST_ID =#ID#)
	</select>

	<resultMap id="getAssignedUsersForWorklist" class="hmap">
		<result property="ID" javaType="long" />
		<result property="USER_ID" javaType="string" />
		<result property="FIRST_NAME" javaType="string" />
		<result property="MIDDLE_NAME" javaType="string" />
		<result property="LAST_NAME" javaType="string" />
		<result property="DESIGNATION" javaType="string" />
		<result property="DEFAULT_USER" javaType="boolean" />
		<result property="POST_JUDGEMENT" javaType="boolean" />
		<result property="POST_AUCTION" javaType="boolean" />
		<result property="RELIEF" javaType="boolean" />
		<result property="SUPERVISOR" javaType="boolean" />
		<result property="RELIEF_FROM" javaType="date" />
		<result property="RELIEF_TO" javaType="date" />
	</resultMap>
	<select id="getAssignedUsersForWorklist" resultMap="getAssignedUsersForWorklist">
		SELECT WL.ID,U.USER_ID,E.FIRST_NAME,E.MIDDLE_NAME,E.LAST_NAME,E.DESIGNATION ,
		WL.DEFAULT_USER,WL.POST_JUDGEMENT,WL.POST_AUCTION,WL.RELIEF,WL.SUPERVISOR,RELIEF_FROM,RELIEF_TO
		FROM PTRUSER U
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN WL ON WL.USER_ID=U.USER_ID AND WL.WORKLIST_ID=#WORKLIST_ID#
		INNER JOIN PTREMPLOYEE E ON E.ID=U.EMPLOYEE_ID
		INNER JOIN PTRUSER_GROUP_REF G ON G.ID=U.USER_GROUP_ID AND G.CODE='LEGAL'
	</select>
	
	<resultMap id="getGuarantorInfoForECA" class="hmap">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="GUARANTOR_NAME" javaType="string" />
		<result property="GUARANTOR_ID_NO" javaType="string" />
		<result property="GUARANTOR_ID" javaType="string" />
		<result property="GUARANTOR_ADDRESS" javaType="string" />
		<result property="GUARANTOR_MOBILE" javaType="string" />
	</resultMap>
	
	<select id="getGuarantorInfoForECA" resultMap="getGuarantorInfoForECA">
		select 
		a.id as account_id,
		c.customer_name as guarantor_name,
		c.customer_id_no as GUARANTOR_ID_NO,
		c.customer_id_no as GUARANTOR_ID,
		coalesce(ho.line_1||',','')||''||coalesce(ho.line_2||',','')||''||coalesce(ho.line_3||',','')||''||coalesce(ho.line_4||',','')||''||coalesce(ho.line_5||',','')||''||coalesce(ho.city||',','')||''||coalesce(st.description,''),
		no.no as GUARANTOR_MOBILE
		from ptrcustomer_account_rel r
		inner join ptrcustomer_account_relation_type_ref t on t.id=r.type_id and t.code='GO'
		inner join ptraccount a on a.id=r.account_id
		inner JOIN ptrcustomer c on c.id=r.customer_id
		inner join ptrhost_address ho on ho.customer_id=c.id
		inner join ptrhost_address_type_ref hot on hot.id=ho.host_address_type_id and hot.code='M'
		left join ptrstate_ref st on st.id=ho.state_id
		inner join ptrhost_phone_no no on no.customer_id=c.id and no.disable=false
        inner join ptrhost_phone_no_type_ref ty on ty.id=no.host_phone_no_type_id and ty.code='HP'
		<isNotEmpty property="ACCOUNTS">
			where A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			where 1 = 0
		</isEmpty>
		order by r.account_id, r.id 
	</select>
		
	<insert id="assignUserToWorklist">
		<selectKey keyProperty="ID" resultClass="long">
			<include refid="sequencePrefix" />
			PTRLEGAL_USER_WL_ASSIGN_ID
			<include refid="sequenceSuffix" />
		</selectKey>	
		INSERT INTO PTRLEGAL_USER_WL_ASSIGN(ID,USER_ID,WORKLIST_ID)
		VALUES(#ID#,#USER_ID#,#WORKLIST_ID#)	
	</insert>
	<delete id="deleteUserFromWorklist">
		DELETE FROM PTRLEGAL_USER_WL_ASSIGN WHERE ID=#ID#
	</delete>
	<insert id="assignUserToWorklistHistory">	
		INSERT INTO PTRLEGAL_USER_WL_ASSIGN_HISTORY(ID,USER_ID,WORKLIST_ID,ASSIGNMENT_DATE,ASSIGNED_BY)
		VALUES(#ID#,#USER_ID#,#WORKLIST_ID#,#CURRENT_TIME#,#LOGON_USER#)	
	</insert>
	<update id="updateUserWorklistHistory">
		UPDATE PTRLEGAL_USER_WL_ASSIGN_HISTORY SET
		REMOVED_DATE = #CURRENT_TIME#,
		REMOVED_BY = #LOGON_USER#
		WHERE ID=#ID#
	</update>
	<update id="updateAssignedUser">
		update PTRLEGAL_USER_WL_ASSIGN 
		set DEFAULT_USER=#DEFAULT_USER#,POST_JUDGEMENT=#POST_JUDGEMENT#,POST_AUCTION=#POST_AUCTION#,RELIEF=#RELIEF#,
		SUPERVISOR=#SUPERVISOR#,RELIEF_FROM = #RELIEF_FROM#,RELIEF_TO = #RELIEF_TO#
		where id=#ID#	
	</update>
	
	
	<update id="updateAssignedUserHistory">
		update PTRLEGAL_USER_WL_ASSIGN_HISTORY 
		set DEFAULT_USER=#DEFAULT_USER#,POST_JUDGEMENT=#POST_JUDGEMENT#,POST_AUCTION=#POST_AUCTION#,RELIEF=#RELIEF#,
		SUPERVISOR=#SUPERVISOR# ,RELIEF_FROM = #RELIEF_FROM#,RELIEF_TO = #RELIEF_TO#
		where id=#ID#	
	</update>
		
	<update id="clearCurrentUserDefaults">
		update PTRLEGAL_USER_WL_ASSIGN set DEFAULT_USER = <include refid="false"/> where id in(
		select id from ptrlegal_user_wl_assign where worklist_id=#WORKLIST_ID#
		)
	</update>
	<update id="clearCurrentUserHistoryDefaults">
		update PTRLEGAL_USER_WL_ASSIGN_HISTORY set DEFAULT_USER = <include refid="false"/> where id in(
		select id from ptrlegal_user_wl_assign where worklist_id=#WORKLIST_ID#
		)
	</update>
	
	<resultMap class="hmap" id="getLegalWorklistAssignmentEvaluationTree" extends="global.ref">
		<result property="IS_BATCH" javaType="boolean"/>
	</resultMap>
	<select id="getLegalWorklistAssignmentEvaluationTree" resultMap="getLegalWorklistAssignmentEvaluationTree">
		<include refid="refselect" /> ,is_batch 
		FROM PTRLEGAL_WORKLIST_ASSIGNMENT_TREE
		WHERE CATEGORY_ID =#CATEGORY_ID#
		AND DISABLE = <include refid="false"/>
		order by id desc
	</select>
	
	<resultMap id="getLegalWorklistAssignedUserDetails" class="hmap">
		<result property="DEFAULT_USER" javaType="boolean" />
		<result property="POST_JUDGEMENT" javaType="boolean" />
		<result property="POST_AUCTION" javaType="boolean" />
		<result property="RELIEF" javaType="boolean" />
		<result property="SUPERVISOR" javaType="boolean" />
		<result property="RELIEF_FROM" javaType="date" />
		<result property="RELIEF_TO" javaType="date" />
	</resultMap>
	<select id="getLegalWorklistAssignedUserDetails" resultMap="getLegalWorklistAssignedUserDetails">
		SELECT DEFAULT_USER,POST_JUDGEMENT,POST_AUCTION,RELIEF,SUPERVISOR,RELIEF_FROM,RELIEF_TO
		FROM PTRLEGAL_USER_WL_ASSIGN WHERE ID=#ID#	
	</select>
	
	
	<resultMap id="getLegalWorklistAssignmentEvaluationTreeDocumentId" class="hmap">
		<result property="DOCUMENT_ID" javaType="long" />
	</resultMap>
	<select id="getLegalWorklistAssignmentEvaluationTreeDocumentId" resultMap="getLegalWorklistAssignmentEvaluationTreeDocumentId">
		SELECT DOCUMENT_ID FROM PTRLEGAL_WORKLIST_ASSIGNMENT_TREE WHERE ID=#ID#	
	</select>	
	
	<select id="getLegalWorklistAssignmentEvaluationTreeBuckets" resultMap="global.ref">
		<include refid="refselect" /> from ptrlegal_worklist
		where category_id =#CATEGORY_ID#
	</select>	
	<select id="getVisualLegalWorklistCategory" resultMap="global.ref">
		<include refid="refselect" /> 
		FROM PTRLEGAL_WORKLIST_CATEGORY_REF
	</select>
	<resultMap id="getLegalWorklistAssignmentTreeForEditing" class="hmap">
		<result property="CODE" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="CATEGORY_ID" javaType="long" />
		<result property="IS_BATCH" javaType="boolean" />
		<result property="SEND_VERIFICATION" javaType="boolean" />
		<result property="DISABLE" javaType="boolean" />
	</resultMap>
	<select id="getLegalWorklistAssignmentTreeForEditing" resultMap="getLegalWorklistAssignmentTreeForEditing">
		SELECT CODE,DESCRIPTION,CATEGORY_ID,IS_BATCH,SEND_VERIFICATION,DISABLE
		FROM PTRLEGAL_WORKLIST_ASSIGNMENT_TREE
		WHERE ID = #ID#	
	</select>
	
	<insert id="insertLegalWorklistAssignmentEvaluationTree">
		<selectKey keyProperty="ID" resultClass="long">
			<include refid="sequencePrefix" />
			PTRLEGAL_WORKLIST_ASSIGNMENT_TREE_ID
			<include refid="sequenceSuffix" />
		</selectKey>	
		INSERT INTO PTRLEGAL_WORKLIST_ASSIGNMENT_TREE(ID,CODE,DESCRIPTION,IS_BATCH,SEND_VERIFICATION,REMARKS,SORT_PRIORITY,CREATED_TIME,CREATED_BY,CATEGORY_ID)
		VALUES(#ID#,#CODE#,#DESCRIPTION#,#IS_BATCH#,#SEND_VERIFICATION#,#REMARKS#,#ID#,#CURRENT_TIME#,#LOGON_USER#,#CATEGORY_ID#)	
	</insert>
	
	<update id="updateLegalWorklistAssignmentEvaluationTree">
		UPDATE PTRLEGAL_WORKLIST_ASSIGNMENT_TREE SET
		CODE = #CODE#,
		DESCRIPTION = #DESCRIPTION#,
		CATEGORY_ID=#CATEGORY_ID#,
		IS_BATCH = #IS_BATCH#,
		SEND_VERIFICATION = #SEND_VERIFICATION#,
		REMARKS = #REMARKS#,
		DISABLE = #DISABLE#,
		UPDATED_BY = #LOGON_USER#,
		UPDATED_TIME =#CURRENT_TIME#
		WHERE ID=#ID#	
	</update>
	<update id="updateLegalWorklistAssignmentEvaluationTreeContent">
		UPDATE PTRLEGAL_WORKLIST_ASSIGNMENT_TREE SET DOCUMENT_ID = #DOCUMENT_ID#, 
		REMARKS = #REMARKS#, UPDATED_BY = #LOGON_USER#, UPDATED_TIME =#CURRENT_TIME#
		WHERE ID =#ID#
	</update>
	
	<update id="setLegalWorklistAssignmentEvaluationTreesIsBatchToFalseBySubtype">
		update PTRLEGAL_WORKLIST_ASSIGNMENT_TREE set is_batch = <include refid="false"/>
		where category_id = #CATEGORY_ID#
	</update>
	
	<resultMap id="getLegalWorklistAssignmentTreeForProcessing" class="hmap">
		<result property="CATEGORY_CODE" javaType="string" />
		<result property="DOCUMENT_ID" javaType="long" />
	</resultMap>
	<select id="getLegalWorklistAssignmentTreeForProcessing" resultMap="getLegalWorklistAssignmentTreeForProcessing">
		select c.code,t.document_id
		from PTRLEGAL_WORKLIST_ASSIGNMENT_TREE t 
		inner join PTRLEGAL_WORKLIST_CATEGORY_REF c on c.id=t.category_id
		WHERE T.ID=#ID#
	</select>
	
	<resultMap id="getWorklistProductCode" class="hmap">
		<result property="CATEGORY_CODE" javaType="string" />
		<result property="CATEGORY_ID" javaType="long" />
	</resultMap>
	<select id="getWorklistProductCode" resultMap="getWorklistProductCode">
		select cr.code,cr.id from ptrlegal_worklist w
		inner join ptrlegal_worklist_category_ref cat on cat.id=w.category_id
		inner join ptrproduct_type_category_ref cr on cr.code=cat.code
		where w.id=#WORKLIST_ID#
	</select>
	
	<select id="getLegalWorklistProductTypes" resultMap="global.ref">
		<include refid="selectAllRef"/>
		union
		<include refid="refselect"/> 
		FROM ptrproduct_type_ref WHERE category_id = #CATEGORY_ID#
	</select>
	<select id="getLegalWorklistAccountStatus" resultMap="global.ref">
		<include refid="selectAllRef"/>
		union
		<include refid="refselect"/> 
		FROM ptraccount_status_ref
	</select>
	<select id="getLegalWorklistRegions" resultMap="global.ref">
		<include refid="selectAllRef"/>
		union
		<include refid="refselect"/> 
		FROM ptrregion_ref
	</select>
	
	
	<resultMap class="hmap" id="getLegalMonitoringForclosureType">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="FORCLOSURE_TYPE" javaType="string" />
	</resultMap>
	<select id="getLegalMonitoringForclosureType" resultMap="getLegalMonitoringForclosureType">
		select a.id, sb.description 
		from ptraccount a
		inner join ptraccount_agency_assignment ass on ass.account_id=a.id
		inner join ptrtreatment_subtype_ref sb on sb.id=ass.subtype_id
		where sb.type_id=51 
			<isNotEmpty property="ACCOUNTS">
					and a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
				</isNotEmpty>
				<isEmpty property="ACCOUNTS">
					and 1 = 0
				</isEmpty>
		order by a.id, ass.id asc
	</select>
	
	<resultMap class="hmap" id="getLegalWorklistEcaAssignmentDetails">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="AGENCY_NAME" javaType="string" />
		<result property="AGENCY_ASSIGNMENT_DATE" javaType="date"/>
	</resultMap>
	<select id="getLegalWorklistEcaAssignmentDetails" resultMap="getLegalWorklistEcaAssignmentDetails">
		select a.id, g.code, ass.approved_date
		from ptraccount a
		inner join ptraccount_agency_assignment ass on ass.account_id=a.id
		inner join ptrtreatment_subtype_ref sb on sb.id=ass.subtype_id
		inner join ptragency g on g.id=ass.agency_id
		where sb.type_id=19 and ass.status_id=15007
			<isNotEmpty property="ACCOUNTS">
					and a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
				</isNotEmpty>
				<isEmpty property="ACCOUNTS">
					and 1 = 0
				</isEmpty>
	</select>
	
	<resultMap class="hmap" id="getLegalWorklistCollateralDetails">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="VEHICLE_NUMBER" javaType="string" />
	</resultMap>
	<select id="getLegalWorklistCollateralDetails" resultMap="getLegalWorklistCollateralDetails">
	
select a.id, a.registration_no from (
		select a.id, col.registration_no, row_number() over(partition by a.id order by col.id desc) as rnum
		from ptrcollateral col 
		inner join ptraccount_collateral_rel rel on col.id=rel.collateral_id
		inner join ptraccount a on a.id=rel.account_id
		where col.registration_no is not null
			<isNotEmpty property="ACCOUNTS">
					and a.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
				</isNotEmpty>
				<isEmpty property="ACCOUNTS">
					and 1 = 0
				</isEmpty>
				)a where a.rnum=1
	</select>
	
	<resultMap class="hmap" id="getLegalWorklistLastLegalAction">
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="LEGAL_ACTION_DATE" javaType="date" />
	</resultMap>
	<select id="getLegalWorklistLastLegalAction" resultMap="getLegalWorklistLastLegalAction">
	select a.account_id, coalesce(p.updated_time,p.created_time) from ptraccount_last_legal_action a
	inner join ptrlegal_action_process p on p.id=a.process_id
			<isNotEmpty property="ACCOUNTS">
					and a.ACCOUNT_ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
				</isNotEmpty>
				<isEmpty property="ACCOUNTS">
					and 1 = 0
				</isEmpty>
	</select>
	
	
	<resultMap class="hmap" id="getEcaRecommendationDetails">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
	</resultMap>
	<select id="getEcaRecommendationDetails" resultMap="getEcaRecommendationDetails">
	select ass.id, a.id
		from ptraccount_agency_assignment ass
        inner join ptragency_assignment_recommendation r on r.agency_assignment_id=ass.id
		inner join ptraccount a on a.id=ass.account_id
		inner join ptrtreatment_subtype_ref sb on sb.id=ass.subtype_id
		where sb.type_id=19 
		<isNotEmpty property="ACCOUNTS">
			and ass.ACCOUNT_ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			and 1 = 0
		</isEmpty>
	</select>
	<select id="getEcaApprovalDetails" resultMap="getEcaRecommendationDetails">
	select ass.id, a.id
		from ptraccount_agency_assignment ass
        inner join ptragency_assignment_approval r on r.agency_assignment_id=ass.id
		inner join ptraccount a on a.id=ass.account_id
		inner join ptrtreatment_subtype_ref sb on sb.id=ass.subtype_id
		where sb.type_id=19 
		<isNotEmpty property="ACCOUNTS">
			and ass.ACCOUNT_ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			and 1 = 0
		</isEmpty>
	</select>
	
	<resultMap class="hmap" id="getLegalKivAssigmentDetails">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="KIV_REASON" javaType="string"/>
		<result property="AGENCY_NAME" javaType="string"/>
		<result property="CONTRACT_NAME" javaType="string"/>
		<result property="AGENCY_ID" javaType="long"/>
		<result property="CONTRACT_ID" javaType="long"/>
		<result property="SUBTYPE_ID" javaType="long"/>
	</resultMap>
	<select id="getLegalKivAssigmentDetails" resultMap="getLegalKivAssigmentDetails">
		select kiv.AGENCY_ASSIGNMENT_ID, ass.ACCOUNT_ID, 
		kr.DESCRIPTION, ag.DESCRIPTION, c.description, ass.AGENCY_ID, ass.CONTRACT_ID,
		ass.SUBTYPE_ID
		from PTRAGENCY_KIV_ASSIGNMENT kiv
		inner join PTRACCOUNT_AGENCY_ASSIGNMENT ass on ass.ID=kiv.AGENCY_ASSIGNMENT_ID
		inner join PTRAGENCY ag on ag.ID=ass.AGENCY_ID
		inner join ptragency_contract c on c.id=ass.contract_id
		inner join PTRLEGAL_KIV_REASON_REF kr on kr.ID=ass.KIV_REASON_ID
		where ass.SUBTYPE_ID=#SUBTYPE_ID#
		<isNotEmpty property="ACCOUNTS">
			and ass.ACCOUNT_ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
			and 1 = 0
		</isEmpty>
	</select>
	
</sqlMap>