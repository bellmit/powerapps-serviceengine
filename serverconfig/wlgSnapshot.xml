<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="wlgSnapshot.xml">


<resultMap id="getWlgAccountSnapshot" class="java.util.HashMap">
<result property="ASSIGNMENT_DATE" javaType="date"/>
<result property="ACCOUNT_ID"  javaType="long"/>
<result property="NPL_FLAG"  javaType="long"/>
<result property="NPL_STATUS"  javaType="long"/>
<result property="OUTSTANDING_AMT"  javaType="$"/>
<result property="OUTSTANDING_BALANCE"  javaType="$"/>
<result property="TOTAL_GROSS_BALANCE"  javaType="$"/>

<result property="MONTHS_IN_ARREARS"  javaType="long"/>
<result property="DAYS_PAST_DUE"  javaType="long"/>
<result property="INSTALLMENT_AMOUNT_IN_ARREARS"  javaType="$"/>
<result property="INTEREST_DUE_DATE" javaType="date"/>
<result property="PAYMENT_DUE_DATE" javaType="date"/>
<result property="SELF_CURE"  javaType="long"/>

<result property="RELEASE_DATE" javaType="date"/>
<result property="FULL_RELEASE_DATE" javaType="date"/>
<result property="UPDATE_FIRST_OF_MONTH_SNAPSHOT"  javaType="string"/>
<result property="MOVEMENT_STATUS_ID"  javaType="long"/>
<result property="LAST_MONTH_BEGIN_MIA"  javaType="long"/>
<result property="WRITE_OFF_AMOUNT"  javaType="$"/>
<result property="TOTAL_AMOUNT_DUE"  javaType="$"/>
<result property="INTEREST_REBATE"  javaType="$"/>
</resultMap>

<sql id="getWlgAccountSnapshot-fragment">
SELECT distinct 
dd.data_date + interval '1 day' as ASSIGNMENT_DATE, 
a.ID as ACCOUNT_ID,
case when A.NPL_FLAG = 'Y' then 1 else 0 end as NPL_FLAG,
A.NPL_STATUS_ID as NPL_STATUS,
a.outstanding_balance as OUTSTANDING_AMT,
a.outstanding_balance as OUTSTANDING_BALANCE,
a.outstanding_balance - (a.interest_rebate_amount + a.write_off_amount) as TOTAL_GROSS_BALANCE,
a.months_in_arrears, 
a.MONTHS_IN_ARREARS * 30 AS DAYS_PAST_DUE,
a.installment_amount_in_arrears,
A.next_interest_payment_due_date as INTEREST_DUE_DATE,
a.NEXT_PAYMENT_DUE_DATE as PAYMENT_DUE_DATE,
case when cure.status = true then 1 else 0 end as self_cure,
a.first_release_date as RELEASE_DATE, 
a.FULL_RELEASE_DATE as FULL_RELEASE_DATE,
case 
when wlassign.account_id = a.id then 'true' else 'false' end as UPDATE_FIRST_OF_MONTH_SNAPSHOT,
case when wlassign.months_in_arrears &lt; a.months_in_arrears then 1
when wlassign.months_in_arrears = a.months_in_arrears then 2
when wlassign.months_in_arrears &gt; a.months_in_arrears then 3 end as MOVEMENT_STATUS_ID,
wlassign.months_in_arrears as LAST_MONTH_BEGIN_MIA,
a.WRITE_OFF_AMOUNT,
a.TOTAL_AMOUNT_DUE,
a.interest_rebate_amount
from ptraccount a
left join ptraccount_work_list_assignment wlassign on a.id = wlassign.account_id
left join PTRACC_SELF_CURE_STATUS cure on a.id = cure.account_id
inner join ptrproduct_type_ref pr on (a.product_type_id = pr.id)
inner join ptrproduct_type_category_ref cat on (pr.category_id = cat.id),
PTRDATA_DATE dd

</sql>


<select id="getWlgAccountSnapshotAf" resultMap="getWlgAccountSnapshot">
<include refid="getWlgAccountSnapshot-fragment"/>
where cat.code in ('AF')
</select>

<select id="getWlgAccountSnapshotPf" resultMap="getWlgAccountSnapshot">
<include refid="getWlgAccountSnapshot-fragment"/>
where cat.code in ('PF')
</select>


<select id="getWlgAccountSnapshotPfi" resultMap="getWlgAccountSnapshot">
<include refid="getWlgAccountSnapshot-fragment"/>
where cat.code in ('PFI')
</select>



</sqlMap>