<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="reportService">


  
	<resultMap id="getTemplateList" class="hmap">
		<result property="ID" javaType="long" />
		<result property="NAME" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="TYPE" javaType="string" />
		<result property="CREATED_BY" javaType="string" />
		<result property="CREATED_TIME" javaType="ts" />
		<result property="UPDATED_BY" javaType="string" />
		<result property="UPDATED_TIME" javaType="ts" />
		<result property="DISABLE" javaType="boolean" />
	</resultMap>
	<select id="getTemplateList" resultMap="getTemplateList">
		SELECT
		T.ID,T.NAME,T.DESCRIPTION,R.DESCRIPTION AS TYPE,
		T.CREATED_BY,T.CREATED_TIME,T.UPDATED_BY,T.UPDATED_TIME,T.DISABLE
		FROM
		PTRTEMPLATE T
		INNER JOIN PTRTEMPLATE_TYPE_REF R ON
		T.TEMPLATE_TYPE_ID=R.ID
	</select>

	<resultMap id="getTemplateForEditing" class="hmap">
		<result property="NAME" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="TYPE_ID" javaType="long" />
		<result property="DISABLE" javaType="boolean" />
		<result property="CURRENT_DOCUMENT_ID" javaType="long" />
		<result property="PRODUCT_TYPE_CATEGORY_ID" javaType="long" />
	</resultMap>
	<select id="getTemplateForEditing" resultMap="getTemplateForEditing">
		select t.name,t.description,t.template_type_id,t.disable,v.document_id,t.product_type_category_id
		from ptrtemplate t
		inner JOIN ptrtemplate_version v on
		v.template_id=t.id and v.disable =
		<include refid="false" />
		and t.id=#TEMPLATE_ID#
	</select>
	<select id="getTemplateTypes" resultMap="global.ref">
		<include refid="pleaseSelectRef" />
		union
		<include refid="refselect" />
		from PTRTEMPLATE_TYPE_REF
	</select>
	<select id="getReportProductCategories" resultMap="global.ref">
		<include refid="pleaseSelectRef" />
		union
		<include refid="refselect" />
		from ptrproduct_type_category_ref
	</select>
	<select id="getReportProductCategoriesForEditing" resultMap="global.ref">
		<include refid="selectAllRef" />
		union
		<include refid="refselect" />
		from ptrproduct_type_category_ref
	</select>
	<insert id="insertSubReport">
		<selectKey resultClass="long" keyProperty="ID">
			<include refid="sequencePrefix" />
			PTRREPORT_DESIGN_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		insert into
		ptrreport_design(id,name,document_id,is_sub,created_by,created_time)
		values(#ID#,'N/A',#DOCUMENT_ID#,true,#LOGON_USER#,#CURRENT_TIME#)
	</insert>

	<insert id="insertTemplate">
		<selectKey resultClass="long" keyProperty="ID">
			<include refid="sequencePrefix" />
			PTRTEMPLATE_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		INSERT INTO ptrtemplate
		(id,name,description,template_type_id,remarks,created_by,created_time,product_type_category_id)
		VALUES
		(#ID#,#NAME#,#DESCRIPTION#,#TYPE_ID#,#REMARKS#,#LOGON_USER#,#CURRENT_TIME#,#PRODUCT_TYPE_CATEGORY_ID#)
	</insert>
	<insert id="insertTemplateVersion">
		insert into
		ptrtemplate_version(template_id,document_id,created_by,created_time)
		values(#TEMPLATE_ID#,#DOCUMENT_ID#,#LOGON_USER#,#CURRENT_TIME#)
	</insert>
	<update id="disableOldTemplateVersion">
		update ptrtemplate_version set disable = true where
		template_id=#TEMPLATE_ID#
	</update>
	<update id="updateTemplate">
		update ptrtemplate set
		name = #NAME#, description =#DESCRIPTION#,
		template_type_id = #TYPE_ID#, disable = #DISABLE#,
		updated_by=#LOGON_USER#,
		updated_time=#CURRENT_TIME#,
		product_type_category_id=#PRODUCT_TYPE_CATEGORY_ID#
		where
		id=#TEMPLATE_ID#
	</update>

	<resultMap id="getReportList" class="hmap">
		<result property="ID" javaType="long" />
		<result property="NAME" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="PRODUCT_CATEGORY" javaType="string" />
		<result property="REMARKS" javaType="string" />
		<result property="CREATED_BY" javaType="string" />
		<result property="CREATED_TIME" javaType="ts" />
		<result property="UPDATED_BY" javaType="string" />
		<result property="UPDATED_TIME" javaType="ts" />
		<result property="DISABLE" javaType="boolean" />
	</resultMap>
	<select id="getReportList" resultMap="getReportList">
		select r.id,r.name,r.description,pr.description as PRODUCT_CATEGORY,
		r.remarks,r.created_by,r.created_time,r.updated_by,r.updated_time,r.disable
		from ptrreport_design r
		left join ptrproduct_type_category_ref pr on
		pr.id=r.product_category_id
		where r.is_sub =
		<include refid="false" />
	</select>

	<resultMap id="getReportForEditing" class="hmap">
		<result property="NAME" javaType="string" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="PRODUCT_CATEGORY_ID" javaType="long" />
		<result property="CURRENT_DOCUMENT_ID" javaType="long" />
		<result property="REMARKS" javaType="string" />
		<result property="DISABLE" javaType="boolean" />
	</resultMap>
	<select id="getReportForEditing" resultMap="getReportForEditing">
		select r.name,r.description,r.product_category_id,document_id,
		r.remarks,r.disable
		from ptrreport_design r
		where r.is_sub =
		<include refid="false" />
		and r.id = #REPORT_ID#
	</select>

	<insert id="insertReport">
		<selectKey resultClass="long" keyProperty="ID">
			<include refid="sequencePrefix" />
			PTRREPORT_DESIGN_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		INSERT INTO ptrreport_design
		(id,document_id,name,description,product_category_id,remarks,created_by,created_time)
		VALUES
		(#ID#,#DOCUMENT_ID#,#NAME#,#DESCRIPTION#,#PRODUCT_CATEGORY_ID#,#REMARKS#,#LOGON_USER#,#CURRENT_TIME#)
	</insert>

	<update id="updateReport">
		update ptrreport_design set
		DOCUMENT_ID =
		#DOCUMENT_ID#,
		name = #NAME#, description = #DESCRIPTION#,
		product_category_id = #PRODUCT_CATEGORY_ID#, disable = #DISABLE#,
		updated_by=#LOGON_USER#, updated_time=#CURRENT_TIME#, remarks=#REMARKS#
		where
		id=#REPORT_ID#
	</update>

	<resultMap id="getReportForScheduling" class="hmap">
		<result property="ID" javaType="long" />
		<result property="DESCRIPTION" javaType="string" />
		<result property="DISABLE" javaType="boolean" />
	</resultMap>
	<select id="getReportForScheduling" resultMap="getReportForScheduling">
		select r.id,r.name,r.disable from ptrreport_design r
		where r.is_sub = <include refid="false"/>
		<isNull property="REPORT_ID">
			and not exists(select 1 from PTREVENT_SCHEDULE s
			where CAST(S.REQUEST_ID AS BIGINT) = r.id and S.SCHEDULE_STATUS_ID =1)
		</isNull>

		<isNotNull property="REPORT_ID">
			and r.id=#REPORT_ID#
		</isNotNull>
	</select>
	<resultMap id="getReportScheduleForEditing" class="hmap">
		<result property="TYPE_ID" javaType="long" />
		<result property="SCHEDULE_TIME" javaType="ts" />
	</resultMap>
	<select id="getReportScheduleForEditing" resultMap="getReportScheduleForEditing">
		SELECT TYPE_ID,CASE WHEN TYPE_ID = 2 THEN SCHEDULE_TIME END FROM PTREVENT_SCHEDULE
		WHERE ID=#SCHEDULE_ID#
	</select>

	<update id="updateOverrideSchedule">
		update ptrevent_schedule set SCHEDULE_STATUS_ID=2
		where REQUEST_ID=
		CAST(#REPORT_ID# AS VARCHAR(200))
	</update>
	<insert id="insertReportEventSchedule">
		<selectKey resultClass="long" keyProperty="ID">
			<include refid="sequencePrefix" />
			PTREVENT_SCHEDULE_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		insert into PTREVENT_SCHEDULE
		(ID, SCHEDULE_STATUS_ID, REQUEST_ID,
		REQUESTING_SERVICE,
		REQUEST_DATE_TIME,
		SCHEDULE_CRON,REMARKS,TYPE_ID,SCHEDULE_TIME,REQUESTING_HOST)
		values
		(#ID#, 1, #REPORT_ID#, #REQUESTING_SERVICE#, #REQUEST_TIME#,
		#SCHEDULE_CRON#,#REMARKS#,#TYPE_ID#,#SCHEDULE_TIME#,#REQUESTING_HOST#)
	</insert>
	<resultMap id="getReportBatchIdForSchedule" class="java.util.HashMap">
		<result property="BATCH_ID" javaType="string" />
	</resultMap>
	<select id="getReportBatchIdForSchedule" resultMap="getReportBatchIdForSchedule">
		select ID
		from PTRREPORT_BATCH where NAME = cast(#REPORT_ID# as
		varchar(200))
	</select>
	<insert id="insertReportCustomBatch">
		<selectKey resultClass="long" keyProperty="BATCH_ID">
			<include refid="sequencePrefix" />
			PTRREPORT_BATCH_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		insert into
		ptrreport_batch
		(
		id,
		name,
		description,
		created_by,
		CREATED_TIME,
		UPDATED_BY,
		updated_time
		)
		values
		(
		#BATCH_ID#,
		#REPORT_ID#,
		#NAME#,
		#CREATED_USER_ID#,
		#CREATED_TIME#,
		#UPDATED_USER_ID#,
		#UPDATED_TIME#
		)
	</insert>
	<insert id="addReportForCustomBatch">
		<selectKey resultClass="long" keyProperty="ID">
			<include refid="sequencePrefix" />
			PTRREPORT_BATCH_REL_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		insert into
		ptrreport_batch_rel
		(
		id,
		report_design_id,
		batch_id,
		sequence
		)
		values
		(
		#ID#,
		#REQUEST_ID#,
		#BATCH_ID#,
		0
		)
	</insert>
	<delete id="deleteUnusedReportGenerationProjection">
		delete from PTRREPORT_GENERATION_PROJECTION WHERE
		REPORT_ID=#REPORT_ID#
	</delete>
	<insert id="insertReportGenerationProjection">
		insert into
		PTRREPORT_GENERATION_PROJECTION(REPORT_ID,PROJECTION_TIME)
		values(#REPORT_ID#,#TRIGGER_TIME#)
	</insert>
	<insert id="insertScheduleRecurringMinute" parameterClass="java.util.Map">
		INSERT INTO PTRSCHEDULE_RECURRING_MINUTE
		(EVENT_SCHEDULE_ID,MINUTE_ID)
		VALUES
		(#EVENT_SCHEDULE_ID#,cast(#ID# as BIGINT))
	</insert>
	<insert id="insertScheduleRecurringHour" parameterClass="java.util.Map">
		INSERT
		INTO PTRSCHEDULE_RECURRING_HOUR
		(EVENT_SCHEDULE_ID,HOUR_ID)
		VALUES
		(#EVENT_SCHEDULE_ID#,cast(#ID# as BIGINT))
	</insert>

	<insert id="insertScheduleRecurringDayOfMonth" parameterClass="java.util.Map">
		INSERT INTO PTRSCHEDULE_RECURRING_DAY_OF_MONTH
		(EVENT_SCHEDULE_ID,DAY_OF_MONTH_ID)
		VALUES
		(#EVENT_SCHEDULE_ID#,cast(#ID# as BIGINT))
	</insert>
	<insert id="insertScheduleRecurringDayOfWeek" parameterClass="java.util.Map">
		INSERT INTO PTRSCHEDULE_RECURRING_DAY_OF_WEEK
		(EVENT_SCHEDULE_ID,DAY_OF_WEEK_ID)
		VALUES
		(#EVENT_SCHEDULE_ID#,cast(#ID# as BIGINT))
	</insert>
	<insert id="insertScheduleRecurringYear" parameterClass="java.util.Map">
		INSERT
		INTO PTRSCHEDULE_RECURRING_YEAR
		(EVENT_SCHEDULE_ID,YEAR_ID)
		VALUES
		(#EVENT_SCHEDULE_ID#,cast(#ID# as BIGINT))
	</insert>

	<insert id="insertScheduleRecurringMonth" parameterClass="java.util.Map">
		INSERT
		INTO PTRSCHEDULE_RECURRING_MONTH
		(EVENT_SCHEDULE_ID,MONTH_ID)
		VALUES
		(#EVENT_SCHEDULE_ID#,cast(#ID# as BIGINT))
	</insert>

	<resultMap id="getScheduledReports" class="java.util.HashMap">
		<result property="SCHEDULE_ID" javaType="long" />
		<result property="REPORT_ID" javaType="long" />
		<result property="REPORT_NAME" javaType="string" />
		<result property="CREATED_TIME" javaType="ts" />
		<result property="SCHEDULE_TYPE" javaType="string" />
		<result property="NEXT_SCHEDULE_TIME" javaType="ts" />
	</resultMap>
	<select id="getScheduledReports" resultMap="getScheduledReports">
		SELECT
		S.ID,
		R.id,
		R.name,
		s.request_date_time,
		case when s.type_id = 1 then 'Recurring' else 'Scheduled Once' end as
		TYPE,
		case when s.SCHEDULE_TIME is not null and s.SCHEDULE_TIME
		&gt;=#CURRENT_TIME# then s.SCHEDULE_TIME end
		FROM PTREVENT_SCHEDULE S
		INNER JOIN PTRREPORT_DESIGN R ON CAST(S.REQUEST_ID AS BIGINT) = R.ID
		WHERE S.SCHEDULE_STATUS_ID =1
		AND R.DISABLE = false OR R.DISABLE IS NULL
	</select>
	<resultMap id="getScheduledReportsNextRunTime" class="java.util.HashMap">
		<result property="REPORT_ID" javaType="long" />
		<result property="NEXT_SCHEDULE_TIME" javaType="ts" />
	</resultMap>
	<select id="getScheduledReportsNextRunTime" resultMap="getScheduledReportsNextRunTime">
		SELECT
		G.REPORT_ID,MIN(G.PROJECTION_TIME)
		FROM PTRREPORT_GENERATION_PROJECTION G
		INNER JOIN PTREVENT_SCHEDULE S ON
		CAST(S.REQUEST_ID AS BIGINT)=G.REPORT_ID AND S.SCHEDULE_STATUS_ID=1
		WHERE G.PROJECTION_TIME &gt;= #CURRENT_TIME#
		GROUP BY G.REPORT_ID
	</select>
	<resultMap class="hmap" id="getReportDesignDocumentIdForEvent">
		<result property="DOCUMENT_ID" />
	</resultMap>
	<select id="getReportDesignDocumentIdForEvent" resultMap="getReportDesignDocumentIdForEvent"
		parameterClass="map">
		select document_id
		from ptrreport_design
		where id = #ID#
	</select>

	<parameterMap id="reportInstanceInsertParam-map" class="map">
		<parameter property="ID" jdbcType="NUMERIC" javaType="long" />
		<parameter property="REPORT_DESIGN_ID" jdbcType="NUMERIC"
			javaType="long" />
		<parameter property="DOCUMENT_ID" jdbcType="NUMERIC"
			javaType="long" />
		<parameter property="GENERATION_DATE" jdbcType="TIMESTAMP"
			javaType="date" />
	</parameterMap>
	<insert id="insertReportInstance" parameterMap="reportInstanceInsertParam-map">
		<selectKey resultClass="long" keyProperty="ID">
			<include refid="sequencePrefix" />
			PTRREPORT_INSTANCE_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		insert into
		ptrreport_instance
		(
		id,
		report_design_id,
		document_id,
		generation_time
		)
		values
		(
		?,
		?,
		?,
		?
		)
	</insert>

	<select id="getTemplateSubreportDocumentId" resultClass="long"
		parameterClass="long">
		select document_id from ptrreport_design where id = #value#
		order by name asc
	</select>


	<resultMap id="loadReportProjectionForEditing" class="java.util.HashMap">
		<result property="TRIGGER_TIME" javaType="ts" />
	</resultMap>
	<select id="loadReportProjectionForEditing" resultMap="loadReportProjectionForEditing">
		SELECT
		PROJECTION_TIME
		FROM PTRREPORT_GENERATION_PROJECTION
		WHERE REPORT_ID=#REPORT_ID#
	</select>
	<resultMap id="loadReportSheduleElementsForEditing" class="java.util.HashMap">
		<result property="ID" javaType="long" />
		<result property="COLOR" javaType="string" />
	</resultMap>
	<select id="loadReportMinutesSheduleElements" resultMap="loadReportSheduleElementsForEditing">
		SELECT MINUTE_ID,'0052FF'
		FROM PTRSCHEDULE_RECURRING_MINUTE
		WHERE EVENT_SCHEDULE_ID = #SCHEDULE_ID#
	</select>
	<select id="loadReportHoursSheduleElements" resultMap="loadReportSheduleElementsForEditing">
		SELECT HOUR_ID,'0052FF'
		FROM PTRSCHEDULE_RECURRING_HOUR
		WHERE EVENT_SCHEDULE_ID = #SCHEDULE_ID#
	</select>
	<select id="loadReportDaysOfWeekSheduleElements" resultMap="loadReportSheduleElementsForEditing">
		SELECT DAY_OF_WEEK_ID,'0052FF'
		FROM PTRSCHEDULE_RECURRING_DAY_OF_WEEK
		WHERE EVENT_SCHEDULE_ID = #SCHEDULE_ID#
	</select>
	<select id="loadReportDaysOfMonthSheduleElements" resultMap="loadReportSheduleElementsForEditing">
		SELECT DAY_OF_MONTH_ID,'0052FF'
		FROM PTRSCHEDULE_RECURRING_DAY_OF_MONTH
		WHERE EVENT_SCHEDULE_ID = #SCHEDULE_ID#
	</select>
	<select id="loadReportMonthsSheduleElements" resultMap="loadReportSheduleElementsForEditing">
		SELECT MONTH_ID,'0052FF'
		FROM PTRSCHEDULE_RECURRING_MONTH
		WHERE EVENT_SCHEDULE_ID = #SCHEDULE_ID#
	</select>
	<select id="loadReportYearsSheduleElements" resultMap="loadReportSheduleElementsForEditing">
		SELECT YEAR_ID,'0052FF'
		FROM PTRSCHEDULE_RECURRING_YEAR
		WHERE EVENT_SCHEDULE_ID = #SCHEDULE_ID#
	</select>
	
	<select id="getAllReports" resultMap="global.ref">
		<include refid="selectAllRef" />
		union
		select id,name,name,disable,id from ptrreport_design
		where is_sub = <include refid="false"/>
	</select>
	<resultMap class="hmap" id="getGeneratedReports">
		<result property="REPORT_NAME" />
		<result property="DOCUMENT_ID" />
		<result property="GENERATED_TIME" />
	</resultMap>
	<select id="getGeneratedReports" resultMap="getGeneratedReports">
		select d.name,i.document_id,i.generation_time from ptrreport_instance i
		inner join ptrreport_design d on i.report_design_id=d.id
		where d.disable = <include refid="false"/>
		<isNotNull property="REPORT_ID">
			and d.id =#REPORT_ID#
		</isNotNull>
		<isEqual property="PERIOD" compareValue="1">
			and date(i.generation_time) = #CURRENT_DATE#
		</isEqual>
		<isEqual property="PERIOD" compareValue="2">
			and date(i.generation_time) &gt;= #SEVEN_DAYS_AGO#
		</isEqual>
		<isEqual property="PERIOD" compareValue="3">
			and date(i.generation_time) &gt;= #A_MONTH_AGO#
		</isEqual>
		<isEqual property="PERIOD" compareValue="4">
			and date(i.generation_time) &gt;= #A_YEAR_AGO#
		</isEqual>
		<isEqual property="PERIOD" compareValue="5">
			<isNotEmpty property="FROM_DATE">
			 	and date(i.generation_time) &gt;= #FROM_DATE#
			</isNotEmpty>
			<isNotEmpty property="TO_DATE">
			 	and date(i.generation_time) &lt;= #TO_DATE#
			</isNotEmpty>
			<isEmpty property="FROM_DATE">
				and 1=2
			</isEmpty>
		</isEqual>
		order by i.generation_time desc
	</select>
	
	
	
	
	<resultMap id="reportDesignResult-map" class="java.util.HashMap">
		<result property="ID" column="ID" javaType="long"/>
		<result property="DOCUMENT_ID" column="DOCUMENT_ID" javaType="long"/>
		<result property="NAME" column="NAME" javaType="string"/>
		<result property="DESCRIPTION" column="DESCRIPTION" javaType="string"/>
		<result property="CREATED_BY" column="CREATED_BY" javaType="string"/>
		<result property="CREATED_DATE" column="CREATED_DATE" javaType="date"/>
		<result property="MODIFIED_BY" column="MODIFIED_BY" javaType="string"/>
		<result property="MODIFIED_DATE" column="MODIFIED_DATE" javaType="date"/>
		<result property="SCHEDULE" column="SCHEDULE" javaType="string"/>
	
		
		<result property="ENABLE_DO_NOT_SCHEDULE" column="ENABLE_DO_NOT_SCHEDULE" javaType="boolean"/>
	</resultMap>
	
	<select id="getReportDesignById" resultMap="reportDesignResult-map" parameterClass="long">
		select
		rptdsg.id as ID,
			rptdsg.document_id as DOCUMENT_ID,
			rptdsg.name as NAME,
			rptdsg.description as DESCRIPTION,
			rptdsg.created_by as CREATED_BY,
			rptdsg.created_time as CREATED_DATE,
			rptdsg.updated_by as MODIFIED_BY,
			rptdsg.updated_time as MODIFIED_DATE,
			s.schedule_cron as SCHEDULE,
			case when s.schedule_cron is not null then 1 end as ENABLE_DO_NOT_SCHEDULE
		from
			ptrreport_design rptdsg 
			LEFT JOIN  ptrevent_schedule s on (s.request_id = cast(rptdsg.id as varchar(200)) and s.schedule_status_id = 1)
		where
			rptdsg.id = #ID#
	</select>
	
	<select id="getReportDesignDocumentId" resultClass="long" parameterClass="long">
		select
			document_id
		from
			ptrreport_design
		where
			id = #ID#
	</select>
</sqlMap>