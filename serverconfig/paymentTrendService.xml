<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="paymentTrendService.xml">



<resultMap id="getMontlyPaymentTrend" class="java.util.HashMap">
<result property="PAYMENT_RECEIVED"  javaType="long"/>
<result property="ACCOUNT_ID"  javaType="long"/>
<result property="TREND_ID"  javaType="long"/>
<result property="IS_EXISTING"  javaType="string"/>
</resultMap>

<select id="getMontlyPaymentTrend" resultMap="getMontlyPaymentTrend">
select 
coalesce(n.payment_count,0) as PAYMENT_RECEIVED, 
a.id as account_id,
trend.id as TREND_ID,
case when trend.account_id is not null then 'true' else 'false' end as IS_EXISTING
from 
ptraccount a
left join 
(
select 
count(t.account_id) as payment_count,t.account_id
from 
ptrpayment_transaction t
where t.posting_date &gt;= #START_DATE:DATE#
and #END_DATE:DATE# &gt;= t.posting_date
group by t.account_id
) n on a.id = n.account_id
left join ptrmonthly_payment_trend trend on a.id = trend.account_id and #EVALUATION_DATE# = trend.evaluation_date::date
</select>


<insert id="insertMontlyPaymentTrend">
<selectKey keyProperty="ID" resultClass="long">
<include refid="sequencePrefix"/>ptrmonthly_payment_trend_id<include refid="sequenceSuffix"/>
</selectKey>
insert into ptrmonthly_payment_trend 
(id,account_id,payment_received,evaluation_date) 
values 
(#ID#,#ACCOUNT_ID#,#PAYMENT_RECEIVED#,#EVALUATION_DATE#) 
</insert>

<update id="updateMontlyPaymentTrend">
update ptrmonthly_payment_trend set payment_received = #PAYMENT_RECEIVED#
where id = #TREND_ID#
</update>
  
</sqlMap>

