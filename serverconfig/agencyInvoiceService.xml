<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="agencyInvoiceService">

 <resultMap class="hmap" id="getAgenciesForInvoiceGeneration">
  <result property="AGENCY_ID" javaType="long"/>
  <result property="ECA_BILLING_ID" javaType="long"/>
  <result property="PRODUCT_TYPE_CATEGORY_ID" javaType="long"/>
  <result property="SST_RATE" javaType="double"/>
  <result property="IS_ISLAMIC" javaType="boolean"/>
 </resultMap>
 <select id="getAgenciesForInvoiceGeneration" resultMap="getAgenciesForInvoiceGeneration">
 <![CDATA[
   select a.id, i.ID, cat.id, a.sst_rate, false as IS_ISLAMIC from ptragency a
    left outer join PTRECA_BILLING i on a.id = i.agency_id and i.invoice_date = CAST(#END_OF_MONTH:DATE# AS DATE) and i.is_islamic=false
    inner join  ptraccount_agency_assignment aa on aa.agency_id=a.id

	inner join ptragency_effective_assignment e on e.agency_assignment_id = aa.id
	inner join ptragency_payment_transaction p on p.agency_assignment_id=aa.id
	inner join ptragency_payment_commission c on c.transaction_id=p.transaction_id

	inner join ptraccount acc on acc.id=aa.account_id
	inner join ptrproduct_type_ref pro on pro.id=acc.product_type_id
	inner join ptrproduct_type_category_ref cat on cat.id=pro.category_id

    left join ptrsptf_type_ref on acc.sptf_type_id = ptrsptf_type_ref.id

	where p.posting_date <= CAST(#INVOICE_DATE:DATE# AS DATE)
	and not exists (select * from ptreca_billing_transaction where PAYMENT_COMMISSION_ID = c.ID)
    and 
    extract(day from cast(#EFFECTIVE_DATE:DATE# as DATE)) = (
             select h.INVOICE_DAY from PTRAGENCY_INVOICE_DAY_HISTORY h
             where h.AGENCY_ID = a.id 
             and date(h.UPDATE_TIME) <= CAST(#INVOICE_DATE:DATE# AS DATE)
             order by h.update_time desc fetch first row only
   )
	and ptrsptf_type_ref.IS_ISLAMIC = false
   group by a.id, i.ID, cat.id, a.sst_rate
   order by a.id
   ]]>
 </select>

	<select id="getAgenciesForInvoiceGenerationIslamic" resultMap="getAgenciesForInvoiceGeneration">
 <![CDATA[
		select a.id, i.ID, cat.id, a.sst_rate, true as IS_ISLAMIC from ptragency a
		left outer join PTRECA_BILLING i on a.id = i.agency_id and i.invoice_date = CAST(#END_OF_MONTH:DATE# AS DATE) and i.is_islamic = true
		inner join  ptraccount_agency_assignment aa on aa.agency_id=a.id

		inner join ptragency_effective_assignment e on e.agency_assignment_id = aa.id
		inner join ptragency_payment_transaction p on p.agency_assignment_id=aa.id
		inner join ptragency_payment_commission c on c.transaction_id=p.transaction_id

		inner join ptraccount acc on acc.id=aa.account_id
		inner join ptrproduct_type_ref pro on pro.id=acc.product_type_id
		inner join ptrproduct_type_category_ref cat on cat.id=pro.category_id

		left join ptrsptf_type_ref on acc.sptf_type_id = ptrsptf_type_ref.id

		where p.posting_date <= CAST(#INVOICE_DATE:DATE# AS DATE)
		 and not exists (select * from ptreca_billing_transaction where PAYMENT_COMMISSION_ID = c.ID)
		 and
	 extract(day from cast(#EFFECTIVE_DATE:DATE# as DATE)) = (
						   select h.INVOICE_DAY from PTRAGENCY_INVOICE_DAY_HISTORY h
						   where h.AGENCY_ID = a.id
									 and date(h.UPDATE_TIME) <= CAST(#INVOICE_DATE:DATE# AS DATE)
																	 order by h.update_time desc fetch first row only
				 )
									 and ptrsptf_type_ref.IS_ISLAMIC = true
						   group by a.id, i.ID, cat.id, a.sst_rate
						   order by a.id
		]]>
 </select>
 
 <select id="getPaymentMaximumLoadExecution" resultMap="batchService.maximumLoadExecution">
		select coalesce(MAX(LOAD_EXECUTION_ID),1) from PTRPAYMENT_TRANSACTION
	</select>
 
<resultMap id="getAgencyPaymentsForCommissionEvaluation"
		class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long"/>
		<result property="ACCOUNT_ID" javaType="long"/>
		<result property="MIA_BEGIN" javaType="long" />
		<result property="MIA_CURRENT" javaType="long" />
		<result property="PAYMENT_METHOD_ID" javaType="long" />
		<result property="ACCOUNT_TAGGING_ID" javaType="long" />
		<result property="NO_CAP" javaType="$" />
		<result property="CONTRACT_VERSION_TERM_ID" javaType="long" />
		<result property="CONTRACT_VERSION_ID" javaType="long"/>
		<result property="DOCUMENT_ID" javaType="long"/>
		<result property="TRANSACTION_ID" javaType="long"/>
		<result property="AMOUNT" javaType="$"/>
		<result property="100" javaType="long"/>
		<result property="TRUE" javaType="boolean"/>
		<result property="STATUS_ID" javaType="long"/>
	</resultMap>

	<select id="getAgencyPaymentsForCommissionEvaluation" resultMap="getAgencyPaymentsForCommissionEvaluation">
	 <![CDATA[
		select 
		ass.id as AGENCY_ASSIGNMENT_ID,
		a.id as ACCOUNT_ID,
coalesce(wla.months_in_arrears,0) + 1 as MIA_BEGIN, 
a.months_in_arrears as MIA_CURRENT,
ap.payment_method_id as PAYMENT_METHOD_ID,
rel.account_tagging_id as ACCOUNT_TAGGING_ID,
99999999 as NO_CAP,
cvt.ID as CONTRACT_VERSION_TERM_ID,
cvt.CONTRACT_VERSION_ID,
cvt.DOCUMENT_ID,
ap.TRANSACTION_ID,
ap.AMOUNT,
100,
true,
ass.STATUS_ID
from ptragency_payment_transaction ap 
inner join ptraccount_agency_assignment ass on ass.id=ap.agency_assignment_id
inner join ptrtreatment_subtype_ref sb on sb.id=ass.subtype_id and sb.type_id=19
inner join ptraccount a on a.id=ass.account_id
inner join ptragency_effective_assignment eff on eff.agency_assignment_id=ass.id
left join ptraccount_work_list_assignment wla on wla.account_id=a.id
left join ptraccount_tagging_rel rel on rel.account_id=a.id
inner join (select cvt.ID, v.CONTRACT_ID, cvt.TYPE_ID, v.ID as CONTRACT_VERSION_ID, cvt.DOCUMENT_ID
from ptragency_contract_version v
inner join ptragency_contract_version_term cvt on cvt.VERSION_ID=v.ID and cvt.TYPE_ID = 1
where v.id=(SELECT max(h.id) from PTRAGENCY_CONTRACT_VERSION h where v.CONTRACT_ID=h.CONTRACT_ID and v.EFFECTIVE_DATE <= #EFFECTIVE_DATE#)
)cvt on cvt.CONTRACT_ID=ass.CONTRACT_ID
where ap.posting_date > eff.effective_date
and not exists (select 1 from ptragency_payment_commission com where com.transaction_id=ap.transaction_id)
order by a.id, ap.TRANSACTION_ID
]]>
	</select>
	
	<resultMap class="hmap" id="getAgencyPaymentsForAssignmentAlreadyCredited">
  <result property="CREDITED_PAYMENT_TOTAL" javaType="$"/>
 </resultMap>
 <select id="getAgencyPaymentsForAssignmentAlreadyCredited" resultMap="getAgencyPaymentsForAssignmentAlreadyCredited">
  <![CDATA[
   select coalesce(sum(p.AMOUNT),0) from ptragency_payment_transaction p
   where p.AGENCY_ASSIGNMENT_ID = #AGENCY_ASSIGNMENT_ID#
   and exists (select * from PTRAGENCY_PAYMENT_COMMISSION c where p.transaction_id = c.transaction_id)
   and p.transaction_id <> #TRANSACTION_ID#
   ]]>
 </select>
 
 <insert id="insertAgencyPaymentCommissionRecord" parameterClass="map">
 <selectKey resultClass="long" keyProperty="ID" type="pre">
   <include refid="sequencePrefix"/>PTRAGENCY_PAYMENT_COMMISSION_ID<include refid="sequenceSuffix"/>
  </selectKey>
   insert into PTRAGENCY_PAYMENT_COMMISSION
   (ID,  TRANSACTION_ID,  CONTRACT_VERSION_TERM_ID,   COMMISSION_RATE,   COMMISSION_AMOUNT,   PAYMENT_AMOUNT_TO_DATE, CONTRACT_VERSION_ID ) values
   (#ID#, #TRANSACTION_ID#, #CONTRACT_VERSION_TERM_ID#, #COMMISSION_RATE:NUMERIC#, #COMMISSION_AMOUNT#, #PAYMENT_AMOUNT_TO_DATE#, #CONTRACT_VERSION_ID#)
 </insert>
 
 
  <insert id="insertAgencyGeneratedInvoiceCommissionLink" parameterClass="map">
   <![CDATA[
  insert into ptreca_billing_transaction
  (ECA_BILLING_ID, PAYMENT_COMMISSION_ID, ACCOUNT_ID, AGENCY_ASSIGNMENT_ID, 
  outstanding_balance, interest_rebate_amount, write_off_amount, total_amount_due) 
  (select i.ID, c.ID, aa.ACCOUNT_ID, aa.ID,
  a.outstanding_balance, a.interest_rebate_amount, a.write_off_amount, a.total_amount_due
   from PTRAGENCY_PAYMENT_COMMISSION c 
   inner join ptragency_payment_transaction p on p.transaction_id = c.transaction_id 
   inner join ptraccount_agency_assignment aa on aa.id = p.AGENCY_ASSIGNMENT_ID
   inner join PTRAGENCY_EFFECTIVE_ASSIGNMENT e on e.AGENCY_ASSIGNMENT_ID = aa.id
   inner join ptraccount a on a.id=aa.account_id
   inner join ptrproduct_type_ref pro on pro.id=a.product_type_id
   inner join ptrproduct_type_category_ref cat on cat.id=pro.category_id
   inner join PTRECA_BILLING i on i.product_type_category_id=cat.id
   left join ptraccount_work_list_assignment wla on wla.account_id=a.id

   left join ptrsptf_type_ref on a.sptf_type_id = ptrsptf_type_ref.id
   where p.posting_date <= i.INVOICE_DATE
   and aa.agency_id = #AGENCY_ID# and i.ID = #ECA_BILLING_ID#
	 and ptrsptf_type_ref.IS_ISLAMIC = false
   and not exists (select * from ptreca_billing_transaction where PAYMENT_COMMISSION_ID = c.ID))
   ]]>
 </insert>

	<insert id="insertAgencyGeneratedInvoiceCommissionLinkIslamic" parameterClass="map">
   <![CDATA[
		insert into ptreca_billing_transaction
				(ECA_BILLING_ID, PAYMENT_COMMISSION_ID, ACCOUNT_ID, AGENCY_ASSIGNMENT_ID,
				 outstanding_balance, interest_rebate_amount, write_off_amount, total_amount_due)
				(select i.ID, c.ID, aa.ACCOUNT_ID, aa.ID,
						a.outstanding_balance, a.interest_rebate_amount, a.write_off_amount, a.total_amount_due
				 from PTRAGENCY_PAYMENT_COMMISSION c
						  inner join ptragency_payment_transaction p on p.transaction_id = c.transaction_id
						  inner join ptraccount_agency_assignment aa on aa.id = p.AGENCY_ASSIGNMENT_ID
						  inner join PTRAGENCY_EFFECTIVE_ASSIGNMENT e on e.AGENCY_ASSIGNMENT_ID = aa.id
						  inner join ptraccount a on a.id=aa.account_id
						  inner join ptrproduct_type_ref pro on pro.id=a.product_type_id
						  inner join ptrproduct_type_category_ref cat on cat.id=pro.category_id
						  inner join PTRECA_BILLING i on i.product_type_category_id=cat.id
						  left join ptraccount_work_list_assignment wla on wla.account_id=a.id

						  left join ptrsptf_type_ref on a.sptf_type_id = ptrsptf_type_ref.id
				 where p.posting_date <= i.INVOICE_DATE
				   and aa.agency_id = #AGENCY_ID# and i.ID = #ECA_BILLING_ID#
				   and ptrsptf_type_ref.IS_ISLAMIC = true
				   and not exists (select * from ptreca_billing_transaction where PAYMENT_COMMISSION_ID = c.ID))
		]]>
 </insert>

	<update id="updateInvoiceLastNumberOnInvoiceGenerationCompletion" parameterClass="map">
	update PTRAGENCY_INVOICE_NUMBER_REF set last_no = (select max(id) from PTRECA_BILLING)
	</update>
	
	<resultMap class="hmap" id="getContractsWithGeneratedInvoiceTransactions">
	<result property="ID" javaType="long"/>
  <result property="CONTRACT_ID" javaType="long"/>
 </resultMap>
 <select id="getContractsWithGeneratedInvoiceTransactions" resultMap="getContractsWithGeneratedInvoiceTransactions">
select distinct t.id, t.contract_id from(
select distinct i.id, cv.contract_id from ptreca_billing i
inner join ptreca_billing_transaction it on it.ECA_BILLING_ID = i.id
inner join ptragency_payment_commission tc on it.payment_commission_id = tc.id
inner join ptragency_contract_version_term term on term.id = tc.contract_version_term_id
inner join ptragency_contract_version cv on cv.id = term.version_id
where i.id = #ECA_BILLING_ID# and i.PRODUCT_TYPE_CATEGORY_ID=#PRODUCT_TYPE_CATEGORY_ID#) t
 </select>
 
 <resultMap class="hmap" id="getEcaBillingInvoiceStartingNumber">
  	<result property="INVOICE_NO" javaType="long"/>
  	<result property="PREFIX" javaType="string"/>
 	</resultMap>
 
 	<select id="getEcaBillingInvoiceStartingNumber" resultMap="getEcaBillingInvoiceStartingNumber">
 	 <![CDATA[ 
 	select
	case when coalesce(eca.invoice_no,0) < ref.starting_no then ref.starting_no else eca.invoice_no + 1 end as INVOICE_NO,
	ref.PREFIX
	from (select max(invoice_no) as invoice_no from ptreca_billing) eca, ptragency_invoice_number_ref ref
	]]>
 	</select>
 	
 	<resultMap class="hmap" id="getEcaBillingInvoiceNoLength">
  	<result property="INVOICE_NO_LENGTH_IS_LOWER_THAN_FIVE" javaType="boolean"/>
 	</resultMap>
 
 	<select id="getEcaBillingInvoiceNoLength" resultMap="getEcaBillingInvoiceNoLength">
 	select 
 	case when
 	length(cast(#INVOICE_NO# as TEXT)) &lt; 5 then true else false end <include refid="fromdual"/>
 	</select>
	
	<insert id="insertEcaBiilingHistoryByBatch" parameterClass="map">
	insert into PTRECA_BILLING_HISTORY(user_id,invoice_id,remarks,stage_code,update_time)
		values('System',#ID#,'Generated by System','IP',#CURRENT_DATE#)	
		</insert>
		
		<update id="updateAgencyContractInvoiceTransactionSummary">
update PTRECA_BILLING
set 
INVOICE_AMOUNT = 
(
select sum(COMMISSION_AMOUNT)
from PTRECA_BILLING i
inner join ptreca_billing_transaction it on it.ECA_BILLING_ID = i.ID
inner join PTRAGENCY_PAYMENT_COMMISSION tc on it.PAYMENT_COMMISSION_ID = tc.ID
inner join PTRAGENCY_CONTRACT_VERSION_TERM term on term.ID = tc.CONTRACT_VERSION_TERM_ID
inner join PTRAGENCY_CONTRACT_VERSION cv on cv.ID = term.version_id
where i.ID = #ECA_BILLING_ID# and cv.contract_id=#CONTRACT_ID#
) 
where ID = #ID#
 </update>
	
	
	<insert id="insertEcaInvoice">
		<selectKey keyProperty="ID" resultClass="long">
			<include refid="sequencePrefix" />
			PTRECA_BILLING_ID
			<include refid="sequenceSuffix" />
		</selectKey>
		insert into PTRECA_BILLING(id,AGENCY_ID,INVOICE_DATE,TAX_INVOICE_NO,INVOICE_AMOUNT,INVOICE_STAGE_ID,START_DATE,END_DATE,PRODUCT_TYPE_CATEGORY_ID,SST_RATE, IS_ISLAMIC)
		values(#ID#,#AGENCY_ID#,#INVOICE_DATE#,#TAX_INVOICE_NO#,#TOTAL_AMOUNT#,1,#START_DATE#,#END_DATE#,#PRODUCT_TYPE_CATEGORY_ID#,#SST_RATE#,#IS_ISLAMIC#)
	</insert>
	
	<update id="updateEcaInvoiceNo" parameterClass="map">
	update PTRECA_BILLING set INVOICE_NO=#INVOICE_NO#, TAX_INVOICE_NO=#TAX_INVOICE_NO# where ID=#ID#
	</update>
	
	
</sqlMap>