<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="intiateRnrService">


	<resultMap class="hmap" id="treatmentPrerequisiteInformation">
	    <result property="TO_EXCLUDE" javaType="boolean" />
	    <result property="ACCOUNT_ID" javaType="long" />
		<result property="LOAN_TYPE" javaType="string" />
		<result property="ACCOUNT_NO" javaType="string" />
		<result property="PRINCIPAL_AMOUNT" javaType="$" />
		
		<result property="INTEREST_IN_SUSPENSE_AMOUNT" javaType="$" />
		<result property="INSTALLMENT_AMOUNT" javaType="$" />
		<result property="OTHER_CHARGES" javaType="$" />
		<result property="OS_AMOUNT" javaType="$" />
		<result property="ACC_STATUS" javaType="string" />
		
		<result property="PENALTY_INTEREST_AMOUNT" javaType="$" />
		<result property="TENOR" javaType="long" />
		<result property="MIA" javaType="long"/>
		<result property="RANDR_TYPE" javaType="string"/>
		<result property="COLLATERAL_VALUE" javaType="$"/>
		
		<result property="LEGAL_STATUS" javaType="string"/>
		<result property="DEBT_HOLDER" javaType="string"/>		
		<result property="APPROVED_LIMIT" javaType="$"/>
		<result property="DEBT_TYPE" javaType="string"/>
		<result property="LOAN_TYPE" javaType="string"/>		
	</resultMap>
	
	<sql id="treatmentPrerequisiteInformation-fragment">
	coalesce(pr.TO_EXCLUDE,false), 
a.id,
ptc.code, 
a.ACCOUNT_NO,
coalesce(a.PRINCIPLE_DUE_AMOUNT,0) as PRINCIPAL_AMOUNT,

coalesce(a.TOTAL_INTEREST_IN_SUSPENSE,0) as INTEREST_SUSPENSE,
coalesce(a.PAYMENT_AMOUNT,0) as MONTHLY_INSTALLMENT_AMOUNT,
coalesce(a.OTHER_CHARGE,0) as OTHER_CHARGES,
coalesce(a.CURRENT_BALANCE,0) as OS_BALANCE,
s.DESCRIPTION as ACC_STATUS,

coalesce(a.INTEREST_DUE_AMOUNT,0)as PENALTY_INTEREST_AMOUNT,
case when (a.MATURITY_DATE - current_date)/30 &lt; 0 then 0 else (a.MATURITY_DATE - current_date)/30 end TENOR,
a.MONTHS_IN_ARREARS, 
NULL as RANDR_TYPE, <!-- case when tlast.TLAST_VALUE_90 = 'Y' then '90' when tlast.TLAST_VALUE_60  = 'Y' then '60' when tlast.TLAST_VALUE_59  = 'Y' then '59' else ' ' end -->
coalesce(coalesce(c.CURRENT_VALUE,c.FORCED_SALE_VALUE),0) as COLLATERAL_VALUE,

NULL as LEGAL_STATUS,<!-- case when tlast.TLAST_VALUE_4  = 'Y' then '04' else '' end -->
case when arel_ref.code='JA' then 'J' when arel_ref.code='P' then 'A' else '' end as DEBT_HOLDER, 
a.released_amount as LOAN_AMOUNT,
case when ptc.CODE in ('AF','PFI') then 'S' else 'U' end as DEBT_TYPE,
case when ptc.CODE in ('AF','PFI') then 'Secured' else 'Unsecured' end as LOAN_TYPE
	</sql>
	
	<sql id="treatmentPrerequisiteInformation-joinFragment">
    from PTRCUSTOMER_ACCOUNT_REL arel
	inner join PTRACCOUNT a on a.customer_id=arel.customer_id
	inner join PTRPRODUCT_TYPE_REF p on p.ID=a.PRODUCT_TYPE_ID
	inner join PTRPRODUCT_TYPE_CATEGORY_REF ptc on ptc.ID=p.CATEGORY_ID 
	left join PTRACCOUNT_STATUS_REF s on s.ID=a.STATUS_ID
	left join ptrcustomer_account_relation_type_ref arel_ref on arel.type_id=arel_ref.id
	<!-- left join PTRACCOUNT_TLAST tlast on tlast.account_id=a.account_id -->
	left join PTRACCOUNT_COLLATERAL_REL cr on cr.account_id=a.id
	left join PTRCOLLATERAL c on c.id=cr.collateral_id
	</sql>
	
	 <select id="getTreatmentPrerequisiteSecuredAccountsTable1" resultMap="treatmentPrerequisiteInformation">
     select <include refid="treatmentPrerequisiteInformation-fragment"/>
	 <include refid="treatmentPrerequisiteInformation-joinFragment"/>
	 left join ptrtreatment_initiate_rnr_prerequisite pr on pr.account_id=a.id and pr.treatment_id=#TREATMENT_ID# and pr.TABLE_CODE='T1'
	 where a.CUSTOMER_ID=#CUSTOMER_ID# and ptc.CODE  in ('AF','PF','PFI') 
	 and s.CODE !='8' and a.MONTHS_IN_ARREARS &lt;= 4
	</select>
	
	<select id="getTreatmentPrerequisiteSecuredAccountsTable2" resultMap="treatmentPrerequisiteInformation">
    select <include refid="treatmentPrerequisiteInformation-fragment"/>
	 <include refid="treatmentPrerequisiteInformation-joinFragment"/>
	 left join  ptrtreatment_initiate_rnr_prerequisite pr on pr.account_id=a.id and pr.treatment_id=#TREATMENT_ID# and pr.TABLE_CODE='T2'
	where a.CUSTOMER_ID=#CUSTOMER_ID# and ptc.CODE  in ('AF','PF','PFI') 
	and s.CODE ='8' and a.MONTHS_IN_ARREARS > 4
	</select>

	<insert id="insertTreatmentInitiateRnr"> 
		INSERT INTO	ptrtreatment_initiate_rnr (TREATMENT_ID, ACCOUNT_ID,TOTAL_BALANCE_1,TOTAL_BALANCE_2,GRAND_TOTAL,CONNECTED_PARTY_ID,CTOS,
		TYPE_STATUS_ID,SUBTYPE_ID)
		 VALUES (#ID#, #ACCOUNT_ID#,coalesce(#TOTAL_BALANCE_1#,0),coalesce(#TOTAL_BALANCE_2#,0),coalesce(#GRAND_TOTAL#,0),#CONNECTED_PARTY_ID#,#CTOS#,
		 #TYPE_STATUS_ID#,#SUBTYPE_ID#)
	</insert>
	
	<update id="updateTreatmentInitiateRnr"> 
		UPDATE ptrtreatment_initiate_rnr 
		set 
		TYPE_STATUS_ID = #TYPE_STATUS_ID#,
		SUBTYPE_ID = #SUBTYPE_ID#,
		TOTAL_BALANCE_1 = coalesce(#TOTAL_BALANCE_1#,0),
		 TOTAL_BALANCE_2 = coalesce(#TOTAL_BALANCE_2#,0), 
		 GRAND_TOTAL = coalesce(#GRAND_TOTAL#,0),
		 CONNECTED_PARTY_ID = #CONNECTED_PARTY_ID#,
		 CTOS=#CTOS#
		 where TREATMENT_ID = #ID#
	</update>
	
		<resultMap class="hmap" id="getTreatmentInitiateRnr">
		<result property="TOTAL_BALANCE_1" javaType="$" />
		<result property="TOTAL_BALANCE_2" javaType="$" />
		<result property="GRAND_TOTAL" javaType="$" />
		<result property="CONNECTED_PARTY_ID" javaType="boolean" />
		<result property="CTOS" javaType="string" />
		<result property="TYPE_STATUS_ID" javaType="long"/>
		<result property="SUBTYPE_ID" javaType="long"/>
	</resultMap>

	<select id="getTreatmentInitiateRnr" resultMap="getTreatmentInitiateRnr">
	select
	TOTAL_BALANCE_1,
	TOTAL_BALANCE_2,
	GRAND_TOTAL,
	CONNECTED_PARTY_ID,
	CTOS,
	TYPE_STATUS_ID,
	SUBTYPE_ID
	from ptrtreatment_initiate_rnr 
	where TREATMENT_ID=#ID#	
	</select>
	
	<delete id="deleteTreatmentInitiateRnrPrerequisite">
    DELETE FROM ptrtreatment_initiate_rnr_prerequisite WHERE TREATMENT_ID = #ID#
</delete>

<insert id="insertTreatmentInitiateRnrPrerequisite">
<selectKey keyProperty="ID" resultClass="long" type="pre"><include refid="sequencePrefix"/>ptrtreatment_initiate_rnr_prerequisite_id<include refid="sequenceSuffix"/></selectKey>
	INSERT INTO ptrtreatment_initiate_rnr_prerequisite (ID,TREATMENT_ID,ACCOUNT_ID,TO_EXCLUDE,TABLE_CODE)
	VALUES(#ID#,#TREATMENT_ID#,#ACCOUNT_ID#,#TO_EXCLUDE#,#TABLE_CODE#)
</insert>
	
</sqlMap>