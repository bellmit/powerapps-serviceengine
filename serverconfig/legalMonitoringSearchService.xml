<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="legalMonitoringSearchService">

	<resultMap class="hmap" id="getLegalMonitoringCustomerAccountData">
		<result property="ACCOUNT_ID" javaType="long" />	
		<result property="CUSTOMER_ID" javaType="string" />	
		<result property="CUSTOMER_NUMBER" javaType="string" />
		<result property="ACCOUNT_NUMBER" javaType="string" />
		<result property="CUSTOMER_NAME" javaType="string" />
		<result property="IDENTIFICATION_NUMBER" javaType="string" />
		<result property="DIA" javaType="long" />		
		<result property="MIA" javaType="long" />
		<result property="MONTHS_IN_ARREARS" javaType="long" />
		<result property="BEGIN_MIA" javaType="long" />
		
		<result property="NPF_DATE" javaType="date" />
		<result property="CURRENT_NLB" javaType="$" />
		<result property="BEGIN_NLB" javaType="$" />
		<result property="OUTSTANDING_BALANCE" javaType="$" />
		<result property="CURRENT_BALANCE" javaType="$" />		
		<result property="PRODUCT_CATEGORY" javaType="string" />
		<result property="FINANCING_TYPE" javaType="string" />
		<result property="PRODUCT_TYPE" javaType="string" />
		<result property="ACCOUNT_STATUS" javaType="string" />
		<result property="CHARGE_OFF_DATE" javaType="date" />		
		
		<result property="FULL_RELEASE_DATE" javaType="date" />
		<result property="COLLECTOR_WORKLIST" javaType="string" />
		<result property="COLLECTOR_ASSIGN_DATE" javaType="date" />
		<result property="LW_ASSIGNMENT_DATE" javaType="date" />
		<result property="LEGAL_WORKLIST" javaType="string" />
		<result property="BRANCH_CODE" javaType="string" />
		<result property="BRANCH_NAME" javaType="string" />
		<result property="LAST_PAYMENT_DATE" javaType="date" />	
		<result property="LAST_PAYMENT_AMOUNT" javaType="$" />
		<result property="TOTAL_MONTHLY_PAYMENT" javaType="$" />
		
		<result property="FINANCING_AMOUNT" javaType="$" />
		<result property="DEFAULT_USER" javaType="string" />
		<result property="MODE_OF_ACCOUNT" javaType="string" />
		<result property="REGION" javaType="string" />
		<result property="REDEMPTION_STATEMENT" javaType="date" />
		<result property="PRINCIPAL_BALANCE" javaType="$" />
		<result property="PRIMARY_ID" javaType="string" />
		<result property="ACCOUNT_STATUS_ID" javaType="long" />
		<result property="LAST_DISBURSE_DATE" javaType="date" />
		<result property="MATURE_DATE" javaType="date" />
		
		<result property="PROFIT_RATE" javaType="double" />
		<result property="GROSS_BALANCE" javaType="$" />
		<result property="ARREARS_AMNT" javaType="$" />
		<result property="OTHER_CHARGES" javaType="$" />
		<result property="TOTAL_DUE" javaType="$" />
		<result property="PAYMENT_RECEIVED_MTD" javaType="$" />
		<result property="PAYMENT_STS_31" javaType="$" />
		<result property="ADVANCED_PAYMENT" javaType="$" />
		<result property="MONTHLY_INSTALLMENT" javaType="$" />
		<result property="MIA_ID_ORI" javaType="long" />
		
		<result property="MOVEMENT" javaType="$" />
		<result property="REMARK_AS" javaType="string" />
		<result property="PAYMENT_MTD" javaType="$" />
		<result property="PAYMENT_STS_02" javaType="$" />
		<result property="LAST_PYMT_DT" javaType="date" />
		<result property="OUTSTANDING_BAL" javaType="$" />
		<result property="GROSS_BAL" javaType="$" />
		<result property="ARREARS_AMOUNT" javaType="$" />
		<result property="JUL" javaType="string" />
		<result property="PAYMENT_TREND" javaType="$" />
		
		<result property="STATUS" javaType="string" />
		<result property="WASLAH_STATUS" javaType="string" />

		<result property="ACTION_STATUS" javaType="string" />
		<result property="TAT" javaType="long" />
		<result property="COMPLETED_DATE" javaType="date" />
		<result property="ASSIGNED_DATE" javaType="date" />
		<result property="TAT_INTERVAL" javaType="long" />
		<result property="TAT_COLOR" javaType="string" />
        <result property="ABORT_COLOR" javaType="string" />
		<result property="OLD_ACCOUNT_NUMBER" javaType="string" />
			<result property="CHECK_DIGIT" javaType="long" />
		<result property="ISLAMIC_FLAG" javaType="string" />
		<result property="ISLAMIC_FLAG_DESC" javaType="string" />
		
		<result property="TAG_ABANDONED" javaType="string"/>
		<result property="TAG_ADMIN_MONITORING" javaType="string"/>
		<result property="TAG_AKPK_FLAG" javaType="string"/>
		<result property="TAG_AUCTION" javaType="string"/>
		<result property="TAG_AUCTION_RECEIVED_BALANCE" javaType="string"/>
		<result property="TAG_AUCTION_RECEIVED_DEPOSIT" javaType="string"/>
		<result property="TAG_BANKRUPT" javaType="string"/>
		<result property="TAG_BLD" javaType="string"/>
		<result property="TAG_DEBT_SALES" javaType="string"/>
		<result property="TAG_DECEASED" javaType="string"/>
		<result property="TAG_DIBS" javaType="string"/>
		<result property="TAG_ECA_MONITORING" javaType="string"/>
		<result property="TAG_EPF_WITHDRAWAL" javaType="string"/>
		<result property="TAG_FRAUD" javaType="string"/>
		<result property="TAG_LEGAL_MONITORING" javaType="string"/>
		<result property="TAG_MORATORIUM" javaType="string"/>
		<result property="TAG_NEW_DISBUREMENT" javaType="string"/>
		<result property="TAG_PENDING_BPP" javaType="string"/>
		<result property="TAG_REDEMPTION_STATEMENT" javaType="string"/>
		<result property="TAG_REPO" javaType="string"/>
		<result property="TAG_REPO_REDEEM" javaType="string"/>
		<result property="TAG_RNR" javaType="string"/>
		<result property="TAG_SECURITY_DEPOSIT" javaType="string"/>
		<result property="TAG_SETTLEMENT_PROPOSAL" javaType="string"/>
		<result property="TAG_SHORTFALL" javaType="string"/>
		<result property="TAG_TPD" javaType="string"/>
		<result property="TAG_TPD_REJECTED" javaType="string"/>
		<result property="TAG_UNDER_CONSTRUCTION" javaType="string"/>
		<result property="TAG_WRITE_OFF" javaType="string"/>
		<result property="ACC_STS" javaType="string"/>
	</resultMap>
	<select id="getLegalMonitoringCustomerAccountData" resultMap="getLegalMonitoringCustomerAccountData">
		SELECT 
		A.ID AS ACCOUNT_ID,
		C.ID AS CUSTOMER_ID,
		C.CUSTOMER_NO,
		A.ACCOUNT_NO,
		C.CUSTOMER_NAME,
		C.CUSTOMER_ID_NO,
		COALESCE(A.DAYS_PAST_DUE,0) AS DIA ,
		COALESCE(A.MONTHS_IN_ARREARS,0) AS MIA,
		COALESCE(A.MONTHS_IN_ARREARS,0) AS MONTHS_IN_ARREARS,
		COALESCE(AW.MONTHS_IN_ARREARS,0) AS BEGIN_MIA,
		
		A.NPL_DATE AS NPF_DATE,
		0 AS CURRENT_NLB,
		0 AS BEGIN_NLB,
		COALESCE(A.OUTSTANDING_BALANCE,0) AS OUTSTANDING_BALANCE,
		COALESCE(A.CURRENT_BALANCE,0) AS CURRENT_BALANCE,
		PR.DESCRIPTION AS PRODUCT_CATEGORY,
		R.DESCRIPTION AS FINANCING_TYPE,
		R.DESCRIPTION AS PRODUCT_TYPE,
		STATUS.DESCRIPTION AS ACCOUNT_STATUS,
		A.CHARGE_OFF_DATE AS CHARGE_OFF_DATE,
		
		A.FULL_RELEASE_DATE AS FULL_RELEASE_DATE,
		AWW.WORK_LIST_NAME AS COLLECTOR_WORKLIST, 
		CASE WHEN AWW.WORK_LIST_NAME IS NOT NULL THEN AW.ASSIGNMENT_DATE END AS COLLECTOR_ASSIGN_DATE,
		LW.ASSIGNMENT_DATE AS LW_ASSIGNMENT_DATE, 
		W.DESCRIPTION AS LEGAL_WORKLIST,
		B.CODE AS BRANCH_CODE,
		B.DESCRIPTION AS BRANCH_NAME,
		A.LAST_PAYMENT_DATE,
		A.LAST_PAYMENT_AMOUNT,
		A.PAYMENT_AMOUNT AS TOTAL_MONTHLY_PAYMENT,
		
		A.RELEASED_AMOUNT AS FINANCING_AMOUNT,
		LUW.USER_ID AS DEFAULT_USER,
		case when sptf.is_islamic=true then 'Islamic' else 'Non Islamic' end as MODE_OF_ACCOUNT,
		reg.description as REGION,
		red.redemption_date as REDEMPTION_STATEMENT,
		(a.current_balance - a.interest_rebate_amount - isl.sptf_profit_outstanding_amount - isl.sptf_profit_overdue_amount ) as PRINCIPAL_BALANCE,
		c.CUSTOMER_ID_NO as PRIMARY_ID,
		a.STATUS_ID as ACCOUNT_STATUS_ID,
		a.full_release_date as LAST_DISBURSE_DATE,
		a.maturity_date as MATURE_DATE,
		
		a.interest_rate as PROFIT_RATE,
		a.outstanding_balance - (a.interest_rebate_amount + a.write_off_amount) as GROSS_BALANCE,
		NULL as ARREARS_AMNT,
		a.other_charge as OTHER_CHARGES,
		a.total_amount_due as TOTAL_DUE,
		a.mtd_payment_received_amount as PAYMENT_RECEIVED_MTD,
		NULL as PAYMENT_STS_31,
		a.advance_payment_amount as ADVANCED_PAYMENT,
		coalesce(a.payment_amount,0) as MONTHLY_INSTALLMENT,
		NULL as MIA_ID_ORI,
		
		NULL as MOVEMENT,
		NULL as REMARK_AS,
		a.mtd_payment_received_amount as PAYMENT_MTD,
		NULL as PAYMENT_STS_02,
		a.last_payment_date as LAST_PYMT_DT,
		a.outstanding_balance as OUTSTANDING_BAL,
		a.outstanding_balance - (a.interest_rebate_amount + a.write_off_amount)  as GROSS_BAL,
		NULL as ARREARS_AMOUNT,
		NULL as JUL,
		NULL as PAYMENT_TREND,
		
		NULL as STATUS,
		NULL as WASLAH_STATUS,

		ptrtreatment_status_ref.description as ACTION_STATUS,
		coalesce(ptrlegal_action_ref.tat_period,0) as TAT,
		ptrlegal_action_process.created_time as COMPLETED_DATE,
		ptraccount_agency_assignment.created_time as ASSIGNED_DATE,
		DATE_PART('day', ptrlegal_action_process.created_time - ptraccount_agency_assignment.created_time) as TAT_INTERVAL,
		case
		  when DATE_PART('day', ptrlegal_action_process.created_time - ptraccount_agency_assignment.created_time) > 0
		  then 'ff0000'
		end as TAT_COLOR,

        case
            when wlt_ref.code='NPF' then

                case
                    when (COALESCE(AW.MONTHS_IN_ARREARS,0)>=4 and COALESCE(A.MONTHS_IN_ARREARS,0) = 2)
                    then 'FFC0CB'

                    when (COALESCE(AW.MONTHS_IN_ARREARS,0)>=4 and COALESCE(A.MONTHS_IN_ARREARS,0) = 1)
                    then 'FFC0CB'

                    when (COALESCE(AW.MONTHS_IN_ARREARS,0)>=4 and COALESCE(A.MONTHS_IN_ARREARS,0) = 0)
                    then 'FFC0CB'
                end

            when wlt_ref.code='PNPF' then

                case
                    when (COALESCE(AW.MONTHS_IN_ARREARS,0)=3 and COALESCE(A.MONTHS_IN_ARREARS,0) = 2)
                    then 'FFC0CB'

                    when (COALESCE(AW.MONTHS_IN_ARREARS,0)=3 and COALESCE(A.MONTHS_IN_ARREARS,0) = 1)
                    then 'FFC0CB'

                    when (COALESCE(AW.MONTHS_IN_ARREARS,0)=3 and COALESCE(A.MONTHS_IN_ARREARS,0) = 0)
                    then 'FFC0CB'
                end

        end as ABORT_COLOR,
		a.old_account_no as OLD_ACCOUNT_NUMBER,
		CAST(SUBSTR(A.ACCOUNT_NO,12,1) as NUMERIC) as CHECK_DIGIT,
		case when sptf.is_islamic=true then 'Yes' when sptf.is_islamic=false then 'No' end as IS_ISLAMIC,
		sptf.description as IS_ISLAMIC_FLAG,
		
		case when tag.abandoned=true then 'Yes' when tag.abandoned=false then 'No' end as TAG_ABANDONED,
case when tag.admin_monitoring=true then 'Yes' when tag.admin_monitoring=false then 'No' end as TAG_ADMIN_MONITORING,
case when tag.akpk_flag=true then 'Yes' when tag.akpk_flag=false then 'No' end as TAG_AKPK_FLAG,
case when tag.auction=true then 'Yes' when tag.auction=false then 'No' end as TAG_AUCTION,
case when tag.auction_received_balance=true then 'Yes' when tag.auction_received_balance=false then 'No' end as TAG_AUCTION_RECEIVED_BALANCE,
case when tag.auction_received_deposit=true then 'Yes' when tag.auction_received_deposit=false then 'No' end as TAG_AUCTION_RECEIVED_DEPOSIT,
case when tag.bankrupt=true then 'Yes' when tag.bankrupt=false then 'No' end as TAG_BANKRUPT,
case when tag.bld=true then 'Yes' when tag.bld=false then 'No' end as TAG_BLD,
case when tag.debt_sales=true then 'Yes' when tag.debt_sales=false then 'No' end as TAG_DEBT_SALES,
case when tag.deceased=true then 'Yes' when tag.deceased=false then 'No' end as TAG_DECEASED,
case when tag.dibs=true then 'Yes' when tag.dibs=false then 'No' end as TAG_DIBS,
case when tag.eca_monitoring=true then 'Yes' when tag.eca_monitoring=false then 'No' end as TAG_ECA_MONITORING,
case when tag.epf_withdrawal=true then 'Yes' when tag.epf_withdrawal=false then 'No' end as TAG_EPF_WITHDRAWAL,
case when tag.fraud=true then 'Yes' when tag.fraud=false then 'No' end as TAG_FRAUD,
case when tag.legal_monitoring=true then 'Yes' when tag.legal_monitoring=false then 'No' end as TAG_LEGAL_MONITORING,
case when tag.moratorium=true then 'Yes' when tag.moratorium=false then 'No' end as TAG_MORATORIUM,
case when tag.new_disbursement=true then 'Yes' when tag.new_disbursement=false then 'No' end as TAG_NEW_DISBUREMENT,
case when tag.pending_bpp=true then 'Yes' when tag.pending_bpp=false then 'No' end as TAG_PENDING_BPP,
case when tag.redemption_statement=true then 'Yes' when tag.redemption_statement=false then 'No' end as TAG_REDEMPTION_STATEMENT,
case when tag.repo=true then 'Yes' when tag.repo=false then 'No' end as TAG_REPO,
case when tag.repo_redeem=true then 'Yes' when tag.repo_redeem=false then 'No' end as TAG_REPO_REDEEM,
case when tag.rnr=true then 'Yes' when tag.rnr=false then 'No' end as TAG_RNR,
case when tag.security_deposit=true then 'Yes' when tag.security_deposit=false then 'No' end as TAG_SECURITY_DEPOSIT,
case when tag.settlement_proposal=true then 'Yes' when tag.settlement_proposal=false then 'No' end as TAG_SETTLEMENT_PROPOSAL,
case when tag.shortfall=true then 'Yes' when tag.shortfall=false then 'No' end as TAG_SHORTFALL,
case when tag.tpd=true then 'Yes' when tag.tpd=false then 'No' end as TAG_TPD,
case when tag.tpd_rejected=true then 'Yes' when tag.tpd_rejected=false then 'No' end as TAG_TPD_REJECTED,
case when tag.under_construction=true then 'Yes' when tag.under_construction=false then 'No' end as TAG_UNDER_CONSTRUCTION,
case when tag.write_off=true then 'Yes' when tag.write_off=false then 'No' end as TAG_WRITE_OFF,
STATUS.DESCRIPTION AS ACC_STS

		
		FROM PTRACCOUNT A
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID AS BIGINT)=C.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON PR.ID=R.CATEGORY_ID
		INNER JOIN PTRACCOUNT_STATUS_REF STATUS ON STATUS.ID=A.STATUS_ID
		LEFT JOIN PTRACCOUNT_WORK_LIST_ASSIGNMENT AW ON AW.ACCOUNT_ID=A.ID
		LEFT JOIN PTRWORK_LIST AWW ON AWW.WORK_LIST_ID=AW.WORK_LIST_ID
		LEFT JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT LW ON LW.ACCOUNT_ID=A.ID
		LEFT JOIN PTRLEGAL_USER_WL_ASSIGN LUW ON LUW.WORKLIST_ID=LW.WORKLIST_ID AND LUW.DEFAULT_USER = <include refid="true"/>
		LEFT JOIN PTRLEGAL_WORKLIST W ON W.ID=LW.WORKLIST_ID
		LEFT JOIN PTRBANK_BRANCH_REF B ON B.ID=A.BANK_BRANCH_ID
		left join ptrregion_ref reg on reg.id=b.region_id
		left join ptraccount_islamic_det isl on isl.account_id=a.id
		left join ptraccount_redemption_statement red on red.account_id=a.id
		left join ptrsptf_type_ref sptf on sptf.id=a.sptf_type_id

		left join ptrlegal_action_process ptrlegal_action_process on ptrlegal_action_process.account_id = a.id
		left join ptrlegal_action_ref ptrlegal_action_ref on ptrlegal_action_process.action_id = ptrlegal_action_ref.id
		left join ptrtreatment_status_ref ptrtreatment_status_ref on ptrtreatment_status_ref.id = ptrlegal_action_process.status_id
		left join ptraccount_agency_assignment ptraccount_agency_assignment on ptraccount_agency_assignment.id = ptrlegal_action_process.agency_assignment_id
        left join ptrwork_list_category_ref wlt_ref on AWW.work_list_category = wlt_ref.id
		left join ptraccount_treatment_tagging tag on tag.account_id=a.id
		<isNotEmpty property="ACCOUNTS">
		where A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
		where 1 = 0
		</isEmpty>
	</select>
	<resultMap class="hmap" id="getLegalMonitoringCustomerPropertyData">
		<result property="ACCOUNT_ID" javaType="long" />	
		<result property="PROPERTY_ADDRESS" javaType="string" />	
		<result property="TITLE_NO" javaType="string" />
		<result property="COLLATERAL_CODE" javaType="string" />
		<result property="LOCATION_OF_LOT" javaType="string" />
		<result property="MUKIM" javaType="string" />		
	</resultMap>
	<select id="getLegalMonitoringCustomerPropertyData" resultMap="getLegalMonitoringCustomerPropertyData">
		SELECT A.ID AS ACCOUNT_ID,
		COALESCE(C.LOCATION_OF_LOT_1,'')||', '||COALESCE(C.LOCATION_OF_LOT_2,'')||', '||COALESCE(C.LOCATION_OF_LOT_LINE_3,'') AS PROPERTY_ADDRESS,
		C.TITLE_NO,CT.CODE AS COLLATERAL_CODE,
		COALESCE(C.LOCATION_OF_LOT_1,'')||', '||COALESCE(C.LOCATION_OF_LOT_2,'')||', '||COALESCE(C.LOCATION_OF_LOT_LINE_3,'') AS LOCATION_OF_LOT,
		C.COUNTY_DISTRICT_TOWN AS MUKIM
		FROM PTRACCOUNT A
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON PR.ID=R.CATEGORY_ID AND PR.CODE='PF'
		INNER JOIN PTRACCOUNT_COLLATERAL_REL CR ON CR.ACCOUNT_ID=A.ID
		INNER JOIN PTRCOLLATERAL C ON C.ID=CR.COLLATERAL_ID
		INNER JOIN PTRCOLLATERAL_TYPE_REF CT ON CT.ID=C.TYPE_ID
		<isNotEmpty property="ACCOUNTS">
		where A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
		where 1 = 0
		</isEmpty>
	</select>	
	<resultMap id="getAgencyAssignmentDetails" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="AGENCY_NAME" javaType="string" />
		<result property="ASSIGNED_ON" javaType="date" />
		<result property="ASSIGNED_BY" javaType="string" />
		<result property="APPROVED_ON" javaType="date" />
		<result property="APPROVE_DATE" javaType="date" />
		<result property="APPROVED_BY" javaType="string" />
		<result property="ACKNOWLEDGED_ON" javaType="date" />
		<result property="ACKNOWLEDGED_BY" javaType="string" />
		<result property="EFFECTIVE_DATE" javaType="date" />
		<result property="CONTRACT_NAME" javaType="string" />
		<result property="EXPECTED_ABORT_DATE" javaType="date" />
		<result property="SUBTYPE_ID" javaType="long" />
		<result property="ASSIGNMENT_TYPE" javaType="string" />
		<result property="ABORT_REASON" javaType="string"/>
		<result property="CASE_NUMBER" javaType="string"/>
		<result property="LAST_ECA_INSTRUCTION" javaType="string"/>
		<result property="LAST_ECA_INSTRUCTION_DATE" javaType="date"/>
		<result property="CURRENT_LEGAL_FIRM" javaType="string"/>
		<result property="LEGAL_FIRM_CONTRACT" javaType="string"/>
		<result property="USER_ASSIGNMENT_ID" javaType="string"/>
		<result property="FORECLOSURE_TYPE" javaType="string"/>
	</resultMap>
	<select id="getAgencyAssignmentDetails" resultMap="getAgencyAssignmentDetails">
		SELECT
		AG.ID,
		G.DESCRIPTION AS AGENCY_NAME,
		AG.CREATED_TIME AS ASSIGNED_ON,
		AG.CREATED_BY,
		AG.APPROVED_DATE,
		AG.APPROVED_DATE,
		AG.APPROVED_BY,
		AG.ACKNOWLEDGED_DATE,
		AG.ACKNOWLEDGED_BY,
		E.EFFECTIVE_DATE,
		C.DESCRIPTION,
		AG.EXPECTED_END_DATE,
		AG.SUBTYPE_ID,
		S.DESCRIPTION AS ASSIGNMENT_TYPE,
		AR.DESCRIPTION AS ABORT_REASON,
		AG.CASE_NUMBER,
		ECAI.DESCRIPTION AS LAST_ECA_INSTRUCTION,
		AG.LAST_ECA_INSTRUCTION_DATE AS LAST_ECA_INSTRUCTION_DATE,
		G.DESCRIPTION AS AGENCY_NAME,
		C.DESCRIPTION,
		AG.CREATED_BY,
		CASE WHEN SB.TYPE_ID=51 THEN SB.DESCRIPTION END AS FORECLOSURE_TYPE
		FROM PTRACCOUNT_AGENCY_ASSIGNMENT AG
		LEFT JOIN PTRTREATMENT_SUBTYPE_REF SB ON SB.ID=AG.SUBTYPE_ID
		LEFT JOIN PTRAGENCY_EFFECTIVE_ASSIGNMENT E ON E.AGENCY_ASSIGNMENT_ID=AG.ID
		LEFT JOIN PTRAGENCY G ON G.ID=AG.AGENCY_ID
		LEFT JOIN PTRAGENCY_CONTRACT C ON C.ID=AG.CONTRACT_ID
		LEFT JOIN PTRTREATMENT_SUBTYPE_REF S ON S.ID=AG.SUBTYPE_ID
		LEFT JOIN PTRAGENCY_ABORT_RECOMMENDATION AAR ON AAR.AGENCY_ASSIGNMENT_ID=AG.ID
		LEFT JOIN PTRLEGAL_ABORT_REASON_REF AR ON AR.ID=AAR.RECOMMENDED_ABORT_REASON_ID
		LEFT JOIN PTRINSTRUCTED_ACTION_REF ECAI ON ECAI.ID=AG.LAST_ECA_INSTRUCTION_ACTION_ID
		WHERE 
		<isNotEmpty property="ASSIGNMENTS">
		AG.ID IN (<iterate property="ASSIGNMENTS" conjunction=",">#ASSIGNMENTS[]#</iterate>,0)
		</isNotEmpty>
		<isEmpty property="ASSIGNMENTS">
		1=2
		</isEmpty>
	</select>
	
	<resultMap class="hmap" id="getLegalMonitoringCustomerMailingAddress">
		<result property="CUSTOMER_ID" javaType="string" />	
		<result property="POSTAL_ADDRESS" javaType="string"/>
		
	</resultMap>
	<select id="getLegalMonitoringCustomerMailingAddress" resultMap="getLegalMonitoringCustomerMailingAddress">
	select a.CUSTOMER_ID, a.POSTAL_ADDRESS from (
		SELECT 
		c.ID as CUSTOMER_ID,
		coalesce(ho.line_1||',','')||''||
		coalesce(ho.line_2||',','')||''||
		coalesce(ho.line_3||',','')||''||
		coalesce(ho.line_4||',','')||''||
		coalesce(ho.line_5||',','')||''||
		coalesce(ho.city||',','')||''||
		coalesce(ho.postal_code||',','')||''||
		coalesce(st.description||',','')||''||
		coalesce(co.description) as POSTAL_ADDRESS,
		row_number() over(partition by c.ID order by ho.id desc) as RNUM
		FROM PTRACCOUNT A
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID AS BIGINT)=C.ID
		inner join ptrhost_address ho on ho.customer_id=c.id
		inner join ptrhost_address_type_ref hoy on hoy.id=ho.host_address_type_id
		left join ptrstate_ref st on st.id=ho.state_id
		left join ptrcountry_ref co on co.id=ho.country_id
		where hoy.code='M'
		<isNotEmpty property="ACCOUNTS">
		and A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
		and 1 = 0
		</isEmpty>
		)a where a.RNUM=1
	</select>

	<resultMap class="hmap" id="getLegalMonitoringLastActionDetails">
	<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
	<result property="LAST_ACTION" javaType="string"/>
	<result property="LAST_ACTION_DATE" javaType="date"/>
	<result property="LAST_ACTION_STATUS" javaType="string"/>
	<result property="LAST_ACTION_REMARKS" javaType="string"/>
	</resultMap>

	<select id="getLegalMonitoringLastActionDetails" resultMap="getLegalMonitoringLastActionDetails">
		select
		ass.ID as AGENCY_ASSIGNMENT_ID,
		lar.description as LAST_ACTION,
		coalesce(lp.updated_time,lp.created_time) as LAST_ACTION_DATE,
		st.description as LAST_ACTION_STATUS,
		rem.remarks as LAST_ACTION_REMARKS
		from ptraccount_agency_assignment ass
		inner join ptrlegal_action_process lp on lp.id=ass.last_process_id
		inner join ptrlegal_action_ref lar on lar.id=lp.action_id
		inner join ptrlegal_action_remarks rem on rem.process_id=lp.id
		inner join ptrtreatment_status_ref st on st.id=lp.status_id
		<isNotEmpty property="ASSIGNMENTS">
			where ass.ID IN (
			<iterate property="ASSIGNMENTS" conjunction=",">#ASSIGNMENTS[]#</iterate>,0)
		</isNotEmpty>
		<isEmpty property="ASSIGNMENTS">
			where 1=2
		</isEmpty>
	</select>
	
	<sql id="commonSearchFilterFragment">
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NAME"> and UPPER(C.CUSTOMER_NAME) LIKE '%'||UPPER(#CUSTOMER_NAME#)||'%'</isNotEmpty>
		<isNotEmpty property="CUSTOMER_NUMBER"> and UPPER(C.CUSTOMER_ID_NO) LIKE '%'||UPPER(#CUSTOMER_NUMBER#)||'%'</isNotEmpty>
		<isNotNull property="PRODUCT_CATEGORY_ID"> and PR.ID=#PRODUCT_CATEGORY_ID# </isNotNull>	
		<isNotNull property="ASSIGNED_DATE_FROM"> 
		<isNotNull property="ASSIGNED_DATE_TO"> 
		and AG.APPROVED_DATE BETWEEN #ASSIGNED_DATE_FROM# AND #ASSIGNED_DATE_TO#
		</isNotNull>
		</isNotNull>	
	</sql>
	<sql id="assignmentSearchFilterFragment">
		<isNotNull property="AGENCY_ID"> and AG.AGENCY_ID=#AGENCY_ID# </isNotNull>
		<isNotNull property="SUBTYPE_ID"> and SR.ID=#SUBTYPE_ID# </isNotNull>	
		<isNotEmpty property="CASE_NUMBER"> and UPPER(AG.CASE_NUMBER) LIKE '%'||UPPER(#CASE_NUMBER#)||'%'</isNotEmpty>
	</sql>
	
<!-- pending acknowledgement -->

	<sql id="legalPendingAcknowledgementFragment">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_ASSIGNMENT_ACKNOWLEDGEMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="INSTRUCTION_ID"> and AG.LAST_INSTRUCTION_ID=#INSTRUCTION_ID# </isNotNull>
	</sql>		
	
	<select id="getLegalPendingAcknowledgementAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="legalPendingAcknowledgementFragment"/>
		) A 
	</select>
	
	<resultMap id="getLegalPendingAcknowledgementAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getLegalPendingAcknowledgementAccountIds" resultMap="getLegalPendingAcknowledgementAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="legalPendingAcknowledgementFragment"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	
<!-- closed instructions -->
	<sql id="closedInstructionAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,I.PROCESS_ID,LA.ACTION_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_INSTRUCTION I ON I.AGENCY_ASSIGNMENT_ID=AG.ID AND I.DISABLE = <include refid="true"/>
		INNER JOIN PTRLEGAL_ACTION_PROCESS LA ON LA.ID=I.PROCESS_ID AND LA.STATUS_ID !=15007
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID# 
		<include refid="excludeSpecialAction"/>
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="INSTRUCTION_ID"> and LA.ACTION_ID=#INSTRUCTION_ID# </isNotNull>	
	</sql>
	<select id="getClosedInstructionTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="closedInstructionAccountIdFragments"/>
		) A 
	</select>	
	<resultMap id="getClosedInstructionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="INSTRUCTION_PROCESS_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	
	<select id="getClosedInstructionAccountIds" resultMap="getClosedInstructionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.PROCESS_ID,A.ROW_NUMBER FROM
		(
		<include refid="closedInstructionAccountIdFragments"/>
		) A 
		<include refid="pageFragment"/>
	</select>
	
	<!-- current assignment -->
	<sql id="currentAssignmentAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID<isEqual property="USER_TYPE_ID" compareValue="2"> and AG.acknowledged_date is not null</isEqual>
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		LEFT JOIN PTRAGENCY_EFFECTIVE_ASSIGNMENT E ON E.AGENCY_ASSIGNMENT_ID=AG.ID
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		<isNotEqual property="MODE" compareValue="ECA">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="INSTRUCTION_ID"> and AG.LAST_INSTRUCTION_ID=#INSTRUCTION_ID# </isNotNull>
	</sql>
	<select id="getCurrentAssignmentAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		) A 
	</select>	
	<resultMap id="getCurrentAssignmentsAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getCurrentAssignmentsAccountIds" resultMap="getCurrentAssignmentsAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	
	<!-- pending for instruction -->
	<select id="getPendingInstructionAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		and not exists(
		select 1 from ptrlegal_action_instruction lai 
		where lai.agency_assignment_id=ag.id and (lai.disable is null or lai.disable =<include refid="false"/>)
		)
		) A 
	</select>		
	
	<resultMap class="hmap" id="getLegalMonitoringLastInstructionDetails">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="LAST_INSTRUCTION" javaType="string" />
		<result property="LAST_INSTRUCTION_REMARKS" javaType="string" />
		<result property="LAST_INSTRUCTION_BY" javaType="string" />
		<result property="LAST_INSTRUCTION_DATE" javaType="date" />
		<result property="LAST_UPDATE" javaType="string"/>
		<result property="LAST_UPDATE_STATUS" javaType="string"/>
		<result property="LAST_UPDATE_DATE" javaType="date"/>
		<result property="ASSIGNED_ON" javaType="date"/>
		<result property="ACKNOWLEDGED_ON" javaType="date"/>
	</resultMap>

	<select id="getLegalMonitoringLastInstructionDetails" resultMap="getLegalMonitoringLastInstructionDetails">
		select 
		i.agency_assignment_id, 
		lars.description as LAST_INSTRUCTION, 
		rem.remarks as LAST_INSTRUCTION_REMARKS, 
		lp.created_by as LAST_INSTRUCTION_BY, 
		lp.created_time as LAST_INSTRUCTION_DATE,
		lp.updated_by as LAST_UPDATE,
		st.description as LAST_UPDATE_STATUS,
		lp.updated_time as LAST_UPDATE_DATE,
		assg.created_time AS ASSIGNED_ON,
		assg.acknowledged_date AS ACKNOWLEDGED_ON
		from ptrlegal_action_instruction i
		inner join ptrlegal_action_process lp on lp.id=i.latest_action_process_id
		inner join ptrlegal_action_ref lar on lar.id=lp.action_id
		inner join ptrlegal_action_ref lars on lars.id=lar.instruction_id
		inner join ptrlegal_action_remarks rem on rem.process_id=lp.id
		inner join ptrtreatment_status_ref st on st.id=lp.status_id
		inner join ptraccount_agency_assignment assg on assg.id = i.agency_assignment_id
		<isNotEmpty property="ASSIGNMENTS">
			where i.AGENCY_ASSIGNMENT_ID IN (
			<iterate property="ASSIGNMENTS" conjunction=",">#ASSIGNMENTS[]#</iterate>,0)
		</isNotEmpty>
		<isEmpty property="ASSIGNMENTS">
			where 1=2
		</isEmpty>
		order by i.agency_assignment_id, i.latest_action_process_id asc
	</select>

	<select id="getPendingAbortAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		AND AG.EXPECTED_END_DATE &lt;=#TWENTY_DAYS_AFTER#
		) A 
	</select>
	
	<select id="getRetainRequestedAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		AND AG.RETAIN_REQUESTED = <include refid="true"/>
		) A 
	</select>
	
	<select id="getFollowUpAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="followUpAccountIdFragments"/>
		) A 
	</select>
	<resultMap id="getPendingInstructionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>	
	<select id="getPendingInstructionAccountIds" resultMap="getPendingInstructionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		and not exists(
		select 1 from ptrlegal_action_instruction lai where lai.agency_assignment_id=ag.id and (lai.disable is null or lai.disable =<include refid="false"/>)
		)
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	<resultMap id="getPendingAbortAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getPendingAbortAccountIds" resultMap="getPendingAbortAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		AND AG.EXPECTED_END_DATE &lt;=#TWENTY_DAYS_AFTER#
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>	
	<resultMap id="getRetainRequestedAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getRetainRequestedAccountIds" resultMap="getRetainRequestedAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="currentAssignmentAccountIdFragments"/>
		AND AG.RETAIN_REQUEST =<include refid="true"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	<sql id="newInstructionAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,I.PROCESS_ID,LA.ACTION_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_INSTRUCTION I ON I.AGENCY_ASSIGNMENT_ID=AG.ID AND I.LATEST_ACTION_PROCESS_ID IS NULL
		INNER JOIN PTRLEGAL_ACTION_PROCESS LA ON LA.ID=I.PROCESS_ID AND LA.STATUS_ID=15007
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID# 
		<include refid="excludeSpecialAction"/>
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="INSTRUCTION_ID"> and LA.ACTION_ID=#INSTRUCTION_ID# </isNotNull>
		<isNotEmpty property="ACCOUNT_NUMBER">and UPPER(A.ACCOUNT_NO) LIKE '%'||UPPER(#ACCOUNT_NUMBER#)||'%'</isNotEmpty>		
	</sql>
	
	<select id="getNewInstructionTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="newInstructionAccountIdFragments"/>
		) A 
	</select>
	<resultMap id="getNewInstructionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="INSTRUCTION_PROCESS_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	
	<select id="getNewInstructionAccountIds" resultMap="getNewInstructionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.PROCESS_ID,A.ROW_NUMBER FROM
		(
		<include refid="newInstructionAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	
	<sql id="inProgressInstructionAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,I.PROCESS_ID,LA.ACTION_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_INSTRUCTION I ON I.AGENCY_ASSIGNMENT_ID=AG.ID AND I.LATEST_ACTION_PROCESS_ID IS NOT NULL
		INNER JOIN PTRLEGAL_ACTION_PROCESS LA ON LA.ID=I.PROCESS_ID AND LA.STATUS_ID=15007
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="excludeSpecialAction"/>
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="INSTRUCTION_ID"> and LA.ACTION_ID=#INSTRUCTION_ID# </isNotNull>		
	</sql>
	
	<select id="getInProgressInstructionTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="inProgressInstructionAccountIdFragments"/>
		) A 
	</select>
	<resultMap id="getInProgressInstructionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="INSTRUCTION_PROCESS_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	
	<select id="getInProgressInstructionAccountIds" resultMap="getInProgressInstructionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.PROCESS_ID,A.ROW_NUMBER FROM
		(
		<include refid="inProgressInstructionAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	
	<sql id="inProgressAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,FU.PROCESS_ID,LA.ACTION_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_IN_PROGRESS_ACTION FU ON FU.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_PROCESS LA ON LA.ID=FU.PROCESS_ID AND LA.STATUS_ID=15007
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="excludeSpecialAction"/>
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="IN_PROGRESS_ACTION_ID"> and LA.ACTION_ID=#IN_PROGRESS_ACTION_ID# </isNotNull>
		<isNotNull property="INSTRUCTION_ID"> and LA.ACTION_ID=#INSTRUCTION_ID# </isNotNull>		
	</sql>
	<select id="getInProgressAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="inProgressAccountIdFragments"/>
		) A 
	</select>
	
		
	<resultMap id="getInProgressActionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="PROCESS_ID" javaType="long" />
		<result property="ACTION_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getInProgressActionAccountIds" resultMap="getInProgressActionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.PROCESS_ID,A.ACTION_ID,A.ROW_NUMBER FROM
		(
		<include refid="inProgressAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	
	<sql id="inProgressRemedialAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,FU.PROCESS_ID,LA.ACTION_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_IN_PROGRESS_REMEDIAL_ACTION FU ON FU.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_PROCESS LA ON LA.ID=FU.PROCESS_ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="IN_PROGRESS_SPECIAL_ACTION_ID"> and LA.ACTION_ID=#IN_PROGRESS_SPECIAL_ACTION_ID# </isNotNull>	
		<isNotNull property="INSTRUCTION_ID"> and LA.ACTION_ID=#INSTRUCTION_ID# </isNotNull>
	</sql>
	<select id="getInProgressRemedialAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="inProgressRemedialAccountIdFragments"/>
		) A 
	</select>
	
		
	<resultMap id="getInProgressRemedialActionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="PROCESS_ID" javaType="long" />
		<result property="ACTION_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getInProgressRemedialActionAccountIds" resultMap="getInProgressRemedialActionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.PROCESS_ID,A.ACTION_ID,A.ROW_NUMBER FROM
		(
		<include refid="inProgressRemedialAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	<!-- aborted accounts -->
	<sql id="abortedAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_ABORTED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="ABORT_REASON_ID"> and AG.ABORT_REASON_ID=#ABORT_REASON_ID# </isNotNull>	
		<isNotNull property="INSTRUCTION_ID"> and AG.LAST_INSTRUCTION_ID=#INSTRUCTION_ID# </isNotNull>	
	</sql>
	
	<select id="getAbortedAccountTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.AGENCY_ASSIGNMENT_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.ACCOUNT_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="abortedAccountIdFragments"/>
		) A 
	</select>
	<resultMap id="getAbortedAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>	
	<select id="getAbortedAccountIds" resultMap="getAbortedAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.ROW_NUMBER FROM
		(
		<include refid="abortedAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>
	<!-- active instruction -->
	
	<sql id="activeInstructionAccountIdFragments">
		SELECT A.ID AS ACCOUNT_ID,AG.ID AS AGENCY_ASSIGNMENT_ID,I.PROCESS_ID,LA.ACTION_ID,ROW_NUMBER()OVER ()  as ROW_NUMBER
		FROM PTRACCOUNT A
		INNER JOIN PTRACCOUNT_AGENCY_ASSIGNMENT AG ON AG.ACCOUNT_ID=A.ID
		INNER JOIN PTRAGENCY_MONITORED_ASSIGNMENT AP ON AP.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_INSTRUCTION I ON I.AGENCY_ASSIGNMENT_ID=AG.ID
		INNER JOIN PTRLEGAL_ACTION_PROCESS LA ON LA.ID=I.PROCESS_ID AND LA.STATUS_ID=15007
		INNER JOIN PTRTREATMENT_SUBTYPE_REF SR ON AG.SUBTYPE_ID=SR.ID
		INNER JOIN PTRPRODUCT_TYPE_REF R ON R.ID=A.PRODUCT_TYPE_ID
		INNER JOIN PTRPRODUCT_TYPE_CATEGORY_REF PR ON R.CATEGORY_ID=PR.ID 
		INNER JOIN PTRCUSTOMER C ON CAST(A.CUSTOMER_ID as BIGINT)= C.ID 
		<isNotEqual property="USER_TYPE_ID" compareValue="2">
		INNER JOIN PTRACCOUNT_LEGAL_WORKLIST_ASSIGNMENT WA ON WA.ACCOUNT_ID=A.ID 
		<isNotNull property="WORKLIST_ID"> and WA.WORKLIST_ID=#WORKLIST_ID# </isNotNull>
		INNER JOIN PTRLEGAL_USER_WL_ASSIGN UW ON UW.WORKLIST_ID=WA.WORKLIST_ID AND UW.USER_ID =#LOGON_USER#
		</isNotEqual>
		WHERE SR.TYPE_ID=#PROCESS_TYPE_ID#
		<include refid="commonSearchFilterFragment"/>
		<include refid="assignmentSearchFilterFragment"/>
		<isNotNull property="INSTRUCTION_ID"> and LA.ACTION_ID=#INSTRUCTION_ID# </isNotNull>		
	</sql>
	
	<select id="getActiveInstructionTotalCount" resultMap="global.totalPage">
		SELECT 
		COUNT(A.PROCESS_ID) as TOTAL_RECORD,
		CEIL(COUNT(A.PROCESS_ID)/CAST(#LIMIT_BY# AS DECIMAL)) AS TOTAL_PAGE
		FROM
		(
		<include refid="activeInstructionAccountIdFragments"/>
		) A 
	</select>
	<resultMap id="getActiveInstructionAccountIds" class="hmap">
		<result property="AGENCY_ASSIGNMENT_ID" javaType="long" />
		<result property="ACCOUNT_ID" javaType="long" />
		<result property="PROCESS_ID" javaType="long" />
		<result property="ACTION_ID" javaType="long" />
		<result property="RNUM" javaType="long" />
	</resultMap>
	<select id="getActiveInstructionAccountIds" resultMap="getActiveInstructionAccountIds">
		SELECT A.AGENCY_ASSIGNMENT_ID,A.ACCOUNT_ID,A.PROCESS_ID,A.ACTION_ID,A.ROW_NUMBER FROM
		(
		<include refid="activeInstructionAccountIdFragments"/>
		) A 
		WHERE A.ROW_NUMBER BETWEEN (((#CURRENT_PAGE# - 1) * #LIMIT_BY#)+1) AND  (#CURRENT_PAGE# * #LIMIT_BY#)
	</select>	
	
	
	
	
	<resultMap class="hmap" id="getLegalPreviousAssignmentDetails">
	<result property="ACCOUNT_ID" javaType="long"/>
	<result property="PREVIOUS_LEGAL_FIRM" javaType="string"/>
	<result property="LAST_ASSIGN_TYPE" javaType="string"/>
	<result property="LAST_ABORT_DATE" javaType="date"/>
	<result property="ABORT_STATUS" javaType="string"/>
	</resultMap>
	<select id="getLegalPreviousAssignmentDetails" resultMap="getLegalPreviousAssignmentDetails">
	select 
a.id as ACCOUNT_ID,
ag.description as PREVIOUS_LEGAL_FIRM,
sb.description as LAST_ASSIGN_TYPE,
ass.aborted_date as LAST_ABORT_DATE,
le.description as ABORT_STATUS
from ptraccount a
inner join ptraccount_agency_assignment ass on ass.account_id=a.id
inner join ptrtreatment_subtype_ref sb on sb.id=ass.subtype_id
inner join ptragency ag on ag.id=ass.agency_id
left join ptrlegal_abort_reason_ref le on le.id=ass.abort_reason_id
where not ass.status_id=15007
<isNotEmpty property="ACCOUNTS">
		and A.ID in(<iterate property="ACCOUNTS" conjunction=",">#ACCOUNTS[]#</iterate>)
		</isNotEmpty>
		<isEmpty property="ACCOUNTS">
		and 1 = 0
		</isEmpty>
		order by a.id, ass.id
	</select>
	
	
</sqlMap>